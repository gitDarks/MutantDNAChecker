"use strict";function cov_1xdou881zz(){var path="/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/services/db/db.service.ts";var hash="8e37fd07209e020a319f068383e228cf9c1ad325";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/services/db/db.service.ts",statementMap:{"0":{start:{line:2,column:16},end:{line:10,column:1}},"1":{start:{line:3,column:28},end:{line:3,column:110}},"2":{start:{line:3,column:91},end:{line:3,column:106}},"3":{start:{line:4,column:4},end:{line:9,column:7}},"4":{start:{line:5,column:36},end:{line:5,column:97}},"5":{start:{line:5,column:42},end:{line:5,column:70}},"6":{start:{line:5,column:85},end:{line:5,column:95}},"7":{start:{line:6,column:35},end:{line:6,column:100}},"8":{start:{line:6,column:41},end:{line:6,column:73}},"9":{start:{line:6,column:88},end:{line:6,column:98}},"10":{start:{line:7,column:32},end:{line:7,column:116}},"11":{start:{line:8,column:8},end:{line:8,column:78}},"12":{start:{line:11,column:0},end:{line:11,column:62}},"13":{start:{line:12,column:0},end:{line:12,column:30}},"14":{start:{line:13,column:0},end:{line:13,column:28}},"15":{start:{line:14,column:17},end:{line:14,column:46}},"16":{start:{line:15,column:26},end:{line:15,column:67}},"17":{start:{line:16,column:18},end:{line:16,column:36}},"18":{start:{line:19,column:8},end:{line:48,column:11}},"19":{start:{line:20,column:12},end:{line:20,column:45}},"20":{start:{line:21,column:12},end:{line:21,column:101}},"21":{start:{line:22,column:12},end:{line:22,column:71}},"22":{start:{line:23,column:38},end:{line:23,column:76}},"23":{start:{line:24,column:12},end:{line:34,column:13}},"24":{start:{line:25,column:40},end:{line:25,column:72}},"25":{start:{line:26,column:16},end:{line:32,column:17}},"26":{start:{line:27,column:20},end:{line:27,column:94}},"27":{start:{line:28,column:20},end:{line:28,column:68}},"28":{start:{line:31,column:20},end:{line:31,column:52}},"29":{start:{line:33,column:16},end:{line:33,column:61}},"30":{start:{line:35,column:12},end:{line:46,column:13}},"31":{start:{line:36,column:16},end:{line:45,column:17}},"32":{start:{line:37,column:20},end:{line:37,column:73}},"33":{start:{line:38,column:20},end:{line:38,column:81}},"34":{start:{line:39,column:20},end:{line:39,column:60}},"35":{start:{line:42,column:20},end:{line:42,column:69}},"36":{start:{line:43,column:20},end:{line:43,column:52}},"37":{start:{line:44,column:20},end:{line:44,column:63}},"38":{start:{line:47,column:12},end:{line:47,column:51}},"39":{start:{line:51,column:8},end:{line:53,column:11}},"40":{start:{line:52,column:12},end:{line:52,column:63}},"41":{start:{line:56,column:8},end:{line:58,column:11}},"42":{start:{line:57,column:12},end:{line:57,column:43}},"43":{start:{line:61,column:8},end:{line:63,column:11}},"44":{start:{line:62,column:12},end:{line:62,column:49}},"45":{start:{line:66,column:8},end:{line:69,column:11}},"46":{start:{line:67,column:12},end:{line:67,column:50}},"47":{start:{line:68,column:12},end:{line:68,column:40}},"48":{start:{line:72,column:8},end:{line:74,column:11}},"49":{start:{line:73,column:12},end:{line:73,column:52}},"50":{start:{line:77,column:8},end:{line:102,column:11}},"51":{start:{line:78,column:12},end:{line:78,column:57}},"52":{start:{line:79,column:12},end:{line:101,column:13}},"53":{start:{line:80,column:16},end:{line:80,column:105}},"54":{start:{line:81,column:16},end:{line:97,column:17}},"55":{start:{line:82,column:20},end:{line:90,column:21}},"56":{start:{line:83,column:43},end:{line:83,column:77}},"57":{start:{line:84,column:24},end:{line:84,column:49}},"58":{start:{line:85,column:24},end:{line:85,column:56}},"59":{start:{line:86,column:24},end:{line:86,column:117}},"60":{start:{line:89,column:24},end:{line:89,column:130}},"61":{start:{line:93,column:20},end:{line:93,column:53}},"62":{start:{line:94,column:20},end:{line:96,column:21}},"63":{start:{line:95,column:24},end:{line:95,column:61}},"64":{start:{line:100,column:16},end:{line:100,column:73}},"65":{start:{line:105,column:8},end:{line:105,column:47}},"66":{start:{line:106,column:8},end:{line:106,column:43}},"67":{start:{line:107,column:8},end:{line:107,column:37}},"68":{start:{line:110,column:8},end:{line:136,column:11}},"69":{start:{line:111,column:12},end:{line:135,column:13}},"70":{start:{line:112,column:27},end:{line:126,column:18}},"71":{start:{line:127,column:16},end:{line:127,column:26}},"72":{start:{line:130,column:16},end:{line:130,column:51}},"73":{start:{line:131,column:16},end:{line:134,column:19}},"74":{start:{line:139,column:0},end:{line:139,column:36}},"75":{start:{line:140,column:0},end:{line:140,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:44},end:{line:2,column:45}},loc:{start:{line:2,column:89},end:{line:10,column:1}},line:2},"1":{name:"adopt",decl:{start:{line:3,column:13},end:{line:3,column:18}},loc:{start:{line:3,column:26},end:{line:3,column:112}},line:3},"2":{name:"(anonymous_2)",decl:{start:{line:3,column:70},end:{line:3,column:71}},loc:{start:{line:3,column:89},end:{line:3,column:108}},line:3},"3":{name:"(anonymous_3)",decl:{start:{line:4,column:36},end:{line:4,column:37}},loc:{start:{line:4,column:63},end:{line:9,column:5}},line:4},"4":{name:"fulfilled",decl:{start:{line:5,column:17},end:{line:5,column:26}},loc:{start:{line:5,column:34},end:{line:5,column:99}},line:5},"5":{name:"rejected",decl:{start:{line:6,column:17},end:{line:6,column:25}},loc:{start:{line:6,column:33},end:{line:6,column:102}},line:6},"6":{name:"step",decl:{start:{line:7,column:17},end:{line:7,column:21}},loc:{start:{line:7,column:30},end:{line:7,column:118}},line:7},"7":{name:"(anonymous_7)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:35},end:{line:49,column:5}},line:18},"8":{name:"(anonymous_8)",decl:{start:{line:19,column:47},end:{line:19,column:48}},loc:{start:{line:19,column:60},end:{line:48,column:9}},line:19},"9":{name:"(anonymous_9)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:28},end:{line:54,column:5}},line:50},"10":{name:"(anonymous_10)",decl:{start:{line:51,column:47},end:{line:51,column:48}},loc:{start:{line:51,column:60},end:{line:53,column:9}},line:51},"11":{name:"(anonymous_11)",decl:{start:{line:55,column:4},end:{line:55,column:5}},loc:{start:{line:55,column:27},end:{line:59,column:5}},line:55},"12":{name:"(anonymous_12)",decl:{start:{line:56,column:47},end:{line:56,column:48}},loc:{start:{line:56,column:60},end:{line:58,column:9}},line:56},"13":{name:"(anonymous_13)",decl:{start:{line:60,column:4},end:{line:60,column:5}},loc:{start:{line:60,column:41},end:{line:64,column:5}},line:60},"14":{name:"(anonymous_14)",decl:{start:{line:61,column:47},end:{line:61,column:48}},loc:{start:{line:61,column:60},end:{line:63,column:9}},line:61},"15":{name:"(anonymous_15)",decl:{start:{line:65,column:4},end:{line:65,column:5}},loc:{start:{line:65,column:42},end:{line:70,column:5}},line:65},"16":{name:"(anonymous_16)",decl:{start:{line:66,column:47},end:{line:66,column:48}},loc:{start:{line:66,column:60},end:{line:69,column:9}},line:66},"17":{name:"(anonymous_17)",decl:{start:{line:71,column:4},end:{line:71,column:5}},loc:{start:{line:71,column:44},end:{line:75,column:5}},line:71},"18":{name:"(anonymous_18)",decl:{start:{line:72,column:47},end:{line:72,column:48}},loc:{start:{line:72,column:60},end:{line:74,column:9}},line:72},"19":{name:"(anonymous_19)",decl:{start:{line:76,column:4},end:{line:76,column:5}},loc:{start:{line:76,column:29},end:{line:103,column:5}},line:76},"20":{name:"(anonymous_20)",decl:{start:{line:77,column:47},end:{line:77,column:48}},loc:{start:{line:77,column:60},end:{line:102,column:9}},line:77},"21":{name:"(anonymous_21)",decl:{start:{line:104,column:4},end:{line:104,column:5}},loc:{start:{line:104,column:30},end:{line:108,column:5}},line:104},"22":{name:"(anonymous_22)",decl:{start:{line:109,column:4},end:{line:109,column:5}},loc:{start:{line:109,column:27},end:{line:137,column:5}},line:109},"23":{name:"(anonymous_23)",decl:{start:{line:110,column:47},end:{line:110,column:48}},loc:{start:{line:110,column:60},end:{line:136,column:9}},line:110}},branchMap:{"0":{loc:{start:{line:2,column:16},end:{line:10,column:1}},type:"binary-expr",locations:[{start:{line:2,column:17},end:{line:2,column:21}},{start:{line:2,column:25},end:{line:2,column:39}},{start:{line:2,column:44},end:{line:10,column:1}}],line:2},"1":{loc:{start:{line:3,column:35},end:{line:3,column:109}},type:"cond-expr",locations:[{start:{line:3,column:56},end:{line:3,column:61}},{start:{line:3,column:64},end:{line:3,column:109}}],line:3},"2":{loc:{start:{line:4,column:16},end:{line:4,column:34}},type:"binary-expr",locations:[{start:{line:4,column:16},end:{line:4,column:17}},{start:{line:4,column:22},end:{line:4,column:33}}],line:4},"3":{loc:{start:{line:7,column:32},end:{line:7,column:115}},type:"cond-expr",locations:[{start:{line:7,column:46},end:{line:7,column:67}},{start:{line:7,column:70},end:{line:7,column:115}}],line:7},"4":{loc:{start:{line:8,column:51},end:{line:8,column:67}},type:"binary-expr",locations:[{start:{line:8,column:51},end:{line:8,column:61}},{start:{line:8,column:65},end:{line:8,column:67}}],line:8},"5":{loc:{start:{line:24,column:12},end:{line:34,column:13}},type:"if",locations:[{start:{line:24,column:12},end:{line:34,column:13}},{start:{line:24,column:12},end:{line:34,column:13}}],line:24},"6":{loc:{start:{line:26,column:16},end:{line:32,column:17}},type:"if",locations:[{start:{line:26,column:16},end:{line:32,column:17}},{start:{line:26,column:16},end:{line:32,column:17}}],line:26},"7":{loc:{start:{line:35,column:12},end:{line:46,column:13}},type:"if",locations:[{start:{line:35,column:12},end:{line:46,column:13}},{start:{line:35,column:12},end:{line:46,column:13}}],line:35},"8":{loc:{start:{line:81,column:16},end:{line:97,column:17}},type:"if",locations:[{start:{line:81,column:16},end:{line:97,column:17}},{start:{line:81,column:16},end:{line:97,column:17}}],line:81},"9":{loc:{start:{line:82,column:20},end:{line:90,column:21}},type:"if",locations:[{start:{line:82,column:20},end:{line:90,column:21}},{start:{line:82,column:20},end:{line:90,column:21}}],line:82},"10":{loc:{start:{line:94,column:20},end:{line:96,column:21}},type:"if",locations:[{start:{line:94,column:20},end:{line:96,column:21}},{start:{line:94,column:20},end:{line:96,column:21}}],line:94}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},inputSourceMap:{version:3,file:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/services/db/db.service.ts",sources:["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/services/db/db.service.ts"],names:[],mappings:"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",sourcesContent:["import \"reflect-metadata\";\nimport { getVariable } from \"../../../../config\";\nimport { DNASequencesEntity } from \"../../entities/sequence.entity\";\nimport {\n  Connection,\n  createConnection,\n  getConnectionManager,\n  QueryRunner,\n} from \"typeorm\";\n\nexport class ConnectionDB {\n  public static async getConnectionInstance(): Promise<ConnectionDB> {\n    ConnectionDB.concurrentCalleds++;\n    console.log(\n      \"CONCURRENT CALLEDS ON START CONNECTION %s\",\n      ConnectionDB.concurrentCalleds\n    );\n    console.log(\"[START] %o\", ConnectionDB.connectionInstance);\n    const connectionManager = await getConnectionManager();\n    if (connectionManager.connections.length > 0) {\n      const aliveConnection = connectionManager.get(\"default\");\n      if (aliveConnection.isConnected) {\n        console.log(\n          \"[INFO] ALIVE-CONNECTION => %o\",\n          aliveConnection.isConnected\n        );\n        ConnectionDB.connection = await aliveConnection;\n      } else {\n        ConnectionDB.restoreSingleton();\n      }\n      console.log(\"SETTED OF EXISTENT CONNECTION\");\n    }\n\n    if (!ConnectionDB.connectionInstance) {\n      try {\n        ConnectionDB.connectionInstance = new ConnectionDB();\n        ConnectionDB.connection = await ConnectionDB.runConnection();\n        console.log(\"FINISH CREATE CONNECTION\");\n      } catch (error) {\n        console.log(\"ERROR ON GET CONNECTION %O\", error);\n        ConnectionDB.restoreSingleton();\n        throw new Error(\"ERROR ON GET CONNECTION\");\n      }\n    }\n\n    return ConnectionDB.connectionInstance;\n  }\n\n  public static async getQueryRunner(): Promise<QueryRunner> {\n    return ConnectionDB.connection.createQueryRunner();\n  }\n\n  public static async getConnection(): Promise<Connection> {\n    return ConnectionDB.connection;\n  }\n\n  public static async startTransaction(queryRunner: QueryRunner): Promise<any> {\n    await queryRunner.startTransaction();\n  }\n\n  public static async commitTransaction(\n    queryRunner: QueryRunner\n  ): Promise<any> {\n    await queryRunner.commitTransaction();\n    await queryRunner.release();\n  }\n\n  public static async rollbackTransaction(\n    queryRunner: QueryRunner\n  ): Promise<any> {\n    await queryRunner.rollbackTransaction();\n  }\n\n  public static async closeConnection(): Promise<any> {\n    console.log(`[DB START CLOSING CONNECTION]`);\n    try {\n      console.log(\n        \"CONCURRENT CALLEDS on CLOSE CONNECTION %s\",\n        ConnectionDB.concurrentCalleds\n      );\n      if (ConnectionDB.concurrentCalleds <= 1) {\n        if (Object.keys(ConnectionDB.connection).length > 0) {\n          const connection = await ConnectionDB.getConnection();\n          await connection.close();\n          ConnectionDB.restoreSingleton();\n          console.log(\n            \"[INFO] CLOSED CONNECTION, CONNECTIONDB => %o\",\n            ConnectionDB.connectionInstance\n          );\n        } else {\n          console.log(\n            \"[WARNING]CANNOT CLOSE CONNECTION OF INEXISTENT ATTRIBUTE, CONNECTIONDB => %o\",\n            ConnectionDB\n          );\n        }\n      } else {\n        ConnectionDB.concurrentCalleds--;\n        if (ConnectionDB.concurrentCalleds === 1) {\n          await ConnectionDB.closeConnection();\n        }\n      }\n    } catch (error) {\n      console.log(\"[ERROR]Error in closeConnection %o\", error);\n    }\n  }\n\n  public static restoreSingleton(): void {\n    ConnectionDB.connectionInstance = null;\n    ConnectionDB.concurrentCalleds = 0;\n    ConnectionDB.connection = {} as Connection;\n  }\n\n  private static connectionInstance: ConnectionDB | null;\n  private static connection: Connection;\n  private static concurrentCalleds = 0;\n  private static async runConnection(): Promise<Connection> {\n    try {\n\n      const rc = await createConnection({\n        acquireTimeout: Number(await getVariable(\"DATABASE_TIMEOUT\")),\n        connectTimeout: Number(await getVariable(\"DATABASE_TIMEOUT\")),\n        database: await getVariable(\"DB_NAME\"),\n        host: await getVariable(\"DB_HOST\"),\n        password: await getVariable(\"DB_PASSWORD\"),\n        port: +(await getVariable(\"DB_PORT\")),\n        username: await getVariable(\"DB_USER\"),\n        entities: [DNASequencesEntity],\n        extra: {\n          connectionLimit: 300,\n        },\n        synchronize: false,\n        type: \"mysql\",\n      });\n      return rc;\n    } catch (error) {\n      console.log(`[ERROR-DB] ${error}`);\n      return Promise.reject({\n        message: \"Could not connect to DB\",\n        error: `${error}`,\n      });\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8e37fd07209e020a319f068383e228cf9c1ad325"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1xdou881zz=function(){return actualCoverage;};}return actualCoverage;}cov_1xdou881zz();var __awaiter=(cov_1xdou881zz().s[0]++,(cov_1xdou881zz().b[0][0]++,this)&&(cov_1xdou881zz().b[0][1]++,this.__awaiter)||(cov_1xdou881zz().b[0][2]++,function(thisArg,_arguments,P,generator){cov_1xdou881zz().f[0]++;function adopt(value){cov_1xdou881zz().f[1]++;cov_1xdou881zz().s[1]++;return value instanceof P?(cov_1xdou881zz().b[1][0]++,value):(cov_1xdou881zz().b[1][1]++,new P(function(resolve){cov_1xdou881zz().f[2]++;cov_1xdou881zz().s[2]++;resolve(value);}));}cov_1xdou881zz().s[3]++;return new((cov_1xdou881zz().b[2][0]++,P)||(cov_1xdou881zz().b[2][1]++,P=Promise))(function(resolve,reject){cov_1xdou881zz().f[3]++;function fulfilled(value){cov_1xdou881zz().f[4]++;cov_1xdou881zz().s[4]++;try{cov_1xdou881zz().s[5]++;step(generator.next(value));}catch(e){cov_1xdou881zz().s[6]++;reject(e);}}function rejected(value){cov_1xdou881zz().f[5]++;cov_1xdou881zz().s[7]++;try{cov_1xdou881zz().s[8]++;step(generator["throw"](value));}catch(e){cov_1xdou881zz().s[9]++;reject(e);}}function step(result){cov_1xdou881zz().f[6]++;cov_1xdou881zz().s[10]++;result.done?(cov_1xdou881zz().b[3][0]++,resolve(result.value)):(cov_1xdou881zz().b[3][1]++,adopt(result.value).then(fulfilled,rejected));}cov_1xdou881zz().s[11]++;step((generator=generator.apply(thisArg,(cov_1xdou881zz().b[4][0]++,_arguments)||(cov_1xdou881zz().b[4][1]++,[]))).next());});}));cov_1xdou881zz().s[12]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1xdou881zz().s[13]++;exports.ConnectionDB=void 0;cov_1xdou881zz().s[14]++;require("reflect-metadata");const config_1=(cov_1xdou881zz().s[15]++,require("../../../../config"));const sequence_entity_1=(cov_1xdou881zz().s[16]++,require("../../entities/sequence.entity"));const typeorm_1=(cov_1xdou881zz().s[17]++,require("typeorm"));class ConnectionDB{static getConnectionInstance(){cov_1xdou881zz().f[7]++;cov_1xdou881zz().s[18]++;return __awaiter(this,void 0,void 0,function*(){cov_1xdou881zz().f[8]++;cov_1xdou881zz().s[19]++;ConnectionDB.concurrentCalleds++;cov_1xdou881zz().s[20]++;console.log("CONCURRENT CALLEDS ON START CONNECTION %s",ConnectionDB.concurrentCalleds);cov_1xdou881zz().s[21]++;console.log("[START] %o",ConnectionDB.connectionInstance);const connectionManager=(cov_1xdou881zz().s[22]++,yield typeorm_1.getConnectionManager());cov_1xdou881zz().s[23]++;if(connectionManager.connections.length>0){cov_1xdou881zz().b[5][0]++;const aliveConnection=(cov_1xdou881zz().s[24]++,connectionManager.get("default"));cov_1xdou881zz().s[25]++;if(aliveConnection.isConnected){cov_1xdou881zz().b[6][0]++;cov_1xdou881zz().s[26]++;console.log("[INFO] ALIVE-CONNECTION => %o",aliveConnection.isConnected);cov_1xdou881zz().s[27]++;ConnectionDB.connection=yield aliveConnection;}else{cov_1xdou881zz().b[6][1]++;cov_1xdou881zz().s[28]++;ConnectionDB.restoreSingleton();}cov_1xdou881zz().s[29]++;console.log("SETTED OF EXISTENT CONNECTION");}else{cov_1xdou881zz().b[5][1]++;}cov_1xdou881zz().s[30]++;if(!ConnectionDB.connectionInstance){cov_1xdou881zz().b[7][0]++;cov_1xdou881zz().s[31]++;try{cov_1xdou881zz().s[32]++;ConnectionDB.connectionInstance=new ConnectionDB();cov_1xdou881zz().s[33]++;ConnectionDB.connection=yield ConnectionDB.runConnection();cov_1xdou881zz().s[34]++;console.log("FINISH CREATE CONNECTION");}catch(error){cov_1xdou881zz().s[35]++;console.log("ERROR ON GET CONNECTION %O",error);cov_1xdou881zz().s[36]++;ConnectionDB.restoreSingleton();cov_1xdou881zz().s[37]++;throw new Error("ERROR ON GET CONNECTION");}}else{cov_1xdou881zz().b[7][1]++;}cov_1xdou881zz().s[38]++;return ConnectionDB.connectionInstance;});}static getQueryRunner(){cov_1xdou881zz().f[9]++;cov_1xdou881zz().s[39]++;return __awaiter(this,void 0,void 0,function*(){cov_1xdou881zz().f[10]++;cov_1xdou881zz().s[40]++;return ConnectionDB.connection.createQueryRunner();});}static getConnection(){cov_1xdou881zz().f[11]++;cov_1xdou881zz().s[41]++;return __awaiter(this,void 0,void 0,function*(){cov_1xdou881zz().f[12]++;cov_1xdou881zz().s[42]++;return ConnectionDB.connection;});}static startTransaction(queryRunner){cov_1xdou881zz().f[13]++;cov_1xdou881zz().s[43]++;return __awaiter(this,void 0,void 0,function*(){cov_1xdou881zz().f[14]++;cov_1xdou881zz().s[44]++;yield queryRunner.startTransaction();});}static commitTransaction(queryRunner){cov_1xdou881zz().f[15]++;cov_1xdou881zz().s[45]++;return __awaiter(this,void 0,void 0,function*(){cov_1xdou881zz().f[16]++;cov_1xdou881zz().s[46]++;yield queryRunner.commitTransaction();cov_1xdou881zz().s[47]++;yield queryRunner.release();});}static rollbackTransaction(queryRunner){cov_1xdou881zz().f[17]++;cov_1xdou881zz().s[48]++;return __awaiter(this,void 0,void 0,function*(){cov_1xdou881zz().f[18]++;cov_1xdou881zz().s[49]++;yield queryRunner.rollbackTransaction();});}static closeConnection(){cov_1xdou881zz().f[19]++;cov_1xdou881zz().s[50]++;return __awaiter(this,void 0,void 0,function*(){cov_1xdou881zz().f[20]++;cov_1xdou881zz().s[51]++;console.log(`[DB START CLOSING CONNECTION]`);cov_1xdou881zz().s[52]++;try{cov_1xdou881zz().s[53]++;console.log("CONCURRENT CALLEDS on CLOSE CONNECTION %s",ConnectionDB.concurrentCalleds);cov_1xdou881zz().s[54]++;if(ConnectionDB.concurrentCalleds<=1){cov_1xdou881zz().b[8][0]++;cov_1xdou881zz().s[55]++;if(Object.keys(ConnectionDB.connection).length>0){cov_1xdou881zz().b[9][0]++;const connection=(cov_1xdou881zz().s[56]++,yield ConnectionDB.getConnection());cov_1xdou881zz().s[57]++;yield connection.close();cov_1xdou881zz().s[58]++;ConnectionDB.restoreSingleton();cov_1xdou881zz().s[59]++;console.log("[INFO] CLOSED CONNECTION, CONNECTIONDB => %o",ConnectionDB.connectionInstance);}else{cov_1xdou881zz().b[9][1]++;cov_1xdou881zz().s[60]++;console.log("[WARNING]CANNOT CLOSE CONNECTION OF INEXISTENT ATTRIBUTE, CONNECTIONDB => %o",ConnectionDB);}}else{cov_1xdou881zz().b[8][1]++;cov_1xdou881zz().s[61]++;ConnectionDB.concurrentCalleds--;cov_1xdou881zz().s[62]++;if(ConnectionDB.concurrentCalleds===1){cov_1xdou881zz().b[10][0]++;cov_1xdou881zz().s[63]++;yield ConnectionDB.closeConnection();}else{cov_1xdou881zz().b[10][1]++;}}}catch(error){cov_1xdou881zz().s[64]++;console.log("[ERROR]Error in closeConnection %o",error);}});}static restoreSingleton(){cov_1xdou881zz().f[21]++;cov_1xdou881zz().s[65]++;ConnectionDB.connectionInstance=null;cov_1xdou881zz().s[66]++;ConnectionDB.concurrentCalleds=0;cov_1xdou881zz().s[67]++;ConnectionDB.connection={};}static runConnection(){cov_1xdou881zz().f[22]++;cov_1xdou881zz().s[68]++;return __awaiter(this,void 0,void 0,function*(){cov_1xdou881zz().f[23]++;cov_1xdou881zz().s[69]++;try{const rc=(cov_1xdou881zz().s[70]++,yield typeorm_1.createConnection({acquireTimeout:Number(yield config_1.getVariable("DATABASE_TIMEOUT")),connectTimeout:Number(yield config_1.getVariable("DATABASE_TIMEOUT")),database:yield config_1.getVariable("DB_NAME"),host:yield config_1.getVariable("DB_HOST"),password:yield config_1.getVariable("DB_PASSWORD"),port:+(yield config_1.getVariable("DB_PORT")),username:yield config_1.getVariable("DB_USER"),entities:[sequence_entity_1.DNASequencesEntity],extra:{connectionLimit:300},synchronize:false,type:"mysql"}));cov_1xdou881zz().s[71]++;return rc;}catch(error){cov_1xdou881zz().s[72]++;console.log(`[ERROR-DB] ${error}`);cov_1xdou881zz().s[73]++;return Promise.reject({message:"Could not connect to DB",error:`${error}`});}});}}cov_1xdou881zz().s[74]++;exports.ConnectionDB=ConnectionDB;cov_1xdou881zz().s[75]++;ConnectionDB.concurrentCalleds=0;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kcm9kcjI1L0Rlc2t0b3AvTXV0YW50RE5BQ2hlY2tlci9zcmMvbW9kdWxlcy9jb3JlL3NlcnZpY2VzL2RiL2RiLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Im11bUJBR0E7cWpEQUhBLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLFFBQUEsMkJBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxpQkFBQSwyQkFBQSxPQUFBLENBQUEsZ0NBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLFNBQUEsMkJBQUEsT0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLENBT0EsS0FBYSxDQUFBLFlBQVksQ0FDa0IsTUFBckIsQ0FBQSxxQkFBcUIsRUFBQSxrRCxpR0FDdkMsWUFBWSxDQUFDLGlCQUFiLEcseUJBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FDRSwyQ0FERixDQUVFLFlBQVksQ0FBQyxpQkFGZixFLHlCQUlBLE9BQU8sQ0FBQyxHQUFSLENBQVksWUFBWixDQUEwQixZQUFZLENBQUMsa0JBQXZDLEVBQ0EsS0FBTSxDQUFBLGlCQUFpQiwyQkFBRyxLQUFNLENBQUEsU0FBQSxDQUFBLG9CQUFBLEVBQVQsQ0FBdkIsQyx5QkFDQSxHQUFJLGlCQUFpQixDQUFDLFdBQWxCLENBQThCLE1BQTlCLENBQXVDLENBQTNDLENBQThDLDRCQUM1QyxLQUFNLENBQUEsZUFBZSwyQkFBRyxpQkFBaUIsQ0FBQyxHQUFsQixDQUFzQixTQUF0QixDQUFILENBQXJCLENBRDRDLHlCQUU1QyxHQUFJLGVBQWUsQ0FBQyxXQUFwQixDQUFpQyxxREFDL0IsT0FBTyxDQUFDLEdBQVIsQ0FDRSwrQkFERixDQUVFLGVBQWUsQ0FBQyxXQUZsQixFQUQrQix5QkFLL0IsWUFBWSxDQUFDLFVBQWIsQ0FBMEIsS0FBTSxDQUFBLGVBQWhDLENBQ0QsQ0FORCxJQU1PLHFEQUNMLFlBQVksQ0FBQyxnQkFBYixHQUNELENBVjJDLHlC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LENBQVAsQ0FJRCxDQUNGLEMsRUFBQSxDQW5Jc0IsQyx5QkFBekIsT0FBQSxDQUFBLFlBQUEsQ0FBQSxZQUFBLEMseUJBd0dpQixZQUFBLENBQUEsaUJBQUEsQ0FBb0IsQ0FBcEIsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcInJlZmxlY3QtbWV0YWRhdGFcIjtcbmltcG9ydCB7IGdldFZhcmlhYmxlIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbmZpZ1wiO1xuaW1wb3J0IHsgRE5BU2VxdWVuY2VzRW50aXR5IH0gZnJvbSBcIi4uLy4uL2VudGl0aWVzL3NlcXVlbmNlLmVudGl0eVwiO1xuaW1wb3J0IHtcbiAgQ29ubmVjdGlvbixcbiAgY3JlYXRlQ29ubmVjdGlvbixcbiAgZ2V0Q29ubmVjdGlvbk1hbmFnZXIsXG4gIFF1ZXJ5UnVubmVyLFxufSBmcm9tIFwidHlwZW9ybVwiO1xuXG5leHBvcnQgY2xhc3MgQ29ubmVjdGlvbkRCIHtcbiAgcHVibGljIHN0YXRpYyBhc3luYyBnZXRDb25uZWN0aW9uSW5zdGFuY2UoKTogUHJvbWlzZTxDb25uZWN0aW9uREI+IHtcbiAgICBDb25uZWN0aW9uREIuY29uY3VycmVudENhbGxlZHMrKztcbiAgICBjb25zb2xlLmxvZyhcbiAgICAgIFwiQ09OQ1VSUkVOVCBDQUxMRURTIE9OIFNUQVJUIENPTk5FQ1RJT04gJXNcIixcbiAgICAgIENvbm5lY3Rpb25EQi5jb25jdXJyZW50Q2FsbGVkc1xuICAgICk7XG4gICAgY29uc29sZS5sb2coXCJbU1RBUlRdICVvXCIsIENvbm5lY3Rpb25EQi5jb25uZWN0aW9uSW5zdGFuY2UpO1xuICAgIGNvbnN0IGNvbm5lY3Rpb25NYW5hZ2VyID0gYXdhaXQgZ2V0Q29ubmVjdGlvbk1hbmFnZXIoKTtcbiAgICBpZiAoY29ubmVjdGlvbk1hbmFnZXIuY29ubmVjdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgYWxpdmVDb25uZWN0aW9uID0gY29ubmVjdGlvbk1hbmFnZXIuZ2V0KFwiZGVmYXVsdFwiKTtcbiAgICAgIGlmIChhbGl2ZUNvbm5lY3Rpb24uaXNDb25uZWN0ZWQpIHtcbiAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgXCJbSU5GT10gQUxJVkUtQ09OTkVDVElPTiA9PiAlb1wiLFxuICAgICAgICAgIGFsaXZlQ29ubmVjdGlvbi5pc0Nvbm5lY3RlZFxuICAgICAgICApO1xuICAgICAgICBDb25uZWN0aW9uREIuY29ubmVjdGlvbiA9IGF3YWl0IGFsaXZlQ29ubmVjdGlvbjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIENvbm5lY3Rpb25EQi5yZXN0b3JlU2luZ2xldG9uKCk7XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyhcIlNFVFRFRCBPRiBFWElTVEVOVCBDT05ORUNUSU9OXCIpO1xuICAgIH1cblxuICAgIGlmICghQ29ubmVjdGlvbkRCLmNvbm5lY3Rpb25JbnN0YW5jZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgQ29ubmVjdGlvbkRCLmNvbm5lY3Rpb25JbnN0YW5jZSA9IG5ldyBDb25uZWN0aW9uREIoKTtcbiAgICAgICAgQ29ubmVjdGlvbkRCLmNvbm5lY3Rpb24gPSBhd2FpdCBDb25uZWN0aW9uREIucnVuQ29ubmVjdGlvbigpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIkZJTklTSCBDUkVBVEUgQ09OTkVDVElPTlwiKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRVJST1IgT04gR0VUIENPTk5FQ1RJT04gJU9cIiwgZXJyb3IpO1xuICAgICAgICBDb25uZWN0aW9uREIucmVzdG9yZVNpbmdsZXRvbigpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFUlJPUiBPTiBHRVQgQ09OTkVDVElPTlwiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gQ29ubmVjdGlvbkRCLmNvbm5lY3Rpb25JbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgYXN5bmMgZ2V0UXVlcnlSdW5uZXIoKTogUHJvbWlzZTxRdWVyeVJ1bm5lcj4ge1xuICAgIHJldHVybiBDb25uZWN0aW9uREIuY29ubmVjdGlvbi5jcmVhdGVRdWVyeVJ1bm5lcigpO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBhc3luYyBnZXRDb25uZWN0aW9uKCk6IFByb21pc2U8Q29ubmVjdGlvbj4ge1xuICAgIHJldHVybiBDb25uZWN0aW9uREIuY29ubmVjdGlvbjtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgYXN5bmMgc3RhcnRUcmFuc2FjdGlvbihxdWVyeVJ1bm5lcjogUXVlcnlSdW5uZXIpOiBQcm9taXNlPGFueT4ge1xuICAgIGF3YWl0IHF1ZXJ5UnVubmVyLnN0YXJ0VHJhbnNhY3Rpb24oKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgYXN5bmMgY29tbWl0VHJhbnNhY3Rpb24oXG4gICAgcXVlcnlSdW5uZXI6IFF1ZXJ5UnVubmVyXG4gICk6IFByb21pc2U8YW55PiB7XG4gICAgYXdhaXQgcXVlcnlSdW5uZXIuY29tbWl0VHJhbnNhY3Rpb24oKTtcbiAgICBhd2FpdCBxdWVyeVJ1bm5lci5yZWxlYXNlKCk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGFzeW5jIHJvbGxiYWNrVHJhbnNhY3Rpb24oXG4gICAgcXVlcnlSdW5uZXI6IFF1ZXJ5UnVubmVyXG4gICk6IFByb21pc2U8YW55PiB7XG4gICAgYXdhaXQgcXVlcnlSdW5uZXIucm9sbGJhY2tUcmFuc2FjdGlvbigpO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBhc3luYyBjbG9zZUNvbm5lY3Rpb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICBjb25zb2xlLmxvZyhgW0RCIFNUQVJUIENMT1NJTkcgQ09OTkVDVElPTl1gKTtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coXG4gICAgICAgIFwiQ09OQ1VSUkVOVCBDQUxMRURTIG9uIENMT1NFIENPTk5FQ1RJT04gJXNcIixcbiAgICAgICAgQ29ubmVjdGlvbkRCLmNvbmN1cnJlbnRDYWxsZWRzXG4gICAgICApO1xuICAgICAgaWYgKENvbm5lY3Rpb25EQi5jb25jdXJyZW50Q2FsbGVkcyA8PSAxKSB7XG4gICAgICAgIGlmIChPYmplY3Qua2V5cyhDb25uZWN0aW9uREIuY29ubmVjdGlvbikubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCBDb25uZWN0aW9uREIuZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uY2xvc2UoKTtcbiAgICAgICAgICBDb25uZWN0aW9uREIucmVzdG9yZVNpbmdsZXRvbigpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgXCJbSU5GT10gQ0xPU0VEIENPTk5FQ1RJT04sIENPTk5FQ1RJT05EQiA9PiAlb1wiLFxuICAgICAgICAgICAgQ29ubmVjdGlvbkRCLmNvbm5lY3Rpb25JbnN0YW5jZVxuICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICBcIltXQVJOSU5HXUNBTk5PVCBDTE9TRSBDT05ORUNUSU9OIE9GIElORVhJU1RFTlQgQVRUUklCVVRFLCBDT05ORUNUSU9OREIgPT4gJW9cIixcbiAgICAgICAgICAgIENvbm5lY3Rpb25EQlxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIENvbm5lY3Rpb25EQi5jb25jdXJyZW50Q2FsbGVkcy0tO1xuICAgICAgICBpZiAoQ29ubmVjdGlvbkRCLmNvbmN1cnJlbnRDYWxsZWRzID09PSAxKSB7XG4gICAgICAgICAgYXdhaXQgQ29ubmVjdGlvbkRCLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiW0VSUk9SXUVycm9yIGluIGNsb3NlQ29ubmVjdGlvbiAlb1wiLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyByZXN0b3JlU2luZ2xldG9uKCk6IHZvaWQge1xuICAgIENvbm5lY3Rpb25EQi5jb25uZWN0aW9uSW5zdGFuY2UgPSBudWxsO1xuICAgIENvbm5lY3Rpb25EQi5jb25jdXJyZW50Q2FsbGVkcyA9IDA7XG4gICAgQ29ubmVjdGlvbkRCLmNvbm5lY3Rpb24gPSB7fSBhcyBDb25uZWN0aW9uO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgY29ubmVjdGlvbkluc3RhbmNlOiBDb25uZWN0aW9uREIgfCBudWxsO1xuICBwcml2YXRlIHN0YXRpYyBjb25uZWN0aW9uOiBDb25uZWN0aW9uO1xuICBwcml2YXRlIHN0YXRpYyBjb25jdXJyZW50Q2FsbGVkcyA9IDA7XG4gIHByaXZhdGUgc3RhdGljIGFzeW5jIHJ1bkNvbm5lY3Rpb24oKTogUHJvbWlzZTxDb25uZWN0aW9uPiB7XG4gICAgdHJ5IHtcblxuICAgICAgY29uc3QgcmMgPSBhd2FpdCBjcmVhdGVDb25uZWN0aW9uKHtcbiAgICAgICAgYWNxdWlyZVRpbWVvdXQ6IE51bWJlcihhd2FpdCBnZXRWYXJpYWJsZShcIkRBVEFCQVNFX1RJTUVPVVRcIikpLFxuICAgICAgICBjb25uZWN0VGltZW91dDogTnVtYmVyKGF3YWl0IGdldFZhcmlhYmxlKFwiREFUQUJBU0VfVElNRU9VVFwiKSksXG4gICAgICAgIGRhdGFiYXNlOiBhd2FpdCBnZXRWYXJpYWJsZShcIkRCX05BTUVcIiksXG4gICAgICAgIGhvc3Q6IGF3YWl0IGdldFZhcmlhYmxlKFwiREJfSE9TVFwiKSxcbiAgICAgICAgcGFzc3dvcmQ6IGF3YWl0IGdldFZhcmlhYmxlKFwiREJfUEFTU1dPUkRcIiksXG4gICAgICAgIHBvcnQ6ICsoYXdhaXQgZ2V0VmFyaWFibGUoXCJEQl9QT1JUXCIpKSxcbiAgICAgICAgdXNlcm5hbWU6IGF3YWl0IGdldFZhcmlhYmxlKFwiREJfVVNFUlwiKSxcbiAgICAgICAgZW50aXRpZXM6IFtETkFTZXF1ZW5jZXNFbnRpdHldLFxuICAgICAgICBleHRyYToge1xuICAgICAgICAgIGNvbm5lY3Rpb25MaW1pdDogMzAwLFxuICAgICAgICB9LFxuICAgICAgICBzeW5jaHJvbml6ZTogZmFsc2UsXG4gICAgICAgIHR5cGU6IFwibXlzcWxcIixcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJjO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhgW0VSUk9SLURCXSAke2Vycm9yfWApO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHtcbiAgICAgICAgbWVzc2FnZTogXCJDb3VsZCBub3QgY29ubmVjdCB0byBEQlwiLFxuICAgICAgICBlcnJvcjogYCR7ZXJyb3J9YCxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIl19