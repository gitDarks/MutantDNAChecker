"use strict";function cov_22315r6cy8(){var path="/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts";var hash="dce7dadc4d6b9bfb363fb548991785a5d6359901";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts",statementMap:{"0":{start:{line:2,column:16},end:{line:10,column:1}},"1":{start:{line:3,column:28},end:{line:3,column:110}},"2":{start:{line:3,column:91},end:{line:3,column:106}},"3":{start:{line:4,column:4},end:{line:9,column:7}},"4":{start:{line:5,column:36},end:{line:5,column:97}},"5":{start:{line:5,column:42},end:{line:5,column:70}},"6":{start:{line:5,column:85},end:{line:5,column:95}},"7":{start:{line:6,column:35},end:{line:6,column:100}},"8":{start:{line:6,column:41},end:{line:6,column:73}},"9":{start:{line:6,column:88},end:{line:6,column:98}},"10":{start:{line:7,column:32},end:{line:7,column:116}},"11":{start:{line:8,column:8},end:{line:8,column:78}},"12":{start:{line:11,column:0},end:{line:11,column:62}},"13":{start:{line:12,column:0},end:{line:12,column:28}},"14":{start:{line:13,column:27},end:{line:13,column:64}},"15":{start:{line:14,column:18},end:{line:14,column:59}},"16":{start:{line:15,column:32},end:{line:15,column:107}},"17":{start:{line:16,column:37},end:{line:16,column:117}},"18":{start:{line:17,column:31},end:{line:17,column:105}},"19":{start:{line:18,column:36},end:{line:18,column:115}},"20":{start:{line:19,column:26},end:{line:19,column:72}},"21":{start:{line:20,column:31},end:{line:20,column:74}},"22":{start:{line:21,column:21},end:{line:21,column:65}},"23":{start:{line:24,column:8},end:{line:24,column:32}},"24":{start:{line:25,column:8},end:{line:25,column:33}},"25":{start:{line:26,column:8},end:{line:26,column:82}},"26":{start:{line:29,column:21},end:{line:29,column:31}},"27":{start:{line:30,column:25},end:{line:30,column:45}},"28":{start:{line:32,column:8},end:{line:32,column:47}},"29":{start:{line:34,column:8},end:{line:34,column:73}},"30":{start:{line:35,column:8},end:{line:68,column:9}},"31":{start:{line:35,column:21},end:{line:35,column:22}},"32":{start:{line:36,column:12},end:{line:67,column:13}},"33":{start:{line:36,column:25},end:{line:36,column:26}},"34":{start:{line:39,column:16},end:{line:39,column:108}},"35":{start:{line:40,column:16},end:{line:43,column:63}},"36":{start:{line:47,column:16},end:{line:47,column:117}},"37":{start:{line:48,column:16},end:{line:51,column:63}},"38":{start:{line:54,column:16},end:{line:54,column:106}},"39":{start:{line:55,column:16},end:{line:58,column:63}},"40":{start:{line:62,column:16},end:{line:62,column:115}},"41":{start:{line:63,column:16},end:{line:66,column:63}},"42":{start:{line:71,column:28},end:{line:71,column:84}},"43":{start:{line:72,column:24},end:{line:72,column:44}},"44":{start:{line:73,column:8},end:{line:73,column:64}},"45":{start:{line:74,column:8},end:{line:74,column:27}},"46":{start:{line:77,column:8},end:{line:77,column:57}},"47":{start:{line:78,column:19},end:{line:78,column:21}},"48":{start:{line:79,column:8},end:{line:86,column:11}},"49":{start:{line:80,column:12},end:{line:80,column:35}},"50":{start:{line:81,column:24},end:{line:81,column:35}},"51":{start:{line:82,column:12},end:{line:84,column:15}},"52":{start:{line:83,column:16},end:{line:83,column:72}},"53":{start:{line:85,column:12},end:{line:85,column:57}},"54":{start:{line:89,column:8},end:{line:103,column:11}},"55":{start:{line:90,column:12},end:{line:102,column:13}},"56":{start:{line:91,column:34},end:{line:91,column:76}},"57":{start:{line:92,column:16},end:{line:92,column:41}},"58":{start:{line:93,column:16},end:{line:93,column:52}},"59":{start:{line:94,column:31},end:{line:94,column:103}},"60":{start:{line:95,column:16},end:{line:95,column:66}},"61":{start:{line:96,column:16},end:{line:96,column:30}},"62":{start:{line:99,column:16},end:{line:99,column:58}},"63":{start:{line:100,column:16},end:{line:100,column:66}},"64":{start:{line:101,column:16},end:{line:101,column:35}},"65":{start:{line:106,column:8},end:{line:124,column:9}},"66":{start:{line:108,column:28},end:{line:108,column:35}},"67":{start:{line:109,column:32},end:{line:109,column:43}},"68":{start:{line:110,column:29},end:{line:110,column:71}},"69":{start:{line:112,column:12},end:{line:112,column:95}},"70":{start:{line:113,column:12},end:{line:118,column:13}},"71":{start:{line:114,column:16},end:{line:114,column:46}},"72":{start:{line:117,column:16},end:{line:117,column:55}},"73":{start:{line:121,column:12},end:{line:123,column:73}},"74":{start:{line:127,column:0},end:{line:127,column:32}},"75":{start:{line:128,column:29},end:{line:128,column:45}},"76":{start:{line:129,column:0},end:{line:129,column:39}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:44},end:{line:2,column:45}},loc:{start:{line:2,column:89},end:{line:10,column:1}},line:2},"1":{name:"adopt",decl:{start:{line:3,column:13},end:{line:3,column:18}},loc:{start:{line:3,column:26},end:{line:3,column:112}},line:3},"2":{name:"(anonymous_2)",decl:{start:{line:3,column:70},end:{line:3,column:71}},loc:{start:{line:3,column:89},end:{line:3,column:108}},line:3},"3":{name:"(anonymous_3)",decl:{start:{line:4,column:36},end:{line:4,column:37}},loc:{start:{line:4,column:63},end:{line:9,column:5}},line:4},"4":{name:"fulfilled",decl:{start:{line:5,column:17},end:{line:5,column:26}},loc:{start:{line:5,column:34},end:{line:5,column:99}},line:5},"5":{name:"rejected",decl:{start:{line:6,column:17},end:{line:6,column:25}},loc:{start:{line:6,column:33},end:{line:6,column:102}},line:6},"6":{name:"step",decl:{start:{line:7,column:17},end:{line:7,column:21}},loc:{start:{line:7,column:30},end:{line:7,column:118}},line:7},"7":{name:"(anonymous_7)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:18},end:{line:27,column:5}},line:23},"8":{name:"(anonymous_8)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:18},end:{line:75,column:5}},line:28},"9":{name:"(anonymous_9)",decl:{start:{line:76,column:4},end:{line:76,column:5}},loc:{start:{line:76,column:22},end:{line:87,column:5}},line:76},"10":{name:"(anonymous_10)",decl:{start:{line:79,column:20},end:{line:79,column:21}},loc:{start:{line:79,column:34},end:{line:86,column:9}},line:79},"11":{name:"(anonymous_11)",decl:{start:{line:82,column:25},end:{line:82,column:26}},loc:{start:{line:82,column:44},end:{line:84,column:13}},line:82},"12":{name:"(anonymous_12)",decl:{start:{line:88,column:4},end:{line:88,column:5}},loc:{start:{line:88,column:38},end:{line:104,column:5}},line:88},"13":{name:"(anonymous_13)",decl:{start:{line:89,column:47},end:{line:89,column:48}},loc:{start:{line:89,column:60},end:{line:103,column:9}},line:89},"14":{name:"(anonymous_14)",decl:{start:{line:105,column:4},end:{line:105,column:5}},loc:{start:{line:105,column:26},end:{line:125,column:5}},line:105}},branchMap:{"0":{loc:{start:{line:2,column:16},end:{line:10,column:1}},type:"binary-expr",locations:[{start:{line:2,column:17},end:{line:2,column:21}},{start:{line:2,column:25},end:{line:2,column:39}},{start:{line:2,column:44},end:{line:10,column:1}}],line:2},"1":{loc:{start:{line:3,column:35},end:{line:3,column:109}},type:"cond-expr",locations:[{start:{line:3,column:56},end:{line:3,column:61}},{start:{line:3,column:64},end:{line:3,column:109}}],line:3},"2":{loc:{start:{line:4,column:16},end:{line:4,column:34}},type:"binary-expr",locations:[{start:{line:4,column:16},end:{line:4,column:17}},{start:{line:4,column:22},end:{line:4,column:33}}],line:4},"3":{loc:{start:{line:7,column:32},end:{line:7,column:115}},type:"cond-expr",locations:[{start:{line:7,column:46},end:{line:7,column:67}},{start:{line:7,column:70},end:{line:7,column:115}}],line:7},"4":{loc:{start:{line:8,column:51},end:{line:8,column:67}},type:"binary-expr",locations:[{start:{line:8,column:51},end:{line:8,column:61}},{start:{line:8,column:65},end:{line:8,column:67}}],line:8},"5":{loc:{start:{line:41,column:20},end:{line:43,column:62}},type:"cond-expr",locations:[{start:{line:42,column:26},end:{line:42,column:66}},{start:{line:43,column:26},end:{line:43,column:62}}],line:41},"6":{loc:{start:{line:49,column:20},end:{line:51,column:62}},type:"cond-expr",locations:[{start:{line:50,column:26},end:{line:50,column:66}},{start:{line:51,column:26},end:{line:51,column:62}}],line:49},"7":{loc:{start:{line:56,column:20},end:{line:58,column:62}},type:"cond-expr",locations:[{start:{line:57,column:26},end:{line:57,column:66}},{start:{line:58,column:26},end:{line:58,column:62}}],line:56},"8":{loc:{start:{line:64,column:20},end:{line:66,column:62}},type:"cond-expr",locations:[{start:{line:65,column:26},end:{line:65,column:66}},{start:{line:66,column:26},end:{line:66,column:62}}],line:64},"9":{loc:{start:{line:71,column:28},end:{line:71,column:84}},type:"cond-expr",locations:[{start:{line:71,column:72},end:{line:71,column:76}},{start:{line:71,column:79},end:{line:71,column:84}}],line:71},"10":{loc:{start:{line:112,column:73},end:{line:112,column:93}},type:"cond-expr",locations:[{start:{line:112,column:84},end:{line:112,column:87}},{start:{line:112,column:90},end:{line:112,column:93}}],line:112},"11":{loc:{start:{line:113,column:12},end:{line:118,column:13}},type:"if",locations:[{start:{line:113,column:12},end:{line:118,column:13}},{start:{line:113,column:12},end:{line:118,column:13}}],line:113},"12":{loc:{start:{line:123,column:31},end:{line:123,column:69}},type:"binary-expr",locations:[{start:{line:123,column:31},end:{line:123,column:44}},{start:{line:123,column:48},end:{line:123,column:69}}],line:123}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},inputSourceMap:{version:3,file:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts",sources:["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts"],names:[],mappings:"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",sourcesContent:["import { Nucleotide } from \"../models/nucleotide.model\";\nimport { SearchContext } from \"./searching-strategies/context\";\nimport { SearchRightStrategy } from \"./searching-strategies/concrete-strategies/search-right-strategy\";\nimport { SearchRightDownStrategy } from \"./searching-strategies/concrete-strategies/search-rigth-down-strategy\";\nimport { SearchDownStrategy } from \"./searching-strategies/concrete-strategies/search-down-strategy\";\nimport { SearchLeftDownStrategy } from \"./searching-strategies/concrete-strategies/search-left-down-strategy\";\nimport { DNASequencesEntity } from \"../../core/entities/sequence.entity\";\nimport { DnaSequenceService } from \"../services/dna_sequence.service\";\nimport { ConnectionDB } from \"../../core/services/db/db.service\";\nimport { IMutantDNARequestModel } from \"../models/request.model\";\nimport { Request, Response } from \"express\";\n\nexport class DNAChecker {\n  private dnaMatrixFull: Nucleotide[][] = [];\n  private sequenceCounter: number = 0;\n  private context: SearchContext;\n\n  private readonly dnaSequenceService: DnaSequenceService;\n\n  constructor() {\n    this.dnaSequenceService = new DnaSequenceService();\n  }\n\n  private isMutant(dna: string[]): boolean {\n    const size = dna.length;\n    const initTime = new Date().valueOf();\n\n    // Mapeamos el array de entrada en un array 2D para hacer las busquedas en profundidad\n    dNACheckerController.mapDnaMatrix(dna);\n\n    // Verificar secuencia de ADN\n    dNACheckerController.context = new SearchContext(size);\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        /*Realizar comparaci\xF3n con los nucleotidos de la horizontal a la derecha usando la estrategia de\n        busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/\n        dNACheckerController.context.setStrategy(new SearchRightStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la diagonal derecha hacia abajo usando la\n        estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de\n        secuencias*/\n        dNACheckerController.context.setStrategy(new SearchRightDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la vertical hacia abajo usando la estrategia de\n        busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/\n        dNACheckerController.context.setStrategy(new SearchDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la diagonal izquierda hacia abajo usando la\n        estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de\n        secuencias*/\n        dNACheckerController.context.setStrategy(new SearchLeftDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n      }\n    }\n\n    /*no es necesario buscar en otras direcciones puesto que ya toda la matriz fue cubierta\n    Si se encontraron 2 o m\xE1s secuencias se determina que el DNA es de un mutante*/\n    const isMutantDNA =\n      dNACheckerController.sequenceCounter >= 2 ? true : false;\n\n    const endTime = new Date().valueOf();\n    console.log(\"exec time: \", (endTime - initTime) / 1000);\n    return isMutantDNA;\n  }\n\n  private mapDnaMatrix(dna: string[]) {\n    dNACheckerController.dnaMatrixFull = new Array<Nucleotide[]>();\n    let line: string[] = [];\n\n    dna.forEach((value: string, j: number) => {\n      line = value.split(\"\");\n      const row: Nucleotide[] = new Array<Nucleotide>();\n      line.forEach((nucleotide, i) => {\n        row.push(new Nucleotide(nucleotide));\n      });\n      dNACheckerController.dnaMatrixFull.push(row);\n    });\n  }\n\n  private async saveDNASequence(\n    dna: string,\n    subjectType: string\n  ): Promise<DNASequencesEntity> {\n    try {\n      const dnaEntity = new DNASequencesEntity();\n      dnaEntity.sequence = dna;\n      dnaEntity.subjectType = subjectType;\n\n      const result =\n        await dNACheckerController.dnaSequenceService.saveDNASequence(\n          dnaEntity\n        );\n\n      await ConnectionDB.closeConnection();\n      return result;\n    } catch (e) {\n      console.log(\"saveDNASequence Error: \", e);\n      await ConnectionDB.closeConnection();\n      throw new Error(e);\n    }\n  }\n\n  public checkisMutant(rq: Request, rs: Response) {\n    try {\n      // Leer secuencia de ADN desde el request\n      const request = rq.body as IMutantDNARequestModel;\n      const dnaSequence = request.dna;\n      const isMutant = dNACheckerController.isMutant(dnaSequence);\n      // almacenar en BD\n      dNACheckerController.saveDNASequence(\n        dnaSequence.toString(),\n        isMutant ? \"M\" : \"H\"\n      );\n\n      if (isMutant) {\n        rs.status(200).send(\"200-OK\");\n      } else {\n        rs.status(403).send(\"403-Forbidden  \");\n      }\n    } catch (error) {\n      return rs\n        .status(500)\n        .send({ error: error.message || JSON.stringify(error) });\n    }\n  }\n}\n\nconst dNACheckerController = new DNAChecker();\nexport default dNACheckerController;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"dce7dadc4d6b9bfb363fb548991785a5d6359901"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22315r6cy8=function(){return actualCoverage;};}return actualCoverage;}cov_22315r6cy8();var __awaiter=(cov_22315r6cy8().s[0]++,(cov_22315r6cy8().b[0][0]++,this)&&(cov_22315r6cy8().b[0][1]++,this.__awaiter)||(cov_22315r6cy8().b[0][2]++,function(thisArg,_arguments,P,generator){cov_22315r6cy8().f[0]++;function adopt(value){cov_22315r6cy8().f[1]++;cov_22315r6cy8().s[1]++;return value instanceof P?(cov_22315r6cy8().b[1][0]++,value):(cov_22315r6cy8().b[1][1]++,new P(function(resolve){cov_22315r6cy8().f[2]++;cov_22315r6cy8().s[2]++;resolve(value);}));}cov_22315r6cy8().s[3]++;return new((cov_22315r6cy8().b[2][0]++,P)||(cov_22315r6cy8().b[2][1]++,P=Promise))(function(resolve,reject){cov_22315r6cy8().f[3]++;function fulfilled(value){cov_22315r6cy8().f[4]++;cov_22315r6cy8().s[4]++;try{cov_22315r6cy8().s[5]++;step(generator.next(value));}catch(e){cov_22315r6cy8().s[6]++;reject(e);}}function rejected(value){cov_22315r6cy8().f[5]++;cov_22315r6cy8().s[7]++;try{cov_22315r6cy8().s[8]++;step(generator["throw"](value));}catch(e){cov_22315r6cy8().s[9]++;reject(e);}}function step(result){cov_22315r6cy8().f[6]++;cov_22315r6cy8().s[10]++;result.done?(cov_22315r6cy8().b[3][0]++,resolve(result.value)):(cov_22315r6cy8().b[3][1]++,adopt(result.value).then(fulfilled,rejected));}cov_22315r6cy8().s[11]++;step((generator=generator.apply(thisArg,(cov_22315r6cy8().b[4][0]++,_arguments)||(cov_22315r6cy8().b[4][1]++,[]))).next());});}));cov_22315r6cy8().s[12]++;Object.defineProperty(exports,"__esModule",{value:true});cov_22315r6cy8().s[13]++;exports.DNAChecker=void 0;const nucleotide_model_1=(cov_22315r6cy8().s[14]++,require("../models/nucleotide.model"));const context_1=(cov_22315r6cy8().s[15]++,require("./searching-strategies/context"));const search_right_strategy_1=(cov_22315r6cy8().s[16]++,require("./searching-strategies/concrete-strategies/search-right-strategy"));const search_rigth_down_strategy_1=(cov_22315r6cy8().s[17]++,require("./searching-strategies/concrete-strategies/search-rigth-down-strategy"));const search_down_strategy_1=(cov_22315r6cy8().s[18]++,require("./searching-strategies/concrete-strategies/search-down-strategy"));const search_left_down_strategy_1=(cov_22315r6cy8().s[19]++,require("./searching-strategies/concrete-strategies/search-left-down-strategy"));const sequence_entity_1=(cov_22315r6cy8().s[20]++,require("../../core/entities/sequence.entity"));const dna_sequence_service_1=(cov_22315r6cy8().s[21]++,require("../services/dna_sequence.service"));const db_service_1=(cov_22315r6cy8().s[22]++,require("../../core/services/db/db.service"));class DNAChecker{constructor(){cov_22315r6cy8().f[7]++;cov_22315r6cy8().s[23]++;this.dnaMatrixFull=[];cov_22315r6cy8().s[24]++;this.sequenceCounter=0;cov_22315r6cy8().s[25]++;this.dnaSequenceService=new dna_sequence_service_1.DnaSequenceService();}isMutant(dna){cov_22315r6cy8().f[8]++;const size=(cov_22315r6cy8().s[26]++,dna.length);const initTime=(cov_22315r6cy8().s[27]++,new Date().valueOf());// Mapeamos el array de entrada en un array 2D para hacer las busquedas en profundidad
cov_22315r6cy8().s[28]++;dNACheckerController.mapDnaMatrix(dna);// Verificar secuencia de ADN
cov_22315r6cy8().s[29]++;dNACheckerController.context=new context_1.SearchContext(size);cov_22315r6cy8().s[30]++;for(let i=(cov_22315r6cy8().s[31]++,0);i<size;i++){cov_22315r6cy8().s[32]++;for(let j=(cov_22315r6cy8().s[33]++,0);j<size;j++){cov_22315r6cy8().s[34]++;/*Realizar comparación con los nucleotidos de la horizontal a la derecha usando la estrategia de
                busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/dNACheckerController.context.setStrategy(new search_right_strategy_1.SearchRightStrategy());cov_22315r6cy8().s[35]++;dNACheckerController.sequenceCounter=dNACheckerController.context.search(i,j,dNACheckerController.dnaMatrixFull)?(cov_22315r6cy8().b[5][0]++,dNACheckerController.sequenceCounter+1):(cov_22315r6cy8().b[5][1]++,dNACheckerController.sequenceCounter);/*Realizar comparación con los nucleotidos de la diagonal derecha hacia abajo usando la
                estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de
                secuencias*/cov_22315r6cy8().s[36]++;dNACheckerController.context.setStrategy(new search_rigth_down_strategy_1.SearchRightDownStrategy());cov_22315r6cy8().s[37]++;dNACheckerController.sequenceCounter=dNACheckerController.context.search(i,j,dNACheckerController.dnaMatrixFull)?(cov_22315r6cy8().b[6][0]++,dNACheckerController.sequenceCounter+1):(cov_22315r6cy8().b[6][1]++,dNACheckerController.sequenceCounter);/*Realizar comparación con los nucleotidos de la vertical hacia abajo usando la estrategia de
                busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/cov_22315r6cy8().s[38]++;dNACheckerController.context.setStrategy(new search_down_strategy_1.SearchDownStrategy());cov_22315r6cy8().s[39]++;dNACheckerController.sequenceCounter=dNACheckerController.context.search(i,j,dNACheckerController.dnaMatrixFull)?(cov_22315r6cy8().b[7][0]++,dNACheckerController.sequenceCounter+1):(cov_22315r6cy8().b[7][1]++,dNACheckerController.sequenceCounter);/*Realizar comparación con los nucleotidos de la diagonal izquierda hacia abajo usando la
                estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de
                secuencias*/cov_22315r6cy8().s[40]++;dNACheckerController.context.setStrategy(new search_left_down_strategy_1.SearchLeftDownStrategy());cov_22315r6cy8().s[41]++;dNACheckerController.sequenceCounter=dNACheckerController.context.search(i,j,dNACheckerController.dnaMatrixFull)?(cov_22315r6cy8().b[8][0]++,dNACheckerController.sequenceCounter+1):(cov_22315r6cy8().b[8][1]++,dNACheckerController.sequenceCounter);}}/*no es necesario buscar en otras direcciones puesto que ya toda la matriz fue cubierta
        Si se encontraron 2 o más secuencias se determina que el DNA es de un mutante*/const isMutantDNA=(cov_22315r6cy8().s[42]++,dNACheckerController.sequenceCounter>=2?(cov_22315r6cy8().b[9][0]++,true):(cov_22315r6cy8().b[9][1]++,false));const endTime=(cov_22315r6cy8().s[43]++,new Date().valueOf());cov_22315r6cy8().s[44]++;console.log("exec time: ",(endTime-initTime)/1000);cov_22315r6cy8().s[45]++;return isMutantDNA;}mapDnaMatrix(dna){cov_22315r6cy8().f[9]++;cov_22315r6cy8().s[46]++;dNACheckerController.dnaMatrixFull=new Array();let line=(cov_22315r6cy8().s[47]++,[]);cov_22315r6cy8().s[48]++;dna.forEach((value,j)=>{cov_22315r6cy8().f[10]++;cov_22315r6cy8().s[49]++;line=value.split("");const row=(cov_22315r6cy8().s[50]++,new Array());cov_22315r6cy8().s[51]++;line.forEach((nucleotide,i)=>{cov_22315r6cy8().f[11]++;cov_22315r6cy8().s[52]++;row.push(new nucleotide_model_1.Nucleotide(nucleotide));});cov_22315r6cy8().s[53]++;dNACheckerController.dnaMatrixFull.push(row);});}saveDNASequence(dna,subjectType){cov_22315r6cy8().f[12]++;cov_22315r6cy8().s[54]++;return __awaiter(this,void 0,void 0,function*(){cov_22315r6cy8().f[13]++;cov_22315r6cy8().s[55]++;try{const dnaEntity=(cov_22315r6cy8().s[56]++,new sequence_entity_1.DNASequencesEntity());cov_22315r6cy8().s[57]++;dnaEntity.sequence=dna;cov_22315r6cy8().s[58]++;dnaEntity.subjectType=subjectType;const result=(cov_22315r6cy8().s[59]++,yield dNACheckerController.dnaSequenceService.saveDNASequence(dnaEntity));cov_22315r6cy8().s[60]++;yield db_service_1.ConnectionDB.closeConnection();cov_22315r6cy8().s[61]++;return result;}catch(e){cov_22315r6cy8().s[62]++;console.log("saveDNASequence Error: ",e);cov_22315r6cy8().s[63]++;yield db_service_1.ConnectionDB.closeConnection();cov_22315r6cy8().s[64]++;throw new Error(e);}});}checkisMutant(rq,rs){cov_22315r6cy8().f[14]++;cov_22315r6cy8().s[65]++;try{// Leer secuencia de ADN desde el request
const request=(cov_22315r6cy8().s[66]++,rq.body);const dnaSequence=(cov_22315r6cy8().s[67]++,request.dna);const isMutant=(cov_22315r6cy8().s[68]++,dNACheckerController.isMutant(dnaSequence));// almacenar en BD
cov_22315r6cy8().s[69]++;dNACheckerController.saveDNASequence(dnaSequence.toString(),isMutant?(cov_22315r6cy8().b[10][0]++,"M"):(cov_22315r6cy8().b[10][1]++,"H"));cov_22315r6cy8().s[70]++;if(isMutant){cov_22315r6cy8().b[11][0]++;cov_22315r6cy8().s[71]++;rs.status(200).send("200-OK");}else{cov_22315r6cy8().b[11][1]++;cov_22315r6cy8().s[72]++;rs.status(403).send("403-Forbidden  ");}}catch(error){cov_22315r6cy8().s[73]++;return rs.status(500).send({error:(cov_22315r6cy8().b[12][0]++,error.message)||(cov_22315r6cy8().b[12][1]++,JSON.stringify(error))});}}}cov_22315r6cy8().s[74]++;exports.DNAChecker=DNAChecker;const dNACheckerController=(cov_22315r6cy8().s[75]++,new DNAChecker());cov_22315r6cy8().s[76]++;exports.default=dNACheckerController;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kcm9kcjI1L0Rlc2t0b3AvTXV0YW50RE5BQ2hlY2tlci9zcmMvbW9kdWxlcy9kbmEtY2hlY2tlci9jb250cm9sbGVycy9kbmEtY2hlY2tlci5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzL29CQUdBOzBoREFIQSxLQUFBLENBQUEsa0JBQUEsMkJBQUEsT0FBQSxDQUFBLDRCQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxTQUFBLDJCQUFBLE9BQUEsQ0FBQSxnQ0FBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsdUJBQUEsMkJBQUEsT0FBQSxDQUFBLGtFQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSw0QkFBQSwyQkFBQSxPQUFBLENBQUEsdUVBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLHNCQUFBLDJCQUFBLE9BQUEsQ0FBQSxpRUFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsMkJBQUEsMkJBQUEsT0FBQSxDQUFBLHNFQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxpQkFBQSwyQkFBQSxPQUFBLENBQUEscUNBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLHNCQUFBLDJCQUFBLE9BQUEsQ0FBQSxrQ0FBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsWUFBQSwyQkFBQSxPQUFBLENBQUEsbUNBQUEsQ0FBQSxDQUFBLENBSUEsS0FBYSxDQUFBLFVBQVUsQ0FPckIsV0FBQSxFQUFBLGtEQU5RLEtBQUEsYUFBQSxDQUFnQyxFQUFoQyxDQU1SLHlCQUxRLEtBQUEsZUFBQSxDQUEwQixDQUExQixDQUtSLHlCQUNFLEtBQUssa0JBQUwsQ0FBMEIsR0FBSSxDQUFBLHNCQUFBLENBQUEsa0JBQUosRUFBMUIsQ0FDRCxDQUVPLFFBQVEsQ0FBQyxHQUFELENBQWMseUJBQzVCLEtBQU0sQ0FBQSxJQUFJLDJCQUFHLEdBQUcsQ0FBQyxNQUFQLENBQVYsQ0FDQSxLQUFNLENBQUEsUUFBUSwyQkFBRyxH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LEtBQUosQ0FBVSxDQUFWLENBQU4sQ0FDRCxDQUNGLEMsRUFBQSxDQUVNLGFBQWEsQ0FBQyxFQUFELENBQWMsRUFBZCxDQUEwQixtREFDNUMsR0FBSSxDQUNGO0FBQ0EsS0FBTSxDQUFBLE9BQU8sMkJBQUcsRUFBRSxDQUFDLElBQU4sQ0FBYixDQUNBLEtBQU0sQ0FBQSxXQUFXLDJCQUFHLE9BQU8sQ0FBQyxHQUFYLENBQWpCLENBQ0EsS0FBTSxDQUFBLFFBQVEsMkJBQUcsb0JBQW9CLENBQUMsUUFBckIsQ0FBOEIsV0FBOUIsQ0FBSCxDQUFkLENBQ0E7QUFMRSx5QkFNRixvQkFBb0IsQ0FBQyxlQUFyQixDQUNFLFdBQVcsQ0FBQyxRQUFaLEVBREYsQ0FFRSxRQUFRLDhCQUFHLEdBQUgsK0JBQVMsR0FBVCxDQUZWLEVBTkUseUJBV0YsR0FBSSxRQUFKLENBQWMsc0RBQ1osRUFBRSxDQUFDLE1BQUgsQ0FBVSxHQUFWLEVBQWUsSUFBZixDQUFvQixRQUFwQixFQUNELENBRkQsSUFFTyxzREFDTCxFQUFFLENBQUMsTUFBSCxDQUFVLEdBQVYsRUFBZSxJQUFmLENBQW9CLGlCQUFwQixFQUNELENBQ0YsQ0FBQyxNQUFPLEtBQVAsQ0FBYywwQkFDZCxNQUFPLENBQUEsRUFBRSxDQUNOLE1BREksQ0FDRyxHQURILEVBRUosSUFGSSxDQUVDLENBQUUsS0FBSyxDQUFFLDZCQUFBLEtBQUssQ0FBQyxPQUFOLGdDQUFpQixJQUFJLENBQUMsU0FBTCxDQUFlLEtBQWYsQ0FBakIsQ0FBVCxDQUZELENBQVAsQ0FHRCxDQUNGLENBL0lvQixDLHlCQUF2QixPQUFBLENBQUEsVUFBQSxDQUFBLFVBQUEsQ0FrSkEsS0FBTSxDQUFBLG9CQUFvQiwyQkFBRyxHQUFJLENBQUEsVUFBSixFQUFILENBQTFCLEMseUJBQ0EsT0FBQSxDQUFBLE9BQUEsQ0FBZSxvQkFBZixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTnVjbGVvdGlkZSB9IGZyb20gXCIuLi9tb2RlbHMvbnVjbGVvdGlkZS5tb2RlbFwiO1xuaW1wb3J0IHsgU2VhcmNoQ29udGV4dCB9IGZyb20gXCIuL3NlYXJjaGluZy1zdHJhdGVnaWVzL2NvbnRleHRcIjtcbmltcG9ydCB7IFNlYXJjaFJpZ2h0U3RyYXRlZ3kgfSBmcm9tIFwiLi9zZWFyY2hpbmctc3RyYXRlZ2llcy9jb25jcmV0ZS1zdHJhdGVnaWVzL3NlYXJjaC1yaWdodC1zdHJhdGVneVwiO1xuaW1wb3J0IHsgU2VhcmNoUmlnaHREb3duU3RyYXRlZ3kgfSBmcm9tIFwiLi9zZWFyY2hpbmctc3RyYXRlZ2llcy9jb25jcmV0ZS1zdHJhdGVnaWVzL3NlYXJjaC1yaWd0aC1kb3duLXN0cmF0ZWd5XCI7XG5pbXBvcnQgeyBTZWFyY2hEb3duU3RyYXRlZ3kgfSBmcm9tIFwiLi9zZWFyY2hpbmctc3RyYXRlZ2llcy9jb25jcmV0ZS1zdHJhdGVnaWVzL3NlYXJjaC1kb3duLXN0cmF0ZWd5XCI7XG5pbXBvcnQgeyBTZWFyY2hMZWZ0RG93blN0cmF0ZWd5IH0gZnJvbSBcIi4vc2VhcmNoaW5nLXN0cmF0ZWdpZXMvY29uY3JldGUtc3RyYXRlZ2llcy9zZWFyY2gtbGVmdC1kb3duLXN0cmF0ZWd5XCI7XG5pbXBvcnQgeyBETkFTZXF1ZW5jZXNFbnRpdHkgfSBmcm9tIFwiLi4vLi4vY29yZS9lbnRpdGllcy9zZXF1ZW5jZS5lbnRpdHlcIjtcbmltcG9ydCB7IERuYVNlcXVlbmNlU2VydmljZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9kbmFfc2VxdWVuY2Uuc2VydmljZVwiO1xuaW1wb3J0IHsgQ29ubmVjdGlvbkRCIH0gZnJvbSBcIi4uLy4uL2NvcmUvc2VydmljZXMvZGIvZGIuc2VydmljZVwiO1xuaW1wb3J0IHsgSU11dGFudEROQVJlcXVlc3RNb2RlbCB9IGZyb20gXCIuLi9tb2RlbHMvcmVxdWVzdC5tb2RlbFwiO1xuaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tIFwiZXhwcmVzc1wiO1xuXG5leHBvcnQgY2xhc3MgRE5BQ2hlY2tlciB7XG4gIHByaXZhdGUgZG5hTWF0cml4RnVsbDogTnVjbGVvdGlkZVtdW10gPSBbXTtcbiAgcHJpdmF0ZSBzZXF1ZW5jZUNvdW50ZXI6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgY29udGV4dDogU2VhcmNoQ29udGV4dDtcblxuICBwcml2YXRlIHJlYWRvbmx5IGRuYVNlcXVlbmNlU2VydmljZTogRG5hU2VxdWVuY2VTZXJ2aWNlO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZG5hU2VxdWVuY2VTZXJ2aWNlID0gbmV3IERuYVNlcXVlbmNlU2VydmljZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBpc011dGFudChkbmE6IHN0cmluZ1tdKTogYm9vbGVhbiB7XG4gICAgY29uc3Qgc2l6ZSA9IGRuYS5sZW5ndGg7XG4gICAgY29uc3QgaW5pdFRpbWUgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcblxuICAgIC8vIE1hcGVhbW9zIGVsIGFycmF5IGRlIGVudHJhZGEgZW4gdW4gYXJyYXkgMkQgcGFyYSBoYWNlciBsYXMgYnVzcXVlZGFzIGVuIHByb2Z1bmRpZGFkXG4gICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIubWFwRG5hTWF0cml4KGRuYSk7XG5cbiAgICAvLyBWZXJpZmljYXIgc2VjdWVuY2lhIGRlIEFETlxuICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmNvbnRleHQgPSBuZXcgU2VhcmNoQ29udGV4dChzaXplKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBzaXplOyBqKyspIHtcbiAgICAgICAgLypSZWFsaXphciBjb21wYXJhY2nDs24gY29uIGxvcyBudWNsZW90aWRvcyBkZSBsYSBob3Jpem9udGFsIGEgbGEgZGVyZWNoYSB1c2FuZG8gbGEgZXN0cmF0ZWdpYSBkZVxuICAgICAgICBidXNxdWVkYSBlbiBwcm9mdW5kaWRhZCwgc2kgZW5jdWVudHJhIHVuYSBzZWN1ZW5jaWEgYXVtZW50YSBlbCBjb250YWRvciBkZSBzZWN1ZW5jaWFzKi9cbiAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuY29udGV4dC5zZXRTdHJhdGVneShuZXcgU2VhcmNoUmlnaHRTdHJhdGVneSgpKTtcbiAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuc2VxdWVuY2VDb3VudGVyID1cbiAgICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5jb250ZXh0LnNlYXJjaChcbiAgICAgICAgICAgIGksXG4gICAgICAgICAgICBqLFxuICAgICAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuZG5hTWF0cml4RnVsbFxuICAgICAgICAgIClcbiAgICAgICAgICAgID8gZE5BQ2hlY2tlckNvbnRyb2xsZXIuc2VxdWVuY2VDb3VudGVyICsgMVxuICAgICAgICAgICAgOiBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXI7XG5cbiAgICAgICAgLypSZWFsaXphciBjb21wYXJhY2nDs24gY29uIGxvcyBudWNsZW90aWRvcyBkZSBsYSBkaWFnb25hbCBkZXJlY2hhIGhhY2lhIGFiYWpvIHVzYW5kbyBsYVxuICAgICAgICBlc3RyYXRlZ2lhIGRlIGJ1c3F1ZWRhIGVuIHByb2Z1bmRpZGFkLCBzaSBlbmN1ZW50cmEgdW5hIHNlY3VlbmNpYSBhdW1lbnRhIGVsIGNvbnRhZG9yIGRlXG4gICAgICAgIHNlY3VlbmNpYXMqL1xuICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5jb250ZXh0LnNldFN0cmF0ZWd5KG5ldyBTZWFyY2hSaWdodERvd25TdHJhdGVneSgpKTtcbiAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuc2VxdWVuY2VDb3VudGVyID1cbiAgICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5jb250ZXh0LnNlYXJjaChcbiAgICAgICAgICAgIGksXG4gICAgICAgICAgICBqLFxuICAgICAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuZG5hTWF0cml4RnVsbFxuICAgICAgICAgIClcbiAgICAgICAgICAgID8gZE5BQ2hlY2tlckNvbnRyb2xsZXIuc2VxdWVuY2VDb3VudGVyICsgMVxuICAgICAgICAgICAgOiBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXI7XG5cbiAgICAgICAgLypSZWFsaXphciBjb21wYXJhY2nDs24gY29uIGxvcyBudWNsZW90aWRvcyBkZSBsYSB2ZXJ0aWNhbCBoYWNpYSBhYmFqbyB1c2FuZG8gbGEgZXN0cmF0ZWdpYSBkZVxuICAgICAgICBidXNxdWVkYSBlbiBwcm9mdW5kaWRhZCwgc2kgZW5jdWVudHJhIHVuYSBzZWN1ZW5jaWEgYXVtZW50YSBlbCBjb250YWRvciBkZSBzZWN1ZW5jaWFzKi9cbiAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuY29udGV4dC5zZXRTdHJhdGVneShuZXcgU2VhcmNoRG93blN0cmF0ZWd5KCkpO1xuICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgPVxuICAgICAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmNvbnRleHQuc2VhcmNoKFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5kbmFNYXRyaXhGdWxsXG4gICAgICAgICAgKVxuICAgICAgICAgICAgPyBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgKyAxXG4gICAgICAgICAgICA6IGROQUNoZWNrZXJDb250cm9sbGVyLnNlcXVlbmNlQ291bnRlcjtcblxuICAgICAgICAvKlJlYWxpemFyIGNvbXBhcmFjacOzbiBjb24gbG9zIG51Y2xlb3RpZG9zIGRlIGxhIGRpYWdvbmFsIGl6cXVpZXJkYSBoYWNpYSBhYmFqbyB1c2FuZG8gbGFcbiAgICAgICAgZXN0cmF0ZWdpYSBkZSBidXNxdWVkYSBlbiBwcm9mdW5kaWRhZCwgc2kgZW5jdWVudHJhIHVuYSBzZWN1ZW5jaWEgYXVtZW50YSBlbCBjb250YWRvciBkZVxuICAgICAgICBzZWN1ZW5jaWFzKi9cbiAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuY29udGV4dC5zZXRTdHJhdGVneShuZXcgU2VhcmNoTGVmdERvd25TdHJhdGVneSgpKTtcbiAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuc2VxdWVuY2VDb3VudGVyID1cbiAgICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5jb250ZXh0LnNlYXJjaChcbiAgICAgICAgICAgIGksXG4gICAgICAgICAgICBqLFxuICAgICAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuZG5hTWF0cml4RnVsbFxuICAgICAgICAgIClcbiAgICAgICAgICAgID8gZE5BQ2hlY2tlckNvbnRyb2xsZXIuc2VxdWVuY2VDb3VudGVyICsgMVxuICAgICAgICAgICAgOiBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLypubyBlcyBuZWNlc2FyaW8gYnVzY2FyIGVuIG90cmFzIGRpcmVjY2lvbmVzIHB1ZXN0byBxdWUgeWEgdG9kYSBsYSBtYXRyaXogZnVlIGN1YmllcnRhXG4gICAgU2kgc2UgZW5jb250cmFyb24gMiBvIG3DoXMgc2VjdWVuY2lhcyBzZSBkZXRlcm1pbmEgcXVlIGVsIEROQSBlcyBkZSB1biBtdXRhbnRlKi9cbiAgICBjb25zdCBpc011dGFudEROQSA9XG4gICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgPj0gMiA/IHRydWUgOiBmYWxzZTtcblxuICAgIGNvbnN0IGVuZFRpbWUgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcbiAgICBjb25zb2xlLmxvZyhcImV4ZWMgdGltZTogXCIsIChlbmRUaW1lIC0gaW5pdFRpbWUpIC8gMTAwMCk7XG4gICAgcmV0dXJuIGlzTXV0YW50RE5BO1xuICB9XG5cbiAgcHJpdmF0ZSBtYXBEbmFNYXRyaXgoZG5hOiBzdHJpbmdbXSkge1xuICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmRuYU1hdHJpeEZ1bGwgPSBuZXcgQXJyYXk8TnVjbGVvdGlkZVtdPigpO1xuICAgIGxldCBsaW5lOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgZG5hLmZvckVhY2goKHZhbHVlOiBzdHJpbmcsIGo6IG51bWJlcikgPT4ge1xuICAgICAgbGluZSA9IHZhbHVlLnNwbGl0KFwiXCIpO1xuICAgICAgY29uc3Qgcm93OiBOdWNsZW90aWRlW10gPSBuZXcgQXJyYXk8TnVjbGVvdGlkZT4oKTtcbiAgICAgIGxpbmUuZm9yRWFjaCgobnVjbGVvdGlkZSwgaSkgPT4ge1xuICAgICAgICByb3cucHVzaChuZXcgTnVjbGVvdGlkZShudWNsZW90aWRlKSk7XG4gICAgICB9KTtcbiAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmRuYU1hdHJpeEZ1bGwucHVzaChyb3cpO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBzYXZlRE5BU2VxdWVuY2UoXG4gICAgZG5hOiBzdHJpbmcsXG4gICAgc3ViamVjdFR5cGU6IHN0cmluZ1xuICApOiBQcm9taXNlPEROQVNlcXVlbmNlc0VudGl0eT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBkbmFFbnRpdHkgPSBuZXcgRE5BU2VxdWVuY2VzRW50aXR5KCk7XG4gICAgICBkbmFFbnRpdHkuc2VxdWVuY2UgPSBkbmE7XG4gICAgICBkbmFFbnRpdHkuc3ViamVjdFR5cGUgPSBzdWJqZWN0VHlwZTtcblxuICAgICAgY29uc3QgcmVzdWx0ID1cbiAgICAgICAgYXdhaXQgZE5BQ2hlY2tlckNvbnRyb2xsZXIuZG5hU2VxdWVuY2VTZXJ2aWNlLnNhdmVETkFTZXF1ZW5jZShcbiAgICAgICAgICBkbmFFbnRpdHlcbiAgICAgICAgKTtcblxuICAgICAgYXdhaXQgQ29ubmVjdGlvbkRCLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInNhdmVETkFTZXF1ZW5jZSBFcnJvcjogXCIsIGUpO1xuICAgICAgYXdhaXQgQ29ubmVjdGlvbkRCLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBjaGVja2lzTXV0YW50KHJxOiBSZXF1ZXN0LCByczogUmVzcG9uc2UpIHtcbiAgICB0cnkge1xuICAgICAgLy8gTGVlciBzZWN1ZW5jaWEgZGUgQUROIGRlc2RlIGVsIHJlcXVlc3RcbiAgICAgIGNvbnN0IHJlcXVlc3QgPSBycS5ib2R5IGFzIElNdXRhbnRETkFSZXF1ZXN0TW9kZWw7XG4gICAgICBjb25zdCBkbmFTZXF1ZW5jZSA9IHJlcXVlc3QuZG5hO1xuICAgICAgY29uc3QgaXNNdXRhbnQgPSBkTkFDaGVja2VyQ29udHJvbGxlci5pc011dGFudChkbmFTZXF1ZW5jZSk7XG4gICAgICAvLyBhbG1hY2VuYXIgZW4gQkRcbiAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLnNhdmVETkFTZXF1ZW5jZShcbiAgICAgICAgZG5hU2VxdWVuY2UudG9TdHJpbmcoKSxcbiAgICAgICAgaXNNdXRhbnQgPyBcIk1cIiA6IFwiSFwiXG4gICAgICApO1xuXG4gICAgICBpZiAoaXNNdXRhbnQpIHtcbiAgICAgICAgcnMuc3RhdHVzKDIwMCkuc2VuZChcIjIwMC1PS1wiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJzLnN0YXR1cyg0MDMpLnNlbmQoXCI0MDMtRm9yYmlkZGVuICBcIik7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiByc1xuICAgICAgICAuc3RhdHVzKDUwMClcbiAgICAgICAgLnNlbmQoeyBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCBKU09OLnN0cmluZ2lmeShlcnJvcikgfSk7XG4gICAgfVxuICB9XG59XG5cbmNvbnN0IGROQUNoZWNrZXJDb250cm9sbGVyID0gbmV3IEROQUNoZWNrZXIoKTtcbmV4cG9ydCBkZWZhdWx0IGROQUNoZWNrZXJDb250cm9sbGVyO1xuIl19