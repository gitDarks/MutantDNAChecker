"use strict";function cov_22315r6cy8(){var path="/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts";var hash="00fbac7c363b0e90e0ea8200d531df9dc440a9b1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts",statementMap:{"0":{start:{line:2,column:16},end:{line:10,column:1}},"1":{start:{line:3,column:28},end:{line:3,column:110}},"2":{start:{line:3,column:91},end:{line:3,column:106}},"3":{start:{line:4,column:4},end:{line:9,column:7}},"4":{start:{line:5,column:36},end:{line:5,column:97}},"5":{start:{line:5,column:42},end:{line:5,column:70}},"6":{start:{line:5,column:85},end:{line:5,column:95}},"7":{start:{line:6,column:35},end:{line:6,column:100}},"8":{start:{line:6,column:41},end:{line:6,column:73}},"9":{start:{line:6,column:88},end:{line:6,column:98}},"10":{start:{line:7,column:32},end:{line:7,column:116}},"11":{start:{line:8,column:8},end:{line:8,column:78}},"12":{start:{line:11,column:0},end:{line:11,column:62}},"13":{start:{line:12,column:0},end:{line:12,column:28}},"14":{start:{line:13,column:27},end:{line:13,column:64}},"15":{start:{line:14,column:18},end:{line:14,column:59}},"16":{start:{line:15,column:32},end:{line:15,column:107}},"17":{start:{line:16,column:37},end:{line:16,column:117}},"18":{start:{line:17,column:31},end:{line:17,column:105}},"19":{start:{line:18,column:36},end:{line:18,column:115}},"20":{start:{line:19,column:26},end:{line:19,column:72}},"21":{start:{line:20,column:31},end:{line:20,column:74}},"22":{start:{line:21,column:21},end:{line:21,column:65}},"23":{start:{line:24,column:8},end:{line:24,column:32}},"24":{start:{line:25,column:8},end:{line:25,column:33}},"25":{start:{line:26,column:8},end:{line:26,column:82}},"26":{start:{line:29,column:21},end:{line:29,column:31}},"27":{start:{line:30,column:25},end:{line:30,column:45}},"28":{start:{line:32,column:8},end:{line:32,column:31}},"29":{start:{line:33,column:8},end:{line:33,column:40}},"30":{start:{line:35,column:8},end:{line:35,column:57}},"31":{start:{line:36,column:8},end:{line:65,column:9}},"32":{start:{line:36,column:21},end:{line:36,column:22}},"33":{start:{line:37,column:12},end:{line:64,column:13}},"34":{start:{line:37,column:25},end:{line:37,column:26}},"35":{start:{line:40,column:16},end:{line:40,column:92}},"36":{start:{line:41,column:16},end:{line:43,column:43}},"37":{start:{line:47,column:16},end:{line:47,column:101}},"38":{start:{line:48,column:16},end:{line:50,column:43}},"39":{start:{line:53,column:16},end:{line:53,column:90}},"40":{start:{line:54,column:16},end:{line:56,column:43}},"41":{start:{line:60,column:16},end:{line:60,column:99}},"42":{start:{line:61,column:16},end:{line:63,column:43}},"43":{start:{line:68,column:28},end:{line:68,column:68}},"44":{start:{line:69,column:24},end:{line:69,column:44}},"45":{start:{line:70,column:8},end:{line:70,column:64}},"46":{start:{line:71,column:8},end:{line:71,column:27}},"47":{start:{line:74,column:8},end:{line:74,column:41}},"48":{start:{line:75,column:19},end:{line:75,column:21}},"49":{start:{line:76,column:8},end:{line:83,column:11}},"50":{start:{line:77,column:12},end:{line:77,column:35}},"51":{start:{line:78,column:24},end:{line:78,column:35}},"52":{start:{line:79,column:12},end:{line:81,column:15}},"53":{start:{line:80,column:16},end:{line:80,column:72}},"54":{start:{line:82,column:12},end:{line:82,column:41}},"55":{start:{line:86,column:8},end:{line:100,column:11}},"56":{start:{line:87,column:12},end:{line:99,column:13}},"57":{start:{line:88,column:34},end:{line:88,column:76}},"58":{start:{line:89,column:16},end:{line:89,column:41}},"59":{start:{line:90,column:16},end:{line:90,column:52}},"60":{start:{line:91,column:31},end:{line:91,column:87}},"61":{start:{line:92,column:16},end:{line:92,column:66}},"62":{start:{line:93,column:16},end:{line:93,column:30}},"63":{start:{line:96,column:16},end:{line:96,column:58}},"64":{start:{line:97,column:16},end:{line:97,column:66}},"65":{start:{line:98,column:16},end:{line:98,column:35}},"66":{start:{line:103,column:0},end:{line:103,column:32}},"67":{start:{line:104,column:29},end:{line:104,column:45}},"68":{start:{line:105,column:0},end:{line:105,column:39}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:44},end:{line:2,column:45}},loc:{start:{line:2,column:89},end:{line:10,column:1}},line:2},"1":{name:"adopt",decl:{start:{line:3,column:13},end:{line:3,column:18}},loc:{start:{line:3,column:26},end:{line:3,column:112}},line:3},"2":{name:"(anonymous_2)",decl:{start:{line:3,column:70},end:{line:3,column:71}},loc:{start:{line:3,column:89},end:{line:3,column:108}},line:3},"3":{name:"(anonymous_3)",decl:{start:{line:4,column:36},end:{line:4,column:37}},loc:{start:{line:4,column:63},end:{line:9,column:5}},line:4},"4":{name:"fulfilled",decl:{start:{line:5,column:17},end:{line:5,column:26}},loc:{start:{line:5,column:34},end:{line:5,column:99}},line:5},"5":{name:"rejected",decl:{start:{line:6,column:17},end:{line:6,column:25}},loc:{start:{line:6,column:33},end:{line:6,column:102}},line:6},"6":{name:"step",decl:{start:{line:7,column:17},end:{line:7,column:21}},loc:{start:{line:7,column:30},end:{line:7,column:118}},line:7},"7":{name:"(anonymous_7)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:18},end:{line:27,column:5}},line:23},"8":{name:"(anonymous_8)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:18},end:{line:72,column:5}},line:28},"9":{name:"(anonymous_9)",decl:{start:{line:73,column:4},end:{line:73,column:5}},loc:{start:{line:73,column:22},end:{line:84,column:5}},line:73},"10":{name:"(anonymous_10)",decl:{start:{line:76,column:20},end:{line:76,column:21}},loc:{start:{line:76,column:34},end:{line:83,column:9}},line:76},"11":{name:"(anonymous_11)",decl:{start:{line:79,column:25},end:{line:79,column:26}},loc:{start:{line:79,column:44},end:{line:81,column:13}},line:79},"12":{name:"(anonymous_12)",decl:{start:{line:85,column:4},end:{line:85,column:5}},loc:{start:{line:85,column:38},end:{line:101,column:5}},line:85},"13":{name:"(anonymous_13)",decl:{start:{line:86,column:47},end:{line:86,column:48}},loc:{start:{line:86,column:60},end:{line:100,column:9}},line:86}},branchMap:{"0":{loc:{start:{line:2,column:16},end:{line:10,column:1}},type:"binary-expr",locations:[{start:{line:2,column:17},end:{line:2,column:21}},{start:{line:2,column:25},end:{line:2,column:39}},{start:{line:2,column:44},end:{line:10,column:1}}],line:2},"1":{loc:{start:{line:3,column:35},end:{line:3,column:109}},type:"cond-expr",locations:[{start:{line:3,column:56},end:{line:3,column:61}},{start:{line:3,column:64},end:{line:3,column:109}}],line:3},"2":{loc:{start:{line:4,column:16},end:{line:4,column:34}},type:"binary-expr",locations:[{start:{line:4,column:16},end:{line:4,column:17}},{start:{line:4,column:22},end:{line:4,column:33}}],line:4},"3":{loc:{start:{line:7,column:32},end:{line:7,column:115}},type:"cond-expr",locations:[{start:{line:7,column:46},end:{line:7,column:67}},{start:{line:7,column:70},end:{line:7,column:115}}],line:7},"4":{loc:{start:{line:8,column:51},end:{line:8,column:67}},type:"binary-expr",locations:[{start:{line:8,column:51},end:{line:8,column:61}},{start:{line:8,column:65},end:{line:8,column:67}}],line:8},"5":{loc:{start:{line:41,column:39},end:{line:43,column:42}},type:"cond-expr",locations:[{start:{line:42,column:22},end:{line:42,column:46}},{start:{line:43,column:22},end:{line:43,column:42}}],line:41},"6":{loc:{start:{line:48,column:39},end:{line:50,column:42}},type:"cond-expr",locations:[{start:{line:49,column:22},end:{line:49,column:46}},{start:{line:50,column:22},end:{line:50,column:42}}],line:48},"7":{loc:{start:{line:54,column:39},end:{line:56,column:42}},type:"cond-expr",locations:[{start:{line:55,column:22},end:{line:55,column:46}},{start:{line:56,column:22},end:{line:56,column:42}}],line:54},"8":{loc:{start:{line:61,column:39},end:{line:63,column:42}},type:"cond-expr",locations:[{start:{line:62,column:22},end:{line:62,column:46}},{start:{line:63,column:22},end:{line:63,column:42}}],line:61},"9":{loc:{start:{line:68,column:28},end:{line:68,column:68}},type:"cond-expr",locations:[{start:{line:68,column:56},end:{line:68,column:60}},{start:{line:68,column:63},end:{line:68,column:68}}],line:68}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},inputSourceMap:{version:3,file:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts",sources:["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts"],names:[],mappings:"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",sourcesContent:["import { Nucleotide } from \"../models/nucleotide.model\";\nimport { SearchContext } from \"./searching-strategies/context\";\nimport { SearchRightStrategy } from \"./searching-strategies/concrete-strategies/search-right-strategy\";\nimport { SearchRightDownStrategy } from \"./searching-strategies/concrete-strategies/search-rigth-down-strategy\";\nimport { SearchDownStrategy } from \"./searching-strategies/concrete-strategies/search-down-strategy\";\nimport { SearchLeftDownStrategy } from \"./searching-strategies/concrete-strategies/search-left-down-strategy\";\nimport { DNASequencesEntity } from \"../../core/entities/sequence.entity\";\nimport { DnaSequenceService } from \"../services/dna_sequence.service\";\nimport { ConnectionDB } from \"../../core/services/db/db.service\";\n\nexport class DNAChecker {\n  private dnaMatrixFull: Nucleotide[][] = [];\n  private sequenceCounter: number = 0;\n  private context: SearchContext;\n\n  private readonly dnaSequenceService: DnaSequenceService;\n\n  constructor() {\n    this.dnaSequenceService = new DnaSequenceService();\n  }\n\n  public isMutant(dna: string[]): boolean {\n    const size = dna.length;\n    const initTime = new Date().valueOf();\n\n    // Mapeamos el array de entrada en un array 2D para hacer las busquedas en profundidad\n    this.mapDnaMatrix(dna);\n    console.log(this.dnaMatrixFull);\n\n    // Verificar secuencia de ADN\n    this.context = new SearchContext(size);\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        /*Realizar comparaci\xF3n con los nucleotidos de la horizontal a la derecha usando la estrategia de\n        busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/\n        this.context.setStrategy(new SearchRightStrategy());\n        this.sequenceCounter = this.context.search(i, j, this.dnaMatrixFull)\n          ? this.sequenceCounter + 1\n          : this.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la diagonal derecha hacia abajo usando la\n        estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de\n        secuencias*/\n        this.context.setStrategy(new SearchRightDownStrategy());\n        this.sequenceCounter = this.context.search(i, j, this.dnaMatrixFull)\n          ? this.sequenceCounter + 1\n          : this.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la vertical hacia abajo usando la estrategia de\n        busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/\n        this.context.setStrategy(new SearchDownStrategy());\n        this.sequenceCounter = this.context.search(i, j, this.dnaMatrixFull)\n          ? this.sequenceCounter + 1\n          : this.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la diagonal izquierda hacia abajo usando la\n        estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de\n        secuencias*/\n        this.context.setStrategy(new SearchLeftDownStrategy());\n        this.sequenceCounter = this.context.search(i, j, this.dnaMatrixFull)\n          ? this.sequenceCounter + 1\n          : this.sequenceCounter;\n      }\n    }\n\n    /*no es necesario buscar en otras direcciones puesto que ya toda la matriz fue cubierta\n    Si se encontraron 2 o m\xE1s secuencias se determina que el DNA es de un mutante*/\n    const isMutantDNA = this.sequenceCounter >= 2 ? true : false;\n\n    const endTime = new Date().valueOf();\n    console.log(\"exec time: \", (endTime - initTime) / 1000);\n    return isMutantDNA;\n  }\n\n  private mapDnaMatrix(dna: string[]) {\n    this.dnaMatrixFull = new Array<Nucleotide[]>();\n    let line: string[] = [];\n\n    dna.forEach((value: string, j: number) => {\n      line = value.split(\"\");\n      const row: Nucleotide[] = new Array<Nucleotide>();\n      line.forEach((nucleotide, i) => {\n        row.push(new Nucleotide(nucleotide));\n      });\n      this.dnaMatrixFull.push(row);\n    });\n  }\n\n  public async saveDNASequence(dna: string, subjectType: string):Promise<DNASequencesEntity> {\n    try {\n      const dnaEntity = new DNASequencesEntity();\n      dnaEntity.sequence = dna;\n      dnaEntity.subjectType = subjectType;\n\n      const result = await this.dnaSequenceService.saveDNASequence(dnaEntity);\n\n      await ConnectionDB.closeConnection();\n      return result;\n    } catch (e) {\n      console.log(\"saveDNASequence Error: \", e);\n      await ConnectionDB.closeConnection();\n      throw new Error(e);\n    }\n  }\n}\n\nconst dNACheckerController = new DNAChecker();\nexport default dNACheckerController;"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"00fbac7c363b0e90e0ea8200d531df9dc440a9b1"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22315r6cy8=function(){return actualCoverage;};}return actualCoverage;}cov_22315r6cy8();var __awaiter=(cov_22315r6cy8().s[0]++,(cov_22315r6cy8().b[0][0]++,this)&&(cov_22315r6cy8().b[0][1]++,this.__awaiter)||(cov_22315r6cy8().b[0][2]++,function(thisArg,_arguments,P,generator){cov_22315r6cy8().f[0]++;function adopt(value){cov_22315r6cy8().f[1]++;cov_22315r6cy8().s[1]++;return value instanceof P?(cov_22315r6cy8().b[1][0]++,value):(cov_22315r6cy8().b[1][1]++,new P(function(resolve){cov_22315r6cy8().f[2]++;cov_22315r6cy8().s[2]++;resolve(value);}));}cov_22315r6cy8().s[3]++;return new((cov_22315r6cy8().b[2][0]++,P)||(cov_22315r6cy8().b[2][1]++,P=Promise))(function(resolve,reject){cov_22315r6cy8().f[3]++;function fulfilled(value){cov_22315r6cy8().f[4]++;cov_22315r6cy8().s[4]++;try{cov_22315r6cy8().s[5]++;step(generator.next(value));}catch(e){cov_22315r6cy8().s[6]++;reject(e);}}function rejected(value){cov_22315r6cy8().f[5]++;cov_22315r6cy8().s[7]++;try{cov_22315r6cy8().s[8]++;step(generator["throw"](value));}catch(e){cov_22315r6cy8().s[9]++;reject(e);}}function step(result){cov_22315r6cy8().f[6]++;cov_22315r6cy8().s[10]++;result.done?(cov_22315r6cy8().b[3][0]++,resolve(result.value)):(cov_22315r6cy8().b[3][1]++,adopt(result.value).then(fulfilled,rejected));}cov_22315r6cy8().s[11]++;step((generator=generator.apply(thisArg,(cov_22315r6cy8().b[4][0]++,_arguments)||(cov_22315r6cy8().b[4][1]++,[]))).next());});}));cov_22315r6cy8().s[12]++;Object.defineProperty(exports,"__esModule",{value:true});cov_22315r6cy8().s[13]++;exports.DNAChecker=void 0;const nucleotide_model_1=(cov_22315r6cy8().s[14]++,require("../models/nucleotide.model"));const context_1=(cov_22315r6cy8().s[15]++,require("./searching-strategies/context"));const search_right_strategy_1=(cov_22315r6cy8().s[16]++,require("./searching-strategies/concrete-strategies/search-right-strategy"));const search_rigth_down_strategy_1=(cov_22315r6cy8().s[17]++,require("./searching-strategies/concrete-strategies/search-rigth-down-strategy"));const search_down_strategy_1=(cov_22315r6cy8().s[18]++,require("./searching-strategies/concrete-strategies/search-down-strategy"));const search_left_down_strategy_1=(cov_22315r6cy8().s[19]++,require("./searching-strategies/concrete-strategies/search-left-down-strategy"));const sequence_entity_1=(cov_22315r6cy8().s[20]++,require("../../core/entities/sequence.entity"));const dna_sequence_service_1=(cov_22315r6cy8().s[21]++,require("../services/dna_sequence.service"));const db_service_1=(cov_22315r6cy8().s[22]++,require("../../core/services/db/db.service"));class DNAChecker{constructor(){cov_22315r6cy8().f[7]++;cov_22315r6cy8().s[23]++;this.dnaMatrixFull=[];cov_22315r6cy8().s[24]++;this.sequenceCounter=0;cov_22315r6cy8().s[25]++;this.dnaSequenceService=new dna_sequence_service_1.DnaSequenceService();}isMutant(dna){cov_22315r6cy8().f[8]++;const size=(cov_22315r6cy8().s[26]++,dna.length);const initTime=(cov_22315r6cy8().s[27]++,new Date().valueOf());// Mapeamos el array de entrada en un array 2D para hacer las busquedas en profundidad
cov_22315r6cy8().s[28]++;this.mapDnaMatrix(dna);cov_22315r6cy8().s[29]++;console.log(this.dnaMatrixFull);// Verificar secuencia de ADN
cov_22315r6cy8().s[30]++;this.context=new context_1.SearchContext(size);cov_22315r6cy8().s[31]++;for(let i=(cov_22315r6cy8().s[32]++,0);i<size;i++){cov_22315r6cy8().s[33]++;for(let j=(cov_22315r6cy8().s[34]++,0);j<size;j++){cov_22315r6cy8().s[35]++;/*Realizar comparación con los nucleotidos de la horizontal a la derecha usando la estrategia de
                busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/this.context.setStrategy(new search_right_strategy_1.SearchRightStrategy());cov_22315r6cy8().s[36]++;this.sequenceCounter=this.context.search(i,j,this.dnaMatrixFull)?(cov_22315r6cy8().b[5][0]++,this.sequenceCounter+1):(cov_22315r6cy8().b[5][1]++,this.sequenceCounter);/*Realizar comparación con los nucleotidos de la diagonal derecha hacia abajo usando la
                estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de
                secuencias*/cov_22315r6cy8().s[37]++;this.context.setStrategy(new search_rigth_down_strategy_1.SearchRightDownStrategy());cov_22315r6cy8().s[38]++;this.sequenceCounter=this.context.search(i,j,this.dnaMatrixFull)?(cov_22315r6cy8().b[6][0]++,this.sequenceCounter+1):(cov_22315r6cy8().b[6][1]++,this.sequenceCounter);/*Realizar comparación con los nucleotidos de la vertical hacia abajo usando la estrategia de
                busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/cov_22315r6cy8().s[39]++;this.context.setStrategy(new search_down_strategy_1.SearchDownStrategy());cov_22315r6cy8().s[40]++;this.sequenceCounter=this.context.search(i,j,this.dnaMatrixFull)?(cov_22315r6cy8().b[7][0]++,this.sequenceCounter+1):(cov_22315r6cy8().b[7][1]++,this.sequenceCounter);/*Realizar comparación con los nucleotidos de la diagonal izquierda hacia abajo usando la
                estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de
                secuencias*/cov_22315r6cy8().s[41]++;this.context.setStrategy(new search_left_down_strategy_1.SearchLeftDownStrategy());cov_22315r6cy8().s[42]++;this.sequenceCounter=this.context.search(i,j,this.dnaMatrixFull)?(cov_22315r6cy8().b[8][0]++,this.sequenceCounter+1):(cov_22315r6cy8().b[8][1]++,this.sequenceCounter);}}/*no es necesario buscar en otras direcciones puesto que ya toda la matriz fue cubierta
        Si se encontraron 2 o más secuencias se determina que el DNA es de un mutante*/const isMutantDNA=(cov_22315r6cy8().s[43]++,this.sequenceCounter>=2?(cov_22315r6cy8().b[9][0]++,true):(cov_22315r6cy8().b[9][1]++,false));const endTime=(cov_22315r6cy8().s[44]++,new Date().valueOf());cov_22315r6cy8().s[45]++;console.log("exec time: ",(endTime-initTime)/1000);cov_22315r6cy8().s[46]++;return isMutantDNA;}mapDnaMatrix(dna){cov_22315r6cy8().f[9]++;cov_22315r6cy8().s[47]++;this.dnaMatrixFull=new Array();let line=(cov_22315r6cy8().s[48]++,[]);cov_22315r6cy8().s[49]++;dna.forEach((value,j)=>{cov_22315r6cy8().f[10]++;cov_22315r6cy8().s[50]++;line=value.split("");const row=(cov_22315r6cy8().s[51]++,new Array());cov_22315r6cy8().s[52]++;line.forEach((nucleotide,i)=>{cov_22315r6cy8().f[11]++;cov_22315r6cy8().s[53]++;row.push(new nucleotide_model_1.Nucleotide(nucleotide));});cov_22315r6cy8().s[54]++;this.dnaMatrixFull.push(row);});}saveDNASequence(dna,subjectType){cov_22315r6cy8().f[12]++;cov_22315r6cy8().s[55]++;return __awaiter(this,void 0,void 0,function*(){cov_22315r6cy8().f[13]++;cov_22315r6cy8().s[56]++;try{const dnaEntity=(cov_22315r6cy8().s[57]++,new sequence_entity_1.DNASequencesEntity());cov_22315r6cy8().s[58]++;dnaEntity.sequence=dna;cov_22315r6cy8().s[59]++;dnaEntity.subjectType=subjectType;const result=(cov_22315r6cy8().s[60]++,yield this.dnaSequenceService.saveDNASequence(dnaEntity));cov_22315r6cy8().s[61]++;yield db_service_1.ConnectionDB.closeConnection();cov_22315r6cy8().s[62]++;return result;}catch(e){cov_22315r6cy8().s[63]++;console.log("saveDNASequence Error: ",e);cov_22315r6cy8().s[64]++;yield db_service_1.ConnectionDB.closeConnection();cov_22315r6cy8().s[65]++;throw new Error(e);}});}}cov_22315r6cy8().s[66]++;exports.DNAChecker=DNAChecker;const dNACheckerController=(cov_22315r6cy8().s[67]++,new DNAChecker());cov_22315r6cy8().s[68]++;exports.default=dNACheckerController;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2Ryb2RyMjUvRGVza3RvcC9NdXRhbnRETkFDaGVja2VyL3NyYy9tb2R1bGVzL2RuYS1jaGVja2VyL2NvbnRyb2xsZXJzL2RuYS1jaGVja2VyLmNvbnRyb2xsZXIudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kcm9kcjI1L0Rlc2t0b3AvTXV0YW50RE5BQ2hlY2tlci9zcmMvbW9kdWxlcy9kbmEtY2hlY2tlci9jb250cm9sbGVycy9kbmEtY2hlY2tlci5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLGlFQUF3RDtBQUN4RCw0REFBK0Q7QUFDL0QsNEdBQXVHO0FBQ3ZHLHNIQUFnSDtBQUNoSCwwR0FBcUc7QUFDckcsb0hBQThHO0FBQzlHLHlFQUF5RTtBQUN6RSwyRUFBc0U7QUFDdEUsa0VBQWlFO0FBRWpFLE1BQWEsVUFBVTtJQU9yQjtRQU5RLGtCQUFhLEdBQW1CLEVBQUUsQ0FBQztRQUNuQyxvQkFBZSxHQUFXLENBQUMsQ0FBQztRQU1sQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSx5Q0FBa0IsRUFBRSxDQUFDO0lBQ3JELENBQUM7SUFFTSxRQUFRLENBQUMsR0FBYTtRQUMzQixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQ3hCLE1BQU0sUUFBUSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFdEMsc0ZBQXNGO1FBQ3RGLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFaEMsNkJBQTZCO1FBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSx1QkFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0IsS0FB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QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFWSxlQUFlLENBQUMsR0FBVyxFQUFFLFdBQW1COztZQUMzRCxJQUFJO2dCQUNGLE1BQU0sU0FBUyxHQUFHLElBQUksb0NBQWtCLEVBQUUsQ0FBQztnQkFDM0MsU0FBUyxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUM7Z0JBQ3pCLFNBQVMsQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO2dCQUVwQyxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBRXhFLE1BQU0seUJBQVksQ0FBQyxlQUFlLEVBQUUsQ0FBQztnQkFDckMsT0FBTyxNQUFNLENBQUM7YUFDZjtZQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQzFDLE1BQU0seUJBQVksQ0FBQyxlQUFlLEVBQUUsQ0FBQztnQkFDckMsTUFBTSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNwQjtRQUNILENBQUM7S0FBQTtDQUNGO0FBOUZELGdDQThGQztBQUVELE1BQU0sb0JBQW9CLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztBQUM5QyxrQkFBZSxvQkFBb0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE51Y2xlb3RpZGUgfSBmcm9tIFwiLi4vbW9kZWxzL251Y2xlb3RpZGUubW9kZWxcIjtcbmltcG9ydCB7IFNlYXJjaENvbnRleHQgfSBmcm9tIFwiLi9zZWFyY2hpbmctc3RyYXRlZ2llcy9jb250ZXh0XCI7XG5pbXBvcnQgeyBTZWFyY2hSaWdodFN0cmF0ZWd5IH0gZnJvbSBcIi4vc2VhcmNoaW5nLXN0cmF0ZWdpZXMvY29uY3JldGUtc3RyYXRlZ2llcy9zZWFyY2gtcmlnaHQtc3RyYXRlZ3lcIjtcbmltcG9ydCB7IFNlYXJjaFJpZ2h0RG93blN0cmF0ZWd5IH0gZnJvbSBcIi4vc2VhcmNoaW5nLXN0cmF0ZWdpZXMvY29uY3JldGUtc3RyYXRlZ2llcy9zZWFyY2gtcmlndGgtZG93bi1zdHJhdGVneVwiO1xuaW1wb3J0IHsgU2VhcmNoRG93blN0cmF0ZWd5IH0gZnJvbSBcIi4vc2VhcmNoaW5nLXN0cmF0ZWdpZXMvY29uY3JldGUtc3RyYXRlZ2llcy9zZWFyY2gtZG93bi1zdHJhdGVneVwiO1xuaW1wb3J0IHsgU2VhcmNoTGVmdERvd25TdHJhdGVneSB9IGZyb20gXCIuL3NlYXJjaGluZy1zdHJhdGVnaWVzL2NvbmNyZXRlLXN0cmF0ZWdpZXMvc2VhcmNoLWxlZnQtZG93bi1zdHJhdGVneVwiO1xuaW1wb3J0IHsgRE5BU2VxdWVuY2VzRW50aXR5IH0gZnJvbSBcIi4uLy4uL2NvcmUvZW50aXRpZXMvc2VxdWVuY2UuZW50aXR5XCI7XG5pbXBvcnQgeyBEbmFTZXF1ZW5jZVNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmljZXMvZG5hX3NlcXVlbmNlLnNlcnZpY2VcIjtcbmltcG9ydCB7IENvbm5lY3Rpb25EQiB9IGZyb20gXCIuLi8uLi9jb3JlL3NlcnZpY2VzL2RiL2RiLnNlcnZpY2VcIjtcblxuZXhwb3J0IGNsYXNzIEROQUNoZWNrZXIge1xuICBwcml2YXRlIGRuYU1hdHJpeEZ1bGw6IE51Y2xlb3RpZGVbXVtdID0gW107XG4gIHByaXZhdGUgc2VxdWVuY2VDb3VudGVyOiBudW1iZXIgPSAwO1xuICBwcml2YXRlIGNvbnRleHQ6IFNlYXJjaENvbnRleHQ7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBkbmFTZXF1ZW5jZVNlcnZpY2U6IERuYVNlcXVlbmNlU2VydmljZTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmRuYVNlcXVlbmNlU2VydmljZSA9IG5ldyBEbmFTZXF1ZW5jZVNlcnZpY2UoKTtcbiAgfVxuXG4gIHB1YmxpYyBpc011dGFudChkbmE6IHN0cmluZ1tdKTogYm9vbGVhbiB7XG4gICAgY29uc3Qgc2l6ZSA9IGRuYS5sZW5ndGg7XG4gICAgY29uc3QgaW5pdFRpbWUgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcblxuICAgIC8vIE1hcGVhbW9zIGVsIGFycmF5IGRlIGVudHJhZGEgZW4gdW4gYXJyYXkgMkQgcGFyYSBoYWNlciBsYXMgYnVzcXVlZGFzIGVuIHByb2Z1bmRpZGFkXG4gICAgdGhpcy5tYXBEbmFNYXRyaXgoZG5hKTtcbiAgICBjb25zb2xlLmxvZyh0aGlzLmRuYU1hdHJpeEZ1bGwpO1xuXG4gICAgLy8gVmVyaWZpY2FyIHNlY3VlbmNpYSBkZSBBRE5cbiAgICB0aGlzLmNvbnRleHQgPSBuZXcgU2VhcmNoQ29udGV4dChzaXplKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBzaXplOyBqKyspIHtcbiAgICAgICAgLypSZWFsaXphciBjb21wYXJhY2nDs24gY29uIGxvcyBudWNsZW90aWRvcyBkZSBsYSBob3Jpem9udGFsIGEgbGEgZGVyZWNoYSB1c2FuZG8gbGEgZXN0cmF0ZWdpYSBkZVxuICAgICAgICBidXNxdWVkYSBlbiBwcm9mdW5kaWRhZCwgc2kgZW5jdWVudHJhIHVuYSBzZWN1ZW5jaWEgYXVtZW50YSBlbCBjb250YWRvciBkZSBzZWN1ZW5jaWFzKi9cbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFN0cmF0ZWd5KG5ldyBTZWFyY2hSaWdodFN0cmF0ZWd5KCkpO1xuICAgICAgICB0aGlzLnNlcXVlbmNlQ291bnRlciA9IHRoaXMuY29udGV4dC5zZWFyY2goaSwgaiwgdGhpcy5kbmFNYXRyaXhGdWxsKVxuICAgICAgICAgID8gdGhpcy5zZXF1ZW5jZUNvdW50ZXIgKyAxXG4gICAgICAgICAgOiB0aGlzLnNlcXVlbmNlQ291bnRlcjtcblxuICAgICAgICAvKlJlYWxpemFyIGNvbXBhcmFjacOzbiBjb24gbG9zIG51Y2xlb3RpZG9zIGRlIGxhIGRpYWdvbmFsIGRlcmVjaGEgaGFjaWEgYWJham8gdXNhbmRvIGxhXG4gICAgICAgIGVzdHJhdGVnaWEgZGUgYnVzcXVlZGEgZW4gcHJvZnVuZGlkYWQsIHNpIGVuY3VlbnRyYSB1bmEgc2VjdWVuY2lhIGF1bWVudGEgZWwgY29udGFkb3IgZGVcbiAgICAgICAgc2VjdWVuY2lhcyovXG4gICAgICAgIHRoaXMuY29udGV4dC5zZXRTdHJhdGVneShuZXcgU2VhcmNoUmlnaHREb3duU3RyYXRlZ3koKSk7XG4gICAgICAgIHRoaXMuc2VxdWVuY2VDb3VudGVyID0gdGhpcy5jb250ZXh0LnNlYXJjaChpLCBqLCB0aGlzLmRuYU1hdHJpeEZ1bGwpXG4gICAgICAgICAgPyB0aGlzLnNlcXVlbmNlQ291bnRlciArIDFcbiAgICAgICAgICA6IHRoaXMuc2VxdWVuY2VDb3VudGVyO1xuXG4gICAgICAgIC8qUmVhbGl6YXIgY29tcGFyYWNpw7NuIGNvbiBsb3MgbnVjbGVvdGlkb3MgZGUgbGEgdmVydGljYWwgaGFjaWEgYWJham8gdXNhbmRvIGxhIGVzdHJhdGVnaWEgZGVcbiAgICAgICAgYnVzcXVlZGEgZW4gcHJvZnVuZGlkYWQsIHNpIGVuY3VlbnRyYSB1bmEgc2VjdWVuY2lhIGF1bWVudGEgZWwgY29udGFkb3IgZGUgc2VjdWVuY2lhcyovXG4gICAgICAgIHRoaXMuY29udGV4dC5zZXRTdHJhdGVneShuZXcgU2VhcmNoRG93blN0cmF0ZWd5KCkpO1xuICAgICAgICB0aGlzLnNlcXVlbmNlQ291bnRlciA9IHRoaXMuY29udGV4dC5zZWFyY2goaSwgaiwgdGhpcy5kbmFNYXRyaXhGdWxsKVxuICAgICAgICAgID8gdGhpcy5zZXF1ZW5jZUNvdW50ZXIgKyAxXG4gICAgICAgICAgOiB0aGlzLnNlcXVlbmNlQ291bnRlcjtcblxuICAgICAgICAvKlJlYWxpemFyIGNvbXBhcmFjacOzbiBjb24gbG9zIG51Y2xlb3RpZG9zIGRlIGxhIGRpYWdvbmFsIGl6cXVpZXJkYSBoYWNpYSBhYmFqbyB1c2FuZG8gbGFcbiAgICAgICAgZXN0cmF0ZWdpYSBkZSBidXNxdWVkYSBlbiBwcm9mdW5kaWRhZCwgc2kgZW5jdWVudHJhIHVuYSBzZWN1ZW5jaWEgYXVtZW50YSBlbCBjb250YWRvciBkZVxuICAgICAgICBzZWN1ZW5jaWFzKi9cbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFN0cmF0ZWd5KG5ldyBTZWFyY2hMZWZ0RG93blN0cmF0ZWd5KCkpO1xuICAgICAgICB0aGlzLnNlcXVlbmNlQ291bnRlciA9IHRoaXMuY29udGV4dC5zZWFyY2goaSwgaiwgdGhpcy5kbmFNYXRyaXhGdWxsKVxuICAgICAgICAgID8gdGhpcy5zZXF1ZW5jZUNvdW50ZXIgKyAxXG4gICAgICAgICAgOiB0aGlzLnNlcXVlbmNlQ291bnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKm5vIGVzIG5lY2VzYXJpbyBidXNjYXIgZW4gb3RyYXMgZGlyZWNjaW9uZXMgcHVlc3RvIHF1ZSB5YSB0b2RhIGxhIG1hdHJpeiBmdWUgY3ViaWVydGFcbiAgICBTaSBzZSBlbmNvbnRyYXJvbiAyIG8gbcOhcyBzZWN1ZW5jaWFzIHNlIGRldGVybWluYSBxdWUgZWwgRE5BIGVzIGRlIHVuIG11dGFudGUqL1xuICAgIGNvbnN0IGlzTXV0YW50RE5BID0gdGhpcy5zZXF1ZW5jZUNvdW50ZXIgPj0gMiA/IHRydWUgOiBmYWxzZTtcblxuICAgIGNvbnN0IGVuZFRpbWUgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcbiAgICBjb25zb2xlLmxvZyhcImV4ZWMgdGltZTogXCIsIChlbmRUaW1lIC0gaW5pdFRpbWUpIC8gMTAwMCk7XG4gICAgcmV0dXJuIGlzTXV0YW50RE5BO1xuICB9XG5cbiAgcHJpdmF0ZSBtYXBEbmFNYXRyaXgoZG5hOiBzdHJpbmdbXSkge1xuICAgIHRoaXMuZG5hTWF0cml4RnVsbCA9IG5ldyBBcnJheTxOdWNsZW90aWRlW10+KCk7XG4gICAgbGV0IGxpbmU6IHN0cmluZ1tdID0gW107XG5cbiAgICBkbmEuZm9yRWFjaCgodmFsdWU6IHN0cmluZywgajogbnVtYmVyKSA9PiB7XG4gICAgICBsaW5lID0gdmFsdWUuc3BsaXQoXCJcIik7XG4gICAgICBjb25zdCByb3c6IE51Y2xlb3RpZGVbXSA9IG5ldyBBcnJheTxOdWNsZW90aWRlPigpO1xuICAgICAgbGluZS5mb3JFYWNoKChudWNsZW90aWRlLCBpKSA9PiB7XG4gICAgICAgIHJvdy5wdXNoKG5ldyBOdWNsZW90aWRlKG51Y2xlb3RpZGUpKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5kbmFNYXRyaXhGdWxsLnB1c2gocm93KTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBzYXZlRE5BU2VxdWVuY2UoZG5hOiBzdHJpbmcsIHN1YmplY3RUeXBlOiBzdHJpbmcpOlByb21pc2U8RE5BU2VxdWVuY2VzRW50aXR5PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGRuYUVudGl0eSA9IG5ldyBETkFTZXF1ZW5jZXNFbnRpdHkoKTtcbiAgICAgIGRuYUVudGl0eS5zZXF1ZW5jZSA9IGRuYTtcbiAgICAgIGRuYUVudGl0eS5zdWJqZWN0VHlwZSA9IHN1YmplY3RUeXBlO1xuXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmRuYVNlcXVlbmNlU2VydmljZS5zYXZlRE5BU2VxdWVuY2UoZG5hRW50aXR5KTtcblxuICAgICAgYXdhaXQgQ29ubmVjdGlvbkRCLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInNhdmVETkFTZXF1ZW5jZSBFcnJvcjogXCIsIGUpO1xuICAgICAgYXdhaXQgQ29ubmVjdGlvbkRCLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCBkTkFDaGVja2VyQ29udHJvbGxlciA9IG5ldyBETkFDaGVja2VyKCk7XG5leHBvcnQgZGVmYXVsdCBkTkFDaGVja2VyQ29udHJvbGxlcjsiXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,