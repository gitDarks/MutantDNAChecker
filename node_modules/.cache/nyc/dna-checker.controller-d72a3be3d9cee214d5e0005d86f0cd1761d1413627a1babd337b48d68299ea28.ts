"use strict";function cov_22315r6cy8(){var path="/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts";var hash="d37fba336117c52804a7866b3d35d54913947226";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts",statementMap:{"0":{start:{line:2,column:16},end:{line:10,column:1}},"1":{start:{line:3,column:28},end:{line:3,column:110}},"2":{start:{line:3,column:91},end:{line:3,column:106}},"3":{start:{line:4,column:4},end:{line:9,column:7}},"4":{start:{line:5,column:36},end:{line:5,column:97}},"5":{start:{line:5,column:42},end:{line:5,column:70}},"6":{start:{line:5,column:85},end:{line:5,column:95}},"7":{start:{line:6,column:35},end:{line:6,column:100}},"8":{start:{line:6,column:41},end:{line:6,column:73}},"9":{start:{line:6,column:88},end:{line:6,column:98}},"10":{start:{line:7,column:32},end:{line:7,column:116}},"11":{start:{line:8,column:8},end:{line:8,column:78}},"12":{start:{line:11,column:0},end:{line:11,column:62}},"13":{start:{line:12,column:0},end:{line:12,column:28}},"14":{start:{line:13,column:27},end:{line:13,column:64}},"15":{start:{line:14,column:18},end:{line:14,column:59}},"16":{start:{line:15,column:32},end:{line:15,column:107}},"17":{start:{line:16,column:37},end:{line:16,column:117}},"18":{start:{line:17,column:31},end:{line:17,column:105}},"19":{start:{line:18,column:36},end:{line:18,column:115}},"20":{start:{line:19,column:26},end:{line:19,column:72}},"21":{start:{line:20,column:31},end:{line:20,column:74}},"22":{start:{line:21,column:21},end:{line:21,column:65}},"23":{start:{line:24,column:8},end:{line:24,column:32}},"24":{start:{line:25,column:8},end:{line:25,column:33}},"25":{start:{line:26,column:8},end:{line:26,column:82}},"26":{start:{line:29,column:21},end:{line:29,column:31}},"27":{start:{line:30,column:25},end:{line:30,column:45}},"28":{start:{line:32,column:8},end:{line:32,column:73}},"29":{start:{line:33,column:8},end:{line:66,column:9}},"30":{start:{line:33,column:21},end:{line:33,column:22}},"31":{start:{line:34,column:12},end:{line:65,column:13}},"32":{start:{line:34,column:25},end:{line:34,column:26}},"33":{start:{line:37,column:16},end:{line:37,column:108}},"34":{start:{line:38,column:16},end:{line:41,column:63}},"35":{start:{line:45,column:16},end:{line:45,column:117}},"36":{start:{line:46,column:16},end:{line:49,column:63}},"37":{start:{line:52,column:16},end:{line:52,column:106}},"38":{start:{line:53,column:16},end:{line:56,column:63}},"39":{start:{line:60,column:16},end:{line:60,column:115}},"40":{start:{line:61,column:16},end:{line:64,column:63}},"41":{start:{line:69,column:28},end:{line:69,column:84}},"42":{start:{line:70,column:24},end:{line:70,column:44}},"43":{start:{line:71,column:8},end:{line:71,column:64}},"44":{start:{line:72,column:8},end:{line:72,column:27}},"45":{start:{line:75,column:8},end:{line:75,column:57}},"46":{start:{line:76,column:19},end:{line:76,column:21}},"47":{start:{line:77,column:18},end:{line:77,column:22}},"48":{start:{line:79,column:8},end:{line:105,column:9}},"49":{start:{line:80,column:12},end:{line:101,column:13}},"50":{start:{line:81,column:16},end:{line:81,column:39}},"51":{start:{line:83,column:16},end:{line:100,column:17}},"52":{start:{line:84,column:32},end:{line:84,column:43}},"53":{start:{line:85,column:20},end:{line:94,column:21}},"54":{start:{line:87,column:24},end:{line:93,column:25}},"55":{start:{line:88,column:28},end:{line:88,column:84}},"56":{start:{line:91,column:28},end:{line:91,column:40}},"57":{start:{line:92,column:28},end:{line:92,column:34}},"58":{start:{line:95,column:20},end:{line:95,column:65}},"59":{start:{line:98,column:20},end:{line:98,column:32}},"60":{start:{line:99,column:20},end:{line:99,column:26}},"61":{start:{line:104,column:12},end:{line:104,column:24}},"62":{start:{line:106,column:8},end:{line:106,column:19}},"63":{start:{line:109,column:8},end:{line:123,column:11}},"64":{start:{line:110,column:12},end:{line:122,column:13}},"65":{start:{line:111,column:34},end:{line:111,column:76}},"66":{start:{line:112,column:16},end:{line:112,column:41}},"67":{start:{line:113,column:16},end:{line:113,column:52}},"68":{start:{line:114,column:31},end:{line:114,column:103}},"69":{start:{line:115,column:16},end:{line:115,column:66}},"70":{start:{line:116,column:16},end:{line:116,column:30}},"71":{start:{line:119,column:16},end:{line:119,column:58}},"72":{start:{line:120,column:16},end:{line:120,column:66}},"73":{start:{line:121,column:16},end:{line:121,column:35}},"74":{start:{line:126,column:8},end:{line:152,column:9}},"75":{start:{line:128,column:28},end:{line:128,column:35}},"76":{start:{line:129,column:32},end:{line:129,column:43}},"77":{start:{line:131,column:35},end:{line:131,column:81}},"78":{start:{line:132,column:12},end:{line:146,column:13}},"79":{start:{line:134,column:33},end:{line:134,column:75}},"80":{start:{line:136,column:16},end:{line:136,column:99}},"81":{start:{line:137,column:16},end:{line:142,column:17}},"82":{start:{line:138,column:20},end:{line:138,column:50}},"83":{start:{line:141,column:20},end:{line:141,column:57}},"84":{start:{line:145,column:16},end:{line:145,column:55}},"85":{start:{line:149,column:12},end:{line:151,column:73}},"86":{start:{line:155,column:0},end:{line:155,column:32}},"87":{start:{line:156,column:29},end:{line:156,column:45}},"88":{start:{line:157,column:0},end:{line:157,column:39}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:44},end:{line:2,column:45}},loc:{start:{line:2,column:89},end:{line:10,column:1}},line:2},"1":{name:"adopt",decl:{start:{line:3,column:13},end:{line:3,column:18}},loc:{start:{line:3,column:26},end:{line:3,column:112}},line:3},"2":{name:"(anonymous_2)",decl:{start:{line:3,column:70},end:{line:3,column:71}},loc:{start:{line:3,column:89},end:{line:3,column:108}},line:3},"3":{name:"(anonymous_3)",decl:{start:{line:4,column:36},end:{line:4,column:37}},loc:{start:{line:4,column:63},end:{line:9,column:5}},line:4},"4":{name:"fulfilled",decl:{start:{line:5,column:17},end:{line:5,column:26}},loc:{start:{line:5,column:34},end:{line:5,column:99}},line:5},"5":{name:"rejected",decl:{start:{line:6,column:17},end:{line:6,column:25}},loc:{start:{line:6,column:33},end:{line:6,column:102}},line:6},"6":{name:"step",decl:{start:{line:7,column:17},end:{line:7,column:21}},loc:{start:{line:7,column:30},end:{line:7,column:118}},line:7},"7":{name:"(anonymous_7)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:18},end:{line:27,column:5}},line:23},"8":{name:"(anonymous_8)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:18},end:{line:73,column:5}},line:28},"9":{name:"(anonymous_9)",decl:{start:{line:74,column:4},end:{line:74,column:5}},loc:{start:{line:74,column:22},end:{line:107,column:5}},line:74},"10":{name:"(anonymous_10)",decl:{start:{line:108,column:4},end:{line:108,column:5}},loc:{start:{line:108,column:38},end:{line:124,column:5}},line:108},"11":{name:"(anonymous_11)",decl:{start:{line:109,column:47},end:{line:109,column:48}},loc:{start:{line:109,column:60},end:{line:123,column:9}},line:109},"12":{name:"(anonymous_12)",decl:{start:{line:125,column:4},end:{line:125,column:5}},loc:{start:{line:125,column:26},end:{line:153,column:5}},line:125}},branchMap:{"0":{loc:{start:{line:2,column:16},end:{line:10,column:1}},type:"binary-expr",locations:[{start:{line:2,column:17},end:{line:2,column:21}},{start:{line:2,column:25},end:{line:2,column:39}},{start:{line:2,column:44},end:{line:10,column:1}}],line:2},"1":{loc:{start:{line:3,column:35},end:{line:3,column:109}},type:"cond-expr",locations:[{start:{line:3,column:56},end:{line:3,column:61}},{start:{line:3,column:64},end:{line:3,column:109}}],line:3},"2":{loc:{start:{line:4,column:16},end:{line:4,column:34}},type:"binary-expr",locations:[{start:{line:4,column:16},end:{line:4,column:17}},{start:{line:4,column:22},end:{line:4,column:33}}],line:4},"3":{loc:{start:{line:7,column:32},end:{line:7,column:115}},type:"cond-expr",locations:[{start:{line:7,column:46},end:{line:7,column:67}},{start:{line:7,column:70},end:{line:7,column:115}}],line:7},"4":{loc:{start:{line:8,column:51},end:{line:8,column:67}},type:"binary-expr",locations:[{start:{line:8,column:51},end:{line:8,column:61}},{start:{line:8,column:65},end:{line:8,column:67}}],line:8},"5":{loc:{start:{line:39,column:20},end:{line:41,column:62}},type:"cond-expr",locations:[{start:{line:40,column:26},end:{line:40,column:66}},{start:{line:41,column:26},end:{line:41,column:62}}],line:39},"6":{loc:{start:{line:47,column:20},end:{line:49,column:62}},type:"cond-expr",locations:[{start:{line:48,column:26},end:{line:48,column:66}},{start:{line:49,column:26},end:{line:49,column:62}}],line:47},"7":{loc:{start:{line:54,column:20},end:{line:56,column:62}},type:"cond-expr",locations:[{start:{line:55,column:26},end:{line:55,column:66}},{start:{line:56,column:26},end:{line:56,column:62}}],line:54},"8":{loc:{start:{line:62,column:20},end:{line:64,column:62}},type:"cond-expr",locations:[{start:{line:63,column:26},end:{line:63,column:66}},{start:{line:64,column:26},end:{line:64,column:62}}],line:62},"9":{loc:{start:{line:69,column:28},end:{line:69,column:84}},type:"cond-expr",locations:[{start:{line:69,column:72},end:{line:69,column:76}},{start:{line:69,column:79},end:{line:69,column:84}}],line:69},"10":{loc:{start:{line:79,column:8},end:{line:105,column:9}},type:"if",locations:[{start:{line:79,column:8},end:{line:105,column:9}},{start:{line:79,column:8},end:{line:105,column:9}}],line:79},"11":{loc:{start:{line:79,column:12},end:{line:79,column:53}},type:"binary-expr",locations:[{start:{line:79,column:12},end:{line:79,column:15}},{start:{line:79,column:19},end:{line:79,column:33}},{start:{line:79,column:37},end:{line:79,column:53}}],line:79},"12":{loc:{start:{line:83,column:16},end:{line:100,column:17}},type:"if",locations:[{start:{line:83,column:16},end:{line:100,column:17}},{start:{line:83,column:16},end:{line:100,column:17}}],line:83},"13":{loc:{start:{line:87,column:24},end:{line:93,column:25}},type:"if",locations:[{start:{line:87,column:24},end:{line:93,column:25}},{start:{line:87,column:24},end:{line:93,column:25}}],line:87},"14":{loc:{start:{line:132,column:12},end:{line:146,column:13}},type:"if",locations:[{start:{line:132,column:12},end:{line:146,column:13}},{start:{line:132,column:12},end:{line:146,column:13}}],line:132},"15":{loc:{start:{line:136,column:77},end:{line:136,column:97}},type:"cond-expr",locations:[{start:{line:136,column:88},end:{line:136,column:91}},{start:{line:136,column:94},end:{line:136,column:97}}],line:136},"16":{loc:{start:{line:137,column:16},end:{line:142,column:17}},type:"if",locations:[{start:{line:137,column:16},end:{line:142,column:17}},{start:{line:137,column:16},end:{line:142,column:17}}],line:137},"17":{loc:{start:{line:151,column:31},end:{line:151,column:69}},type:"binary-expr",locations:[{start:{line:151,column:31},end:{line:151,column:44}},{start:{line:151,column:48},end:{line:151,column:69}}],line:151}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},inputSourceMap:{version:3,file:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts",sources:["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts"],names:[],mappings:"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",sourcesContent:["import { Nucleotide } from \"../models/nucleotide.model\";\nimport { SearchContext } from \"./searching-strategies/context\";\nimport { SearchRightStrategy } from \"./searching-strategies/concrete-strategies/search-right-strategy\";\nimport { SearchRightDownStrategy } from \"./searching-strategies/concrete-strategies/search-rigth-down-strategy\";\nimport { SearchDownStrategy } from \"./searching-strategies/concrete-strategies/search-down-strategy\";\nimport { SearchLeftDownStrategy } from \"./searching-strategies/concrete-strategies/search-left-down-strategy\";\nimport { DNASequencesEntity } from \"../../core/entities/sequence.entity\";\nimport { DnaSequenceService } from \"../services/dna_sequence.service\";\nimport { ConnectionDB } from \"../../core/services/db/db.service\";\nimport { IMutantDNARequestModel } from \"../models/request.model\";\nimport { Request, Response } from \"express\";\nimport { json } from \"body-parser\";\n\nexport class DNAChecker {\n  private dnaMatrixFull: Nucleotide[][] = [];\n  private sequenceCounter: number = 0;\n  private context: SearchContext;\n\n  private readonly dnaSequenceService: DnaSequenceService;\n\n  constructor() {\n    this.dnaSequenceService = new DnaSequenceService();\n  }\n\n  private isMutant(dna: string[]): boolean {\n    const size = dna.length;\n    const initTime = new Date().valueOf();\n\n    // Verificar secuencia de ADN\n    dNACheckerController.context = new SearchContext(size);\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        /*Realizar comparaci\xF3n con los nucleotidos de la horizontal a la derecha usando la estrategia de\n        busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/\n        dNACheckerController.context.setStrategy(new SearchRightStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la diagonal derecha hacia abajo usando la\n        estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de\n        secuencias*/\n        dNACheckerController.context.setStrategy(new SearchRightDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la vertical hacia abajo usando la estrategia de\n        busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/\n        dNACheckerController.context.setStrategy(new SearchDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparaci\xF3n con los nucleotidos de la diagonal izquierda hacia abajo usando la\n        estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de\n        secuencias*/\n        dNACheckerController.context.setStrategy(new SearchLeftDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n      }\n    }\n\n    /*no es necesario buscar en otras direcciones puesto que ya toda la matriz fue cubierta\n    Si se encontraron 2 o m\xE1s secuencias se determina que el DNA es de un mutante*/\n    const isMutantDNA =\n      dNACheckerController.sequenceCounter >= 2 ? true : false;\n\n    const endTime = new Date().valueOf();\n    console.log(\"exec time: \", (endTime - initTime) / 1000);\n    return isMutantDNA;\n  }\n\n  private mapDnaMatrix(dna: string[]): boolean {\n    dNACheckerController.dnaMatrixFull = new Array<Nucleotide[]>();\n    let line: string[] = [];\n    let val: boolean = true;\n\n    // Dado que la longitud m\xE1xima permitida en la BD es de 400, solo se puede tener una secuencia de 14X14\n    if (dna && dna.length > 4 && dna.length <= 14) {\n      for (const value of dna) {\n        line = value.split(\"\");\n        // Verificar que la secuencia de ADN sea de NXN\n        if (dna.length === value.length) {\n          const row: Nucleotide[] = new Array<Nucleotide>();\n          for (const nucleotide of line) {\n            // verificar que el nucle\xF3tido sea v\xE1lido\n            if ([\"A\", \"C\", \"G\", \"T\"].includes(nucleotide)) {\n              row.push(new Nucleotide(nucleotide));\n            } else {\n              val = false;\n              break;\n            }\n          }\n          dNACheckerController.dnaMatrixFull.push(row);\n        } else {\n          val = false;\n          break;\n        }\n      }\n    } else {\n      val = false;\n    }\n\n    return val;\n  }\n\n  private async saveDNASequence(\n    dna: string,\n    subjectType: string\n  ): Promise<DNASequencesEntity> {\n    try {\n      const dnaEntity = new DNASequencesEntity();\n      dnaEntity.sequence = dna;\n      dnaEntity.subjectType = subjectType;\n\n      const result =\n        await dNACheckerController.dnaSequenceService.saveDNASequence(\n          dnaEntity\n        );\n\n      await ConnectionDB.closeConnection();\n      return result;\n    } catch (e) {\n      console.log(\"saveDNASequence Error: \", e);\n      await ConnectionDB.closeConnection();\n      throw new Error(e);\n    }\n  }\n\n  public checkisMutant(rq: Request, rs: Response) {\n    try {\n      // Leer secuencia de ADN desde el request\n      const request = rq.body as IMutantDNARequestModel;\n      const dnaSequence = request.dna;\n\n      // Validamos el request y mapeamos el array de entrada en un array 2D para hacer las busquedas en profundidad\n      const isValidRequest = dNACheckerController.mapDnaMatrix(dnaSequence);\n      if (isValidRequest) {\n        // Verificar si el ADN es mutante\n        const isMutant = dNACheckerController.isMutant(dnaSequence);\n        // almacenar en BD\n        dNACheckerController.saveDNASequence(\n          dnaSequence.toString(),\n          isMutant ? \"M\" : \"H\"\n        );\n\n        if (isMutant) {\n          rs.status(200).send(\"200-OK\");\n        } else {\n          rs.status(403).send(\"403-Forbidden\");\n        }\n      } else {\n        rs.status(400).send(\"400-Bad request\");\n      }\n    } catch (error) {\n      return rs\n        .status(500)\n        .send({ error: error.message || JSON.stringify(error) });\n    }\n  }\n}\n\nconst dNACheckerController = new DNAChecker();\nexport default dNACheckerController;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d37fba336117c52804a7866b3d35d54913947226"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22315r6cy8=function(){return actualCoverage;};}return actualCoverage;}cov_22315r6cy8();var __awaiter=(cov_22315r6cy8().s[0]++,(cov_22315r6cy8().b[0][0]++,this)&&(cov_22315r6cy8().b[0][1]++,this.__awaiter)||(cov_22315r6cy8().b[0][2]++,function(thisArg,_arguments,P,generator){cov_22315r6cy8().f[0]++;function adopt(value){cov_22315r6cy8().f[1]++;cov_22315r6cy8().s[1]++;return value instanceof P?(cov_22315r6cy8().b[1][0]++,value):(cov_22315r6cy8().b[1][1]++,new P(function(resolve){cov_22315r6cy8().f[2]++;cov_22315r6cy8().s[2]++;resolve(value);}));}cov_22315r6cy8().s[3]++;return new((cov_22315r6cy8().b[2][0]++,P)||(cov_22315r6cy8().b[2][1]++,P=Promise))(function(resolve,reject){cov_22315r6cy8().f[3]++;function fulfilled(value){cov_22315r6cy8().f[4]++;cov_22315r6cy8().s[4]++;try{cov_22315r6cy8().s[5]++;step(generator.next(value));}catch(e){cov_22315r6cy8().s[6]++;reject(e);}}function rejected(value){cov_22315r6cy8().f[5]++;cov_22315r6cy8().s[7]++;try{cov_22315r6cy8().s[8]++;step(generator["throw"](value));}catch(e){cov_22315r6cy8().s[9]++;reject(e);}}function step(result){cov_22315r6cy8().f[6]++;cov_22315r6cy8().s[10]++;result.done?(cov_22315r6cy8().b[3][0]++,resolve(result.value)):(cov_22315r6cy8().b[3][1]++,adopt(result.value).then(fulfilled,rejected));}cov_22315r6cy8().s[11]++;step((generator=generator.apply(thisArg,(cov_22315r6cy8().b[4][0]++,_arguments)||(cov_22315r6cy8().b[4][1]++,[]))).next());});}));cov_22315r6cy8().s[12]++;Object.defineProperty(exports,"__esModule",{value:true});cov_22315r6cy8().s[13]++;exports.DNAChecker=void 0;const nucleotide_model_1=(cov_22315r6cy8().s[14]++,require("../models/nucleotide.model"));const context_1=(cov_22315r6cy8().s[15]++,require("./searching-strategies/context"));const search_right_strategy_1=(cov_22315r6cy8().s[16]++,require("./searching-strategies/concrete-strategies/search-right-strategy"));const search_rigth_down_strategy_1=(cov_22315r6cy8().s[17]++,require("./searching-strategies/concrete-strategies/search-rigth-down-strategy"));const search_down_strategy_1=(cov_22315r6cy8().s[18]++,require("./searching-strategies/concrete-strategies/search-down-strategy"));const search_left_down_strategy_1=(cov_22315r6cy8().s[19]++,require("./searching-strategies/concrete-strategies/search-left-down-strategy"));const sequence_entity_1=(cov_22315r6cy8().s[20]++,require("../../core/entities/sequence.entity"));const dna_sequence_service_1=(cov_22315r6cy8().s[21]++,require("../services/dna_sequence.service"));const db_service_1=(cov_22315r6cy8().s[22]++,require("../../core/services/db/db.service"));class DNAChecker{constructor(){cov_22315r6cy8().f[7]++;cov_22315r6cy8().s[23]++;this.dnaMatrixFull=[];cov_22315r6cy8().s[24]++;this.sequenceCounter=0;cov_22315r6cy8().s[25]++;this.dnaSequenceService=new dna_sequence_service_1.DnaSequenceService();}isMutant(dna){cov_22315r6cy8().f[8]++;const size=(cov_22315r6cy8().s[26]++,dna.length);const initTime=(cov_22315r6cy8().s[27]++,new Date().valueOf());// Verificar secuencia de ADN
cov_22315r6cy8().s[28]++;dNACheckerController.context=new context_1.SearchContext(size);cov_22315r6cy8().s[29]++;for(let i=(cov_22315r6cy8().s[30]++,0);i<size;i++){cov_22315r6cy8().s[31]++;for(let j=(cov_22315r6cy8().s[32]++,0);j<size;j++){cov_22315r6cy8().s[33]++;/*Realizar comparación con los nucleotidos de la horizontal a la derecha usando la estrategia de
                busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/dNACheckerController.context.setStrategy(new search_right_strategy_1.SearchRightStrategy());cov_22315r6cy8().s[34]++;dNACheckerController.sequenceCounter=dNACheckerController.context.search(i,j,dNACheckerController.dnaMatrixFull)?(cov_22315r6cy8().b[5][0]++,dNACheckerController.sequenceCounter+1):(cov_22315r6cy8().b[5][1]++,dNACheckerController.sequenceCounter);/*Realizar comparación con los nucleotidos de la diagonal derecha hacia abajo usando la
                estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de
                secuencias*/cov_22315r6cy8().s[35]++;dNACheckerController.context.setStrategy(new search_rigth_down_strategy_1.SearchRightDownStrategy());cov_22315r6cy8().s[36]++;dNACheckerController.sequenceCounter=dNACheckerController.context.search(i,j,dNACheckerController.dnaMatrixFull)?(cov_22315r6cy8().b[6][0]++,dNACheckerController.sequenceCounter+1):(cov_22315r6cy8().b[6][1]++,dNACheckerController.sequenceCounter);/*Realizar comparación con los nucleotidos de la vertical hacia abajo usando la estrategia de
                busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/cov_22315r6cy8().s[37]++;dNACheckerController.context.setStrategy(new search_down_strategy_1.SearchDownStrategy());cov_22315r6cy8().s[38]++;dNACheckerController.sequenceCounter=dNACheckerController.context.search(i,j,dNACheckerController.dnaMatrixFull)?(cov_22315r6cy8().b[7][0]++,dNACheckerController.sequenceCounter+1):(cov_22315r6cy8().b[7][1]++,dNACheckerController.sequenceCounter);/*Realizar comparación con los nucleotidos de la diagonal izquierda hacia abajo usando la
                estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de
                secuencias*/cov_22315r6cy8().s[39]++;dNACheckerController.context.setStrategy(new search_left_down_strategy_1.SearchLeftDownStrategy());cov_22315r6cy8().s[40]++;dNACheckerController.sequenceCounter=dNACheckerController.context.search(i,j,dNACheckerController.dnaMatrixFull)?(cov_22315r6cy8().b[8][0]++,dNACheckerController.sequenceCounter+1):(cov_22315r6cy8().b[8][1]++,dNACheckerController.sequenceCounter);}}/*no es necesario buscar en otras direcciones puesto que ya toda la matriz fue cubierta
        Si se encontraron 2 o más secuencias se determina que el DNA es de un mutante*/const isMutantDNA=(cov_22315r6cy8().s[41]++,dNACheckerController.sequenceCounter>=2?(cov_22315r6cy8().b[9][0]++,true):(cov_22315r6cy8().b[9][1]++,false));const endTime=(cov_22315r6cy8().s[42]++,new Date().valueOf());cov_22315r6cy8().s[43]++;console.log("exec time: ",(endTime-initTime)/1000);cov_22315r6cy8().s[44]++;return isMutantDNA;}mapDnaMatrix(dna){cov_22315r6cy8().f[9]++;cov_22315r6cy8().s[45]++;dNACheckerController.dnaMatrixFull=new Array();let line=(cov_22315r6cy8().s[46]++,[]);let val=(cov_22315r6cy8().s[47]++,true);// Dado que la longitud máxima permitida en la BD es de 400, solo se puede tener una secuencia de 14X14
cov_22315r6cy8().s[48]++;if((cov_22315r6cy8().b[11][0]++,dna)&&(cov_22315r6cy8().b[11][1]++,dna.length>4)&&(cov_22315r6cy8().b[11][2]++,dna.length<=14)){cov_22315r6cy8().b[10][0]++;cov_22315r6cy8().s[49]++;for(const value of dna){cov_22315r6cy8().s[50]++;line=value.split("");// Verificar que la secuencia de ADN sea de NXN
cov_22315r6cy8().s[51]++;if(dna.length===value.length){cov_22315r6cy8().b[12][0]++;const row=(cov_22315r6cy8().s[52]++,new Array());cov_22315r6cy8().s[53]++;for(const nucleotide of line){cov_22315r6cy8().s[54]++;// verificar que el nucleótido sea válido
if(["A","C","G","T"].includes(nucleotide)){cov_22315r6cy8().b[13][0]++;cov_22315r6cy8().s[55]++;row.push(new nucleotide_model_1.Nucleotide(nucleotide));}else{cov_22315r6cy8().b[13][1]++;cov_22315r6cy8().s[56]++;val=false;cov_22315r6cy8().s[57]++;break;}}cov_22315r6cy8().s[58]++;dNACheckerController.dnaMatrixFull.push(row);}else{cov_22315r6cy8().b[12][1]++;cov_22315r6cy8().s[59]++;val=false;cov_22315r6cy8().s[60]++;break;}}}else{cov_22315r6cy8().b[10][1]++;cov_22315r6cy8().s[61]++;val=false;}cov_22315r6cy8().s[62]++;return val;}saveDNASequence(dna,subjectType){cov_22315r6cy8().f[10]++;cov_22315r6cy8().s[63]++;return __awaiter(this,void 0,void 0,function*(){cov_22315r6cy8().f[11]++;cov_22315r6cy8().s[64]++;try{const dnaEntity=(cov_22315r6cy8().s[65]++,new sequence_entity_1.DNASequencesEntity());cov_22315r6cy8().s[66]++;dnaEntity.sequence=dna;cov_22315r6cy8().s[67]++;dnaEntity.subjectType=subjectType;const result=(cov_22315r6cy8().s[68]++,yield dNACheckerController.dnaSequenceService.saveDNASequence(dnaEntity));cov_22315r6cy8().s[69]++;yield db_service_1.ConnectionDB.closeConnection();cov_22315r6cy8().s[70]++;return result;}catch(e){cov_22315r6cy8().s[71]++;console.log("saveDNASequence Error: ",e);cov_22315r6cy8().s[72]++;yield db_service_1.ConnectionDB.closeConnection();cov_22315r6cy8().s[73]++;throw new Error(e);}});}checkisMutant(rq,rs){cov_22315r6cy8().f[12]++;cov_22315r6cy8().s[74]++;try{// Leer secuencia de ADN desde el request
const request=(cov_22315r6cy8().s[75]++,rq.body);const dnaSequence=(cov_22315r6cy8().s[76]++,request.dna);// Validamos el request y mapeamos el array de entrada en un array 2D para hacer las busquedas en profundidad
const isValidRequest=(cov_22315r6cy8().s[77]++,dNACheckerController.mapDnaMatrix(dnaSequence));cov_22315r6cy8().s[78]++;if(isValidRequest){cov_22315r6cy8().b[14][0]++;// Verificar si el ADN es mutante
const isMutant=(cov_22315r6cy8().s[79]++,dNACheckerController.isMutant(dnaSequence));// almacenar en BD
cov_22315r6cy8().s[80]++;dNACheckerController.saveDNASequence(dnaSequence.toString(),isMutant?(cov_22315r6cy8().b[15][0]++,"M"):(cov_22315r6cy8().b[15][1]++,"H"));cov_22315r6cy8().s[81]++;if(isMutant){cov_22315r6cy8().b[16][0]++;cov_22315r6cy8().s[82]++;rs.status(200).send("200-OK");}else{cov_22315r6cy8().b[16][1]++;cov_22315r6cy8().s[83]++;rs.status(403).send("403-Forbidden");}}else{cov_22315r6cy8().b[14][1]++;cov_22315r6cy8().s[84]++;rs.status(400).send("400-Bad request");}}catch(error){cov_22315r6cy8().s[85]++;return rs.status(500).send({error:(cov_22315r6cy8().b[17][0]++,error.message)||(cov_22315r6cy8().b[17][1]++,JSON.stringify(error))});}}}cov_22315r6cy8().s[86]++;exports.DNAChecker=DNAChecker;const dNACheckerController=(cov_22315r6cy8().s[87]++,new DNAChecker());cov_22315r6cy8().s[88]++;exports.default=dNACheckerController;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kcm9kcjI1L0Rlc2t0b3AvTXV0YW50RE5BQ2hlY2tlci9zcmMvbW9kdWxlcy9kbmEtY2hlY2tlci9jb250cm9sbGVycy9kbmEtY2hlY2tlci5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI4K3VCQUdBOzBoREFIQSxLQUFBLENBQUEsa0JBQUEsMkJBQUEsT0FBQSxDQUFBLDRCQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxTQUFBLDJCQUFBLE9BQUEsQ0FBQSxnQ0FBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsdUJBQUEsMkJBQUEsT0FBQSxDQUFBLGtFQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSw0QkFBQSwyQkFBQSxPQUFBLENBQUEsdUVBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLHNCQUFBLDJCQUFBLE9BQUEsQ0FBQSxpRUFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsMkJBQUEsMkJBQUEsT0FBQSxDQUFBLHNFQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxpQkFBQSwyQkFBQSxPQUFBLENBQUEscUNBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLHNCQUFBLDJCQUFBLE9BQUEsQ0FBQSxrQ0FBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsWUFBQSwyQkFBQSxPQUFBLENBQUEsbUNBQUEsQ0FBQSxDQUFBLENBS0EsS0FBYSxDQUFBLFVBQVUsQ0FPckIsV0FBQSxFQUFBLGtEQU5RLEtBQUEsYUFBQSxDQUFnQyxFQUFoQyxDQU1SLHlCQUxRLEtBQUEsZUFBQSxDQUEwQixDQUExQixDQUtSLHlCQUNFLEtBQUssa0JBQUwsQ0FBMEIsR0FBSSxDQUFBLHNCQUFBLENBQUEsa0JBQUosRUFBMUIsQ0FDRCxDQUVPLFFBQVEsQ0FBQyxHQUFELENBQWMseUJBQzVCLEtBQU0sQ0FBQSxJQUFJLDJCQUFHLEdBQUcsQ0FBQyxNQUFQLENBQVYsQ0FDQSxLQUFNLENBQUEsUUFBUSwyQkFBRyxH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REFDWixFQUFFLENBQUMsTUFBSCxDQUFVLEdBQVYsRUFBZSxJQUFmLENBQW9CLFFBQXBCLEVBQ0QsQ0FGRCxJQUVPLHNEQUNMLEVBQUUsQ0FBQyxNQUFILENBQVUsR0FBVixFQUFlLElBQWYsQ0FBb0IsZUFBcEIsRUFDRCxDQUNGLENBZEQsSUFjTyxzREFDTCxFQUFFLENBQUMsTUFBSCxDQUFVLEdBQVYsRUFBZSxJQUFmLENBQW9CLGlCQUFwQixFQUNELENBQ0YsQ0FBQyxNQUFPLEtBQVAsQ0FBYywwQkFDZCxNQUFPLENBQUEsRUFBRSxDQUNOLE1BREksQ0FDRyxHQURILEVBRUosSUFGSSxDQUVDLENBQUUsS0FBSyxDQUFFLDZCQUFBLEtBQUssQ0FBQyxPQUFOLGdDQUFpQixJQUFJLENBQUMsU0FBTCxDQUFlLEtBQWYsQ0FBakIsQ0FBVCxDQUZELENBQVAsQ0FHRCxDQUNGLENBeEtvQixDLHlCQUF2QixPQUFBLENBQUEsVUFBQSxDQUFBLFVBQUEsQ0EyS0EsS0FBTSxDQUFBLG9CQUFvQiwyQkFBRyxHQUFJLENBQUEsVUFBSixFQUFILENBQTFCLEMseUJBQ0EsT0FBQSxDQUFBLE9BQUEsQ0FBZSxvQkFBZixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTnVjbGVvdGlkZSB9IGZyb20gXCIuLi9tb2RlbHMvbnVjbGVvdGlkZS5tb2RlbFwiO1xuaW1wb3J0IHsgU2VhcmNoQ29udGV4dCB9IGZyb20gXCIuL3NlYXJjaGluZy1zdHJhdGVnaWVzL2NvbnRleHRcIjtcbmltcG9ydCB7IFNlYXJjaFJpZ2h0U3RyYXRlZ3kgfSBmcm9tIFwiLi9zZWFyY2hpbmctc3RyYXRlZ2llcy9jb25jcmV0ZS1zdHJhdGVnaWVzL3NlYXJjaC1yaWdodC1zdHJhdGVneVwiO1xuaW1wb3J0IHsgU2VhcmNoUmlnaHREb3duU3RyYXRlZ3kgfSBmcm9tIFwiLi9zZWFyY2hpbmctc3RyYXRlZ2llcy9jb25jcmV0ZS1zdHJhdGVnaWVzL3NlYXJjaC1yaWd0aC1kb3duLXN0cmF0ZWd5XCI7XG5pbXBvcnQgeyBTZWFyY2hEb3duU3RyYXRlZ3kgfSBmcm9tIFwiLi9zZWFyY2hpbmctc3RyYXRlZ2llcy9jb25jcmV0ZS1zdHJhdGVnaWVzL3NlYXJjaC1kb3duLXN0cmF0ZWd5XCI7XG5pbXBvcnQgeyBTZWFyY2hMZWZ0RG93blN0cmF0ZWd5IH0gZnJvbSBcIi4vc2VhcmNoaW5nLXN0cmF0ZWdpZXMvY29uY3JldGUtc3RyYXRlZ2llcy9zZWFyY2gtbGVmdC1kb3duLXN0cmF0ZWd5XCI7XG5pbXBvcnQgeyBETkFTZXF1ZW5jZXNFbnRpdHkgfSBmcm9tIFwiLi4vLi4vY29yZS9lbnRpdGllcy9zZXF1ZW5jZS5lbnRpdHlcIjtcbmltcG9ydCB7IERuYVNlcXVlbmNlU2VydmljZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9kbmFfc2VxdWVuY2Uuc2VydmljZVwiO1xuaW1wb3J0IHsgQ29ubmVjdGlvbkRCIH0gZnJvbSBcIi4uLy4uL2NvcmUvc2VydmljZXMvZGIvZGIuc2VydmljZVwiO1xuaW1wb3J0IHsgSU11dGFudEROQVJlcXVlc3RNb2RlbCB9IGZyb20gXCIuLi9tb2RlbHMvcmVxdWVzdC5tb2RlbFwiO1xuaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHsganNvbiB9IGZyb20gXCJib2R5LXBhcnNlclwiO1xuXG5leHBvcnQgY2xhc3MgRE5BQ2hlY2tlciB7XG4gIHByaXZhdGUgZG5hTWF0cml4RnVsbDogTnVjbGVvdGlkZVtdW10gPSBbXTtcbiAgcHJpdmF0ZSBzZXF1ZW5jZUNvdW50ZXI6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgY29udGV4dDogU2VhcmNoQ29udGV4dDtcblxuICBwcml2YXRlIHJlYWRvbmx5IGRuYVNlcXVlbmNlU2VydmljZTogRG5hU2VxdWVuY2VTZXJ2aWNlO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZG5hU2VxdWVuY2VTZXJ2aWNlID0gbmV3IERuYVNlcXVlbmNlU2VydmljZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBpc011dGFudChkbmE6IHN0cmluZ1tdKTogYm9vbGVhbiB7XG4gICAgY29uc3Qgc2l6ZSA9IGRuYS5sZW5ndGg7XG4gICAgY29uc3QgaW5pdFRpbWUgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcblxuICAgIC8vIFZlcmlmaWNhciBzZWN1ZW5jaWEgZGUgQUROXG4gICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuY29udGV4dCA9IG5ldyBTZWFyY2hDb250ZXh0KHNpemUpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNpemU7IGorKykge1xuICAgICAgICAvKlJlYWxpemFyIGNvbXBhcmFjacOzbiBjb24gbG9zIG51Y2xlb3RpZG9zIGRlIGxhIGhvcml6b250YWwgYSBsYSBkZXJlY2hhIHVzYW5kbyBsYSBlc3RyYXRlZ2lhIGRlXG4gICAgICAgIGJ1c3F1ZWRhIGVuIHByb2Z1bmRpZGFkLCBzaSBlbmN1ZW50cmEgdW5hIHNlY3VlbmNpYSBhdW1lbnRhIGVsIGNvbnRhZG9yIGRlIHNlY3VlbmNpYXMqL1xuICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5jb250ZXh0LnNldFN0cmF0ZWd5KG5ldyBTZWFyY2hSaWdodFN0cmF0ZWd5KCkpO1xuICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgPVxuICAgICAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmNvbnRleHQuc2VhcmNoKFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5kbmFNYXRyaXhGdWxsXG4gICAgICAgICAgKVxuICAgICAgICAgICAgPyBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgKyAxXG4gICAgICAgICAgICA6IGROQUNoZWNrZXJDb250cm9sbGVyLnNlcXVlbmNlQ291bnRlcjtcblxuICAgICAgICAvKlJlYWxpemFyIGNvbXBhcmFjacOzbiBjb24gbG9zIG51Y2xlb3RpZG9zIGRlIGxhIGRpYWdvbmFsIGRlcmVjaGEgaGFjaWEgYWJham8gdXNhbmRvIGxhXG4gICAgICAgIGVzdHJhdGVnaWEgZGUgYnVzcXVlZGEgZW4gcHJvZnVuZGlkYWQsIHNpIGVuY3VlbnRyYSB1bmEgc2VjdWVuY2lhIGF1bWVudGEgZWwgY29udGFkb3IgZGVcbiAgICAgICAgc2VjdWVuY2lhcyovXG4gICAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmNvbnRleHQuc2V0U3RyYXRlZ3kobmV3IFNlYXJjaFJpZ2h0RG93blN0cmF0ZWd5KCkpO1xuICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgPVxuICAgICAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmNvbnRleHQuc2VhcmNoKFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5kbmFNYXRyaXhGdWxsXG4gICAgICAgICAgKVxuICAgICAgICAgICAgPyBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgKyAxXG4gICAgICAgICAgICA6IGROQUNoZWNrZXJDb250cm9sbGVyLnNlcXVlbmNlQ291bnRlcjtcblxuICAgICAgICAvKlJlYWxpemFyIGNvbXBhcmFjacOzbiBjb24gbG9zIG51Y2xlb3RpZG9zIGRlIGxhIHZlcnRpY2FsIGhhY2lhIGFiYWpvIHVzYW5kbyBsYSBlc3RyYXRlZ2lhIGRlXG4gICAgICAgIGJ1c3F1ZWRhIGVuIHByb2Z1bmRpZGFkLCBzaSBlbmN1ZW50cmEgdW5hIHNlY3VlbmNpYSBhdW1lbnRhIGVsIGNvbnRhZG9yIGRlIHNlY3VlbmNpYXMqL1xuICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5jb250ZXh0LnNldFN0cmF0ZWd5KG5ldyBTZWFyY2hEb3duU3RyYXRlZ3koKSk7XG4gICAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLnNlcXVlbmNlQ291bnRlciA9XG4gICAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuY29udGV4dC5zZWFyY2goXG4gICAgICAgICAgICBpLFxuICAgICAgICAgICAgaixcbiAgICAgICAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmRuYU1hdHJpeEZ1bGxcbiAgICAgICAgICApXG4gICAgICAgICAgICA/IGROQUNoZWNrZXJDb250cm9sbGVyLnNlcXVlbmNlQ291bnRlciArIDFcbiAgICAgICAgICAgIDogZE5BQ2hlY2tlckNvbnRyb2xsZXIuc2VxdWVuY2VDb3VudGVyO1xuXG4gICAgICAgIC8qUmVhbGl6YXIgY29tcGFyYWNpw7NuIGNvbiBsb3MgbnVjbGVvdGlkb3MgZGUgbGEgZGlhZ29uYWwgaXpxdWllcmRhIGhhY2lhIGFiYWpvIHVzYW5kbyBsYVxuICAgICAgICBlc3RyYXRlZ2lhIGRlIGJ1c3F1ZWRhIGVuIHByb2Z1bmRpZGFkLCBzaSBlbmN1ZW50cmEgdW5hIHNlY3VlbmNpYSBhdW1lbnRhIGVsIGNvbnRhZG9yIGRlXG4gICAgICAgIHNlY3VlbmNpYXMqL1xuICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5jb250ZXh0LnNldFN0cmF0ZWd5KG5ldyBTZWFyY2hMZWZ0RG93blN0cmF0ZWd5KCkpO1xuICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgPVxuICAgICAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLmNvbnRleHQuc2VhcmNoKFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5kbmFNYXRyaXhGdWxsXG4gICAgICAgICAgKVxuICAgICAgICAgICAgPyBkTkFDaGVja2VyQ29udHJvbGxlci5zZXF1ZW5jZUNvdW50ZXIgKyAxXG4gICAgICAgICAgICA6IGROQUNoZWNrZXJDb250cm9sbGVyLnNlcXVlbmNlQ291bnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKm5vIGVzIG5lY2VzYXJpbyBidXNjYXIgZW4gb3RyYXMgZGlyZWNjaW9uZXMgcHVlc3RvIHF1ZSB5YSB0b2RhIGxhIG1hdHJpeiBmdWUgY3ViaWVydGFcbiAgICBTaSBzZSBlbmNvbnRyYXJvbiAyIG8gbcOhcyBzZWN1ZW5jaWFzIHNlIGRldGVybWluYSBxdWUgZWwgRE5BIGVzIGRlIHVuIG11dGFudGUqL1xuICAgIGNvbnN0IGlzTXV0YW50RE5BID1cbiAgICAgIGROQUNoZWNrZXJDb250cm9sbGVyLnNlcXVlbmNlQ291bnRlciA+PSAyID8gdHJ1ZSA6IGZhbHNlO1xuXG4gICAgY29uc3QgZW5kVGltZSA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgIGNvbnNvbGUubG9nKFwiZXhlYyB0aW1lOiBcIiwgKGVuZFRpbWUgLSBpbml0VGltZSkgLyAxMDAwKTtcbiAgICByZXR1cm4gaXNNdXRhbnRETkE7XG4gIH1cblxuICBwcml2YXRlIG1hcERuYU1hdHJpeChkbmE6IHN0cmluZ1tdKTogYm9vbGVhbiB7XG4gICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuZG5hTWF0cml4RnVsbCA9IG5ldyBBcnJheTxOdWNsZW90aWRlW10+KCk7XG4gICAgbGV0IGxpbmU6IHN0cmluZ1tdID0gW107XG4gICAgbGV0IHZhbDogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvLyBEYWRvIHF1ZSBsYSBsb25naXR1ZCBtw6F4aW1hIHBlcm1pdGlkYSBlbiBsYSBCRCBlcyBkZSA0MDAsIHNvbG8gc2UgcHVlZGUgdGVuZXIgdW5hIHNlY3VlbmNpYSBkZSAxNFgxNFxuICAgIGlmIChkbmEgJiYgZG5hLmxlbmd0aCA+IDQgJiYgZG5hLmxlbmd0aCA8PSAxNCkge1xuICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiBkbmEpIHtcbiAgICAgICAgbGluZSA9IHZhbHVlLnNwbGl0KFwiXCIpO1xuICAgICAgICAvLyBWZXJpZmljYXIgcXVlIGxhIHNlY3VlbmNpYSBkZSBBRE4gc2VhIGRlIE5YTlxuICAgICAgICBpZiAoZG5hLmxlbmd0aCA9PT0gdmFsdWUubGVuZ3RoKSB7XG4gICAgICAgICAgY29uc3Qgcm93OiBOdWNsZW90aWRlW10gPSBuZXcgQXJyYXk8TnVjbGVvdGlkZT4oKTtcbiAgICAgICAgICBmb3IgKGNvbnN0IG51Y2xlb3RpZGUgb2YgbGluZSkge1xuICAgICAgICAgICAgLy8gdmVyaWZpY2FyIHF1ZSBlbCBudWNsZcOzdGlkbyBzZWEgdsOhbGlkb1xuICAgICAgICAgICAgaWYgKFtcIkFcIiwgXCJDXCIsIFwiR1wiLCBcIlRcIl0uaW5jbHVkZXMobnVjbGVvdGlkZSkpIHtcbiAgICAgICAgICAgICAgcm93LnB1c2gobmV3IE51Y2xlb3RpZGUobnVjbGVvdGlkZSkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdmFsID0gZmFsc2U7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBkTkFDaGVja2VyQ29udHJvbGxlci5kbmFNYXRyaXhGdWxsLnB1c2gocm93KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWwgPSBmYWxzZTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB2YWwgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBzYXZlRE5BU2VxdWVuY2UoXG4gICAgZG5hOiBzdHJpbmcsXG4gICAgc3ViamVjdFR5cGU6IHN0cmluZ1xuICApOiBQcm9taXNlPEROQVNlcXVlbmNlc0VudGl0eT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBkbmFFbnRpdHkgPSBuZXcgRE5BU2VxdWVuY2VzRW50aXR5KCk7XG4gICAgICBkbmFFbnRpdHkuc2VxdWVuY2UgPSBkbmE7XG4gICAgICBkbmFFbnRpdHkuc3ViamVjdFR5cGUgPSBzdWJqZWN0VHlwZTtcblxuICAgICAgY29uc3QgcmVzdWx0ID1cbiAgICAgICAgYXdhaXQgZE5BQ2hlY2tlckNvbnRyb2xsZXIuZG5hU2VxdWVuY2VTZXJ2aWNlLnNhdmVETkFTZXF1ZW5jZShcbiAgICAgICAgICBkbmFFbnRpdHlcbiAgICAgICAgKTtcblxuICAgICAgYXdhaXQgQ29ubmVjdGlvbkRCLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInNhdmVETkFTZXF1ZW5jZSBFcnJvcjogXCIsIGUpO1xuICAgICAgYXdhaXQgQ29ubmVjdGlvbkRCLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBjaGVja2lzTXV0YW50KHJxOiBSZXF1ZXN0LCByczogUmVzcG9uc2UpIHtcbiAgICB0cnkge1xuICAgICAgLy8gTGVlciBzZWN1ZW5jaWEgZGUgQUROIGRlc2RlIGVsIHJlcXVlc3RcbiAgICAgIGNvbnN0IHJlcXVlc3QgPSBycS5ib2R5IGFzIElNdXRhbnRETkFSZXF1ZXN0TW9kZWw7XG4gICAgICBjb25zdCBkbmFTZXF1ZW5jZSA9IHJlcXVlc3QuZG5hO1xuXG4gICAgICAvLyBWYWxpZGFtb3MgZWwgcmVxdWVzdCB5IG1hcGVhbW9zIGVsIGFycmF5IGRlIGVudHJhZGEgZW4gdW4gYXJyYXkgMkQgcGFyYSBoYWNlciBsYXMgYnVzcXVlZGFzIGVuIHByb2Z1bmRpZGFkXG4gICAgICBjb25zdCBpc1ZhbGlkUmVxdWVzdCA9IGROQUNoZWNrZXJDb250cm9sbGVyLm1hcERuYU1hdHJpeChkbmFTZXF1ZW5jZSk7XG4gICAgICBpZiAoaXNWYWxpZFJlcXVlc3QpIHtcbiAgICAgICAgLy8gVmVyaWZpY2FyIHNpIGVsIEFETiBlcyBtdXRhbnRlXG4gICAgICAgIGNvbnN0IGlzTXV0YW50ID0gZE5BQ2hlY2tlckNvbnRyb2xsZXIuaXNNdXRhbnQoZG5hU2VxdWVuY2UpO1xuICAgICAgICAvLyBhbG1hY2VuYXIgZW4gQkRcbiAgICAgICAgZE5BQ2hlY2tlckNvbnRyb2xsZXIuc2F2ZUROQVNlcXVlbmNlKFxuICAgICAgICAgIGRuYVNlcXVlbmNlLnRvU3RyaW5nKCksXG4gICAgICAgICAgaXNNdXRhbnQgPyBcIk1cIiA6IFwiSFwiXG4gICAgICAgICk7XG5cbiAgICAgICAgaWYgKGlzTXV0YW50KSB7XG4gICAgICAgICAgcnMuc3RhdHVzKDIwMCkuc2VuZChcIjIwMC1PS1wiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBycy5zdGF0dXMoNDAzKS5zZW5kKFwiNDAzLUZvcmJpZGRlblwiKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcnMuc3RhdHVzKDQwMCkuc2VuZChcIjQwMC1CYWQgcmVxdWVzdFwiKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHJzXG4gICAgICAgIC5zdGF0dXMoNTAwKVxuICAgICAgICAuc2VuZCh7IGVycm9yOiBlcnJvci5tZXNzYWdlIHx8IEpTT04uc3RyaW5naWZ5KGVycm9yKSB9KTtcbiAgICB9XG4gIH1cbn1cblxuY29uc3QgZE5BQ2hlY2tlckNvbnRyb2xsZXIgPSBuZXcgRE5BQ2hlY2tlcigpO1xuZXhwb3J0IGRlZmF1bHQgZE5BQ2hlY2tlckNvbnRyb2xsZXI7XG4iXX0=