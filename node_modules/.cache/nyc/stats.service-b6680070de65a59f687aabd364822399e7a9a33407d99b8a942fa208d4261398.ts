"use strict";function cov_2a08oqo4zn(){var path="/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/services/stats.service.ts";var hash="1e8dc24fa7c06e347645bf821741eeda18203ef0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/services/stats.service.ts",statementMap:{"0":{start:{line:2,column:16},end:{line:10,column:1}},"1":{start:{line:3,column:28},end:{line:3,column:110}},"2":{start:{line:3,column:91},end:{line:3,column:106}},"3":{start:{line:4,column:4},end:{line:9,column:7}},"4":{start:{line:5,column:36},end:{line:5,column:97}},"5":{start:{line:5,column:42},end:{line:5,column:70}},"6":{start:{line:5,column:85},end:{line:5,column:95}},"7":{start:{line:6,column:35},end:{line:6,column:100}},"8":{start:{line:6,column:41},end:{line:6,column:73}},"9":{start:{line:6,column:88},end:{line:6,column:98}},"10":{start:{line:7,column:32},end:{line:7,column:116}},"11":{start:{line:8,column:8},end:{line:8,column:78}},"12":{start:{line:11,column:0},end:{line:11,column:62}},"13":{start:{line:12,column:0},end:{line:12,column:30}},"14":{start:{line:13,column:21},end:{line:13,column:65}},"15":{start:{line:14,column:26},end:{line:14,column:72}},"16":{start:{line:17,column:8},end:{line:30,column:11}},"17":{start:{line:18,column:12},end:{line:29,column:13}},"18":{start:{line:19,column:36},end:{line:19,column:84}},"19":{start:{line:21,column:43},end:{line:23,column:18}},"20":{start:{line:24,column:16},end:{line:24,column:29}},"21":{start:{line:27,column:16},end:{line:27,column:87}},"22":{start:{line:28,column:16},end:{line:28,column:39}},"23":{start:{line:33,column:0},end:{line:33,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:44},end:{line:2,column:45}},loc:{start:{line:2,column:89},end:{line:10,column:1}},line:2},"1":{name:"adopt",decl:{start:{line:3,column:13},end:{line:3,column:18}},loc:{start:{line:3,column:26},end:{line:3,column:112}},line:3},"2":{name:"(anonymous_2)",decl:{start:{line:3,column:70},end:{line:3,column:71}},loc:{start:{line:3,column:89},end:{line:3,column:108}},line:3},"3":{name:"(anonymous_3)",decl:{start:{line:4,column:36},end:{line:4,column:37}},loc:{start:{line:4,column:63},end:{line:9,column:5}},line:4},"4":{name:"fulfilled",decl:{start:{line:5,column:17},end:{line:5,column:26}},loc:{start:{line:5,column:34},end:{line:5,column:99}},line:5},"5":{name:"rejected",decl:{start:{line:6,column:17},end:{line:6,column:25}},loc:{start:{line:6,column:33},end:{line:6,column:102}},line:6},"6":{name:"step",decl:{start:{line:7,column:17},end:{line:7,column:21}},loc:{start:{line:7,column:30},end:{line:7,column:118}},line:7},"7":{name:"(anonymous_7)",decl:{start:{line:16,column:4},end:{line:16,column:5}},loc:{start:{line:16,column:44},end:{line:31,column:5}},line:16},"8":{name:"(anonymous_8)",decl:{start:{line:17,column:47},end:{line:17,column:48}},loc:{start:{line:17,column:60},end:{line:30,column:9}},line:17}},branchMap:{"0":{loc:{start:{line:2,column:16},end:{line:10,column:1}},type:"binary-expr",locations:[{start:{line:2,column:17},end:{line:2,column:21}},{start:{line:2,column:25},end:{line:2,column:39}},{start:{line:2,column:44},end:{line:10,column:1}}],line:2},"1":{loc:{start:{line:3,column:35},end:{line:3,column:109}},type:"cond-expr",locations:[{start:{line:3,column:56},end:{line:3,column:61}},{start:{line:3,column:64},end:{line:3,column:109}}],line:3},"2":{loc:{start:{line:4,column:16},end:{line:4,column:34}},type:"binary-expr",locations:[{start:{line:4,column:16},end:{line:4,column:17}},{start:{line:4,column:22},end:{line:4,column:33}}],line:4},"3":{loc:{start:{line:7,column:32},end:{line:7,column:115}},type:"cond-expr",locations:[{start:{line:7,column:46},end:{line:7,column:67}},{start:{line:7,column:70},end:{line:7,column:115}}],line:7},"4":{loc:{start:{line:8,column:51},end:{line:8,column:67}},type:"binary-expr",locations:[{start:{line:8,column:51},end:{line:8,column:61}},{start:{line:8,column:65},end:{line:8,column:67}}],line:8}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},inputSourceMap:{version:3,file:"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/services/stats.service.ts",sources:["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/services/stats.service.ts"],names:[],mappings:";;;;;;;;;;;;AAAA,kEAAiE;AACjE,yEAAyE;AAEzE,MAAa,YAAY;IACV,0BAA0B,CACrC,WAAmB;;YAEnB,IAAI;gBACF,MAAM,WAAW,GAAG,MAAM,yBAAY,CAAC,cAAc,EAAE,CAAC;gBACxD,aAAa;gBACb,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,oCAAkB,EAAE;oBACpF,WAAW;iBACZ,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC;aACd;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,KAAK,CAAC,CAAC;gBACvE,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;aACxB;QACH,CAAC;KAAA;CACF;AAhBD,oCAgBC",sourcesContent:["import { ConnectionDB } from \"../../core/services/db/db.service\";\nimport { DNASequencesEntity } from \"../../core/entities/sequence.entity\";\n\nexport class StatsService {\n  public async countDNASequencesBySubject(\n    subjectType: string\n  ): Promise<number> {\n    try {\n      const queryRunner = await ConnectionDB.getQueryRunner();\n      // @ts-ignore\n      const [sequences, count] = await queryRunner.manager.findAndCount(DNASequencesEntity, {\n        subjectType,\n      });\n      return count;\n    } catch (error) {\n      console.log(\"[ERROR] couting DNA sequences by subject type %o\", error);\n      throw new Error(error);\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1e8dc24fa7c06e347645bf821741eeda18203ef0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2a08oqo4zn=function(){return actualCoverage;};}return actualCoverage;}cov_2a08oqo4zn();var __awaiter=(cov_2a08oqo4zn().s[0]++,(cov_2a08oqo4zn().b[0][0]++,this)&&(cov_2a08oqo4zn().b[0][1]++,this.__awaiter)||(cov_2a08oqo4zn().b[0][2]++,function(thisArg,_arguments,P,generator){cov_2a08oqo4zn().f[0]++;function adopt(value){cov_2a08oqo4zn().f[1]++;cov_2a08oqo4zn().s[1]++;return value instanceof P?(cov_2a08oqo4zn().b[1][0]++,value):(cov_2a08oqo4zn().b[1][1]++,new P(function(resolve){cov_2a08oqo4zn().f[2]++;cov_2a08oqo4zn().s[2]++;resolve(value);}));}cov_2a08oqo4zn().s[3]++;return new((cov_2a08oqo4zn().b[2][0]++,P)||(cov_2a08oqo4zn().b[2][1]++,P=Promise))(function(resolve,reject){cov_2a08oqo4zn().f[3]++;function fulfilled(value){cov_2a08oqo4zn().f[4]++;cov_2a08oqo4zn().s[4]++;try{cov_2a08oqo4zn().s[5]++;step(generator.next(value));}catch(e){cov_2a08oqo4zn().s[6]++;reject(e);}}function rejected(value){cov_2a08oqo4zn().f[5]++;cov_2a08oqo4zn().s[7]++;try{cov_2a08oqo4zn().s[8]++;step(generator["throw"](value));}catch(e){cov_2a08oqo4zn().s[9]++;reject(e);}}function step(result){cov_2a08oqo4zn().f[6]++;cov_2a08oqo4zn().s[10]++;result.done?(cov_2a08oqo4zn().b[3][0]++,resolve(result.value)):(cov_2a08oqo4zn().b[3][1]++,adopt(result.value).then(fulfilled,rejected));}cov_2a08oqo4zn().s[11]++;step((generator=generator.apply(thisArg,(cov_2a08oqo4zn().b[4][0]++,_arguments)||(cov_2a08oqo4zn().b[4][1]++,[]))).next());});}));cov_2a08oqo4zn().s[12]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2a08oqo4zn().s[13]++;exports.StatsService=void 0;const db_service_1=(cov_2a08oqo4zn().s[14]++,require("../../core/services/db/db.service"));const sequence_entity_1=(cov_2a08oqo4zn().s[15]++,require("../../core/entities/sequence.entity"));class StatsService{countDNASequencesBySubject(subjectType){cov_2a08oqo4zn().f[7]++;cov_2a08oqo4zn().s[16]++;return __awaiter(this,void 0,void 0,function*(){cov_2a08oqo4zn().f[8]++;cov_2a08oqo4zn().s[17]++;try{const queryRunner=(cov_2a08oqo4zn().s[18]++,yield db_service_1.ConnectionDB.getQueryRunner());// @ts-ignore
const[sequences,count]=(cov_2a08oqo4zn().s[19]++,yield queryRunner.manager.findAndCount(sequence_entity_1.DNASequencesEntity,{subjectType}));cov_2a08oqo4zn().s[20]++;return count;}catch(error){cov_2a08oqo4zn().s[21]++;console.log("[ERROR] couting DNA sequences by subject type %o",error);cov_2a08oqo4zn().s[22]++;throw new Error(error);}});}}cov_2a08oqo4zn().s[23]++;exports.StatsService=StatsService;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2Ryb2RyMjUvRGVza3RvcC9NdXRhbnRETkFDaGVja2VyL3NyYy9tb2R1bGVzL3N0YXRzL3NlcnZpY2VzL3N0YXRzLnNlcnZpY2UudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kcm9kcjI1L0Rlc2t0b3AvTXV0YW50RE5BQ2hlY2tlci9zcmMvbW9kdWxlcy9zdGF0cy9zZXJ2aWNlcy9zdGF0cy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLGtFQUFpRTtBQUNqRSx5RUFBeUU7QUFFekUsTUFBYSxZQUFZO0lBQ1YsMEJBQTBCLENBQ3JDLFdBQW1COztZQUVuQixJQUFJO2dCQUNGLE1BQU0sV0FBVyxHQUFHLE1BQU0seUJBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDeEQsYUFBYTtnQkFDYixNQUFNLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxHQUFHLE1BQU0sV0FBVyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsb0NBQWtCLEVBQUU7b0JBQ3BGLFdBQVc7aUJBQ1osQ0FBQyxDQUFDO2dCQUNILE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFBQyxPQUFPLEtBQUssRUFBRTtnQkFDZCxPQUFPLENBQUMsR0FBRyxDQUFDLGtEQUFrRCxFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUN2RSxNQUFNLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ3hCO1FBQ0gsQ0FBQztLQUFBO0NBQ0Y7QUFoQkQsb0NBZ0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29ubmVjdGlvbkRCIH0gZnJvbSBcIi4uLy4uL2NvcmUvc2VydmljZXMvZGIvZGIuc2VydmljZVwiO1xuaW1wb3J0IHsgRE5BU2VxdWVuY2VzRW50aXR5IH0gZnJvbSBcIi4uLy4uL2NvcmUvZW50aXRpZXMvc2VxdWVuY2UuZW50aXR5XCI7XG5cbmV4cG9ydCBjbGFzcyBTdGF0c1NlcnZpY2Uge1xuICBwdWJsaWMgYXN5bmMgY291bnRETkFTZXF1ZW5jZXNCeVN1YmplY3QoXG4gICAgc3ViamVjdFR5cGU6IHN0cmluZ1xuICApOiBQcm9taXNlPG51bWJlcj4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBxdWVyeVJ1bm5lciA9IGF3YWl0IENvbm5lY3Rpb25EQi5nZXRRdWVyeVJ1bm5lcigpO1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgY29uc3QgW3NlcXVlbmNlcywgY291bnRdID0gYXdhaXQgcXVlcnlSdW5uZXIubWFuYWdlci5maW5kQW5kQ291bnQoRE5BU2VxdWVuY2VzRW50aXR5LCB7XG4gICAgICAgIHN1YmplY3RUeXBlLFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gY291bnQ7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiW0VSUk9SXSBjb3V0aW5nIEROQSBzZXF1ZW5jZXMgYnkgc3ViamVjdCB0eXBlICVvXCIsIGVycm9yKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvcik7XG4gICAgfVxuICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kcm9kcjI1L0Rlc2t0b3AvTXV0YW50RE5BQ2hlY2tlci9zcmMvbW9kdWxlcy9zdGF0cy9zZXJ2aWNlcy9zdGF0cy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzekxBSWU7NGhEQUpmLEtBQUEsQ0FBQSxZQUFBLDJCQUFBLE9BQUEsQ0FBQSxtQ0FBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsaUJBQUEsMkJBQUEsT0FBQSxDQUFBLHFDQUFBLENBQUEsQ0FBQSxDQUVBLEtBQWEsQ0FBQSxZQUFZLENBQ1YsMEJBQTBCLENBQ3JDLFdBRHFDLENBQ2xCLGtELGlHQUVuQixHQUFJLENBQ0YsS0FBTSxDQUFBLFdBQVcsMkJBQUcsS0FBTSxDQUFBLFlBQUEsQ0FBQSxZQUFBLENBQWEsY0FBYixFQUFULENBQWpCLENBQ0E7QUFDQSxLQUFNLENBQUMsU0FBRCxDQUFZLEtBQVosNEJBQXFCLEtBQU0sQ0FBQSxXQUFXLENBQUMsT0FBWixDQUFvQixZQUFwQixDQUFpQyxpQkFBQSxDQUFBLGtCQUFqQyxDQUFxRCxDQUNwRixXQURvRixDQUFyRCxDQUEzQixDQUFOLENBSEUseUJBTUYsTUFBTyxDQUFBLEtBQVAsQ0FDRCxDQUFDLE1BQU8sS0FBUCxDQUFjLDBCQUNkLE9BQU8sQ0FBQyxHQUFSLENBQVksa0RBQVosQ0FBZ0UsS0FBaEUsRUFEYyx5QkFFZCxLQUFNLElBQUksQ0FBQSxLQUFKLENBQVUsS0FBVixDQUFOLENBQ0QsQ0FDRixDLEVBQUEsQ0Fmc0IsQyx5QkFBekIsT0FBQSxDQUFBLFlBQUEsQ0FBQSxZQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25uZWN0aW9uREIgfSBmcm9tIFwiLi4vLi4vY29yZS9zZXJ2aWNlcy9kYi9kYi5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBETkFTZXF1ZW5jZXNFbnRpdHkgfSBmcm9tIFwiLi4vLi4vY29yZS9lbnRpdGllcy9zZXF1ZW5jZS5lbnRpdHlcIjtcblxuZXhwb3J0IGNsYXNzIFN0YXRzU2VydmljZSB7XG4gIHB1YmxpYyBhc3luYyBjb3VudEROQVNlcXVlbmNlc0J5U3ViamVjdChcbiAgICBzdWJqZWN0VHlwZTogc3RyaW5nXG4gICk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHF1ZXJ5UnVubmVyID0gYXdhaXQgQ29ubmVjdGlvbkRCLmdldFF1ZXJ5UnVubmVyKCk7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBjb25zdCBbc2VxdWVuY2VzLCBjb3VudF0gPSBhd2FpdCBxdWVyeVJ1bm5lci5tYW5hZ2VyLmZpbmRBbmRDb3VudChETkFTZXF1ZW5jZXNFbnRpdHksIHtcbiAgICAgICAgc3ViamVjdFR5cGUsXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBjb3VudDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coXCJbRVJST1JdIGNvdXRpbmcgRE5BIHNlcXVlbmNlcyBieSBzdWJqZWN0IHR5cGUgJW9cIiwgZXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==