{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/app.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/app.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,sDAA8B;AAC9B,sFAA6D;AAC7D,sEAAqE;AACrE,yGAA2E;AAC3E,uFAA8D;AAE9D,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,MAAM,GAAG,GAAG,iBAAO,EAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,MAAM,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;AAClD,IAAI,CAAC,UAAU,EAAE;IACf,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;QACpB,sCAAsC;QACtC,OAAO,CAAC,GAAG,CAAC,sCAAsC,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;CACJ;AACD,GAAG,CAAC,GAAG,CAAC,CAAO,GAAQ,EAAE,GAAQ,EAAE,IAAS,EAAiB,EAAE;IAC7D,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,MAAM,yBAAY,CAAC,qBAAqB,EAAE,CAAC;QAC3C,OAAO,IAAI,EAAE,CAAC;KACf;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;KACjC;AACH,CAAC,CAAA,CAAC,CAAC;AACH,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,sBAAW,CAAC,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,4BAAY,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,sBAAW,CAAC,CAAC;AAI1B,GAAG,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,GAAQ,EAAE,GAAQ,EAAE,IAAS,EAAE,EAAE;IAClD,MAAM,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;IAClC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;QAC1B,KAAK,EAAE;YACL,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,IAAI,EAAE,GAAG,CAAC,IAAI;SACf;KACF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,aAAa,EAAE,CAAC,CAAC;AAC/E,CAAC,CAAC,CAAC;AAEH,kBAAe,GAAG,CAAC","sourcesContent":["import express from \"express\";\nimport indexRouter from \"./modules/core/routes/index.router\";\nimport { ConnectionDB } from \"./modules/core/services/db/db.service\";\nimport mutantRouter from \"./modules/dna-checker/routes/dna-checker.router\";\nimport statsRouter from \"./modules/stats/routes/stats.router\";\n\nconst PORT = process.env.PORT || 3050;\n\nconst app = express();\n\napp.use(express.json());\nconst isInLambda = !!process.env.LAMBDA_TASK_ROOT;\nif (!isInLambda) {\n  app.listen(PORT, () => {\n    // tslint:disable-next-line:no-console\n    console.log(`server started at http://localhost:${PORT}`);\n  });\n}\napp.use(async (req: any, res: any, next: any): Promise<void> => {\n  try {\n    console.log(\"app.ts - getConnectionInstance\");\n    await ConnectionDB.getConnectionInstance();\n    return next();\n  } catch (e) {\n    return res.send(500, e.message);\n  }\n});\napp.use(\"/\", indexRouter);\napp.use(\"/\", mutantRouter);\napp.use(\"/\", statsRouter);\n\n\n\napp.use((err: any, req: any, res: any, next: any) => {\n  const statusCode = err.statusCode;\n  res.status(statusCode).json({\n    error: {\n      data: err.data,\n      message: err.message,\n      name: err.name,\n    },\n  });\n});\n\napp.use((req, res) => {\n  return res.status(404).send({ message: \"Route \" + req.url + \" Not found.\" });\n});\n\nexport default app;\n"]}