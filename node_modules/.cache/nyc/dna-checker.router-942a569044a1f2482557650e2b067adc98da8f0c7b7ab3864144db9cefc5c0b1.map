{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/routes/dna-checker.router.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/routes/dna-checker.router.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAAoD;AACpD,kFAAmE;AAEnE,MAAM,YAAY;IAGhB;QAFO,WAAM,GAAW,gBAAM,EAAE,CAAC;QAG/B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,IAAI;YACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAO,EAAW,EAAE,EAAY,EAAE,EAAE;gBAC9D,yCAAyC;gBACzC,MAAM,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;gBAChC,MAAM,UAAU,GAAG,IAAI,mCAAU,EAAE,CAAC;gBACpC,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACxD,kBAAkB;gBAClB,UAAU,CAAC,eAAe,CACxB,WAAW,CAAC,QAAQ,EAAE,EACtB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CACrB,CAAC;gBAEF,IAAI,QAAQ,EAAE;oBACZ,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC/B;qBAAM;oBACL,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBACtC;YACH,CAAC,CAAA,CAAC,CAAC;SACJ;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;CACF;AAED,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AACxC,kBAAe,YAAY,CAAC,MAAM,CAAC","sourcesContent":["import { Request, Response, Router } from \"express\";\nimport { DNAChecker } from \"../controllers/dna-checker.controller\";\n\nclass MutantRouter {\n  public router: Router = Router();\n\n  constructor() {\n    this.config();\n  }\n\n  private config(): void {\n    try {\n      this.router.post(\"/mutant\", async (rq: Request, rs: Response) => {\n        // Leer secuencia de ADN desde el request\n        const dnaSequence = rq.body.dna;\n        const dnaChecker = new DNAChecker();\n        const isMutant = await dnaChecker.isMutant(dnaSequence);\n        // almacenar en BD\n        dnaChecker.saveDNASequence(\n          dnaSequence.toString(),\n          isMutant ? \"M\" : \"H\"\n        );\n\n        if (isMutant) {\n          rs.status(200).send(\"200-OK\");\n        } else {\n          rs.status(403).send(\"403-Forbidden\");\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst mutantRouter = new MutantRouter();\nexport default mutantRouter.router;\n"]}