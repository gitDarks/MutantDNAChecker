{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/controllers/stats.controller.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/controllers/stats.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,kEAAiE;AACjE,6DAAyD;AAEzD,MAAa,KAAK;IAOhB;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,4BAAY,EAAE,CAAC;IACzC,CAAC;IAEY,QAAQ;;YACnB,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;YACvB,OAAO,CACL,sBAAsB;gBACtB,IAAI,CAAC,cAAc;gBACnB,uBAAuB;gBACvB,IAAI,CAAC,aAAa;gBAClB,aAAa;gBACb,IAAI,CAAC,KAAK,CACX,CAAC;QACJ,CAAC;KAAA;IAEa,SAAS;;YACrB;;;yFAG6E;YAC7E,IAAI;gBACF,IAAI,CAAC,cAAc;oBACjB,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACjE,IAAI,CAAC,aAAa;oBAChB,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACjE,IAAI,CAAC,KAAK;oBACR,IAAI,CAAC,cAAc,GAAG,CAAC;wBACrB,CAAC,CAAC,IAAI,CAAC,cAAc;4BACnB,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;wBACrE,CAAC,CAAC,CAAC,CAAC;gBAER,MAAM,yBAAY,CAAC,eAAe,EAAE,CAAC;aACtC;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,yBAAY,CAAC,eAAe,EAAE,CAAC;gBACrC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB;QACH,CAAC;KAAA;CACF;AA7CD,sBA6CC;AAED,MAAM,eAAe,GAAG,IAAI,KAAK,EAAE,CAAC;AACpC,kBAAe,eAAe,CAAC","sourcesContent":["import { ConnectionDB } from \"../../core/services/db/db.service\";\nimport { StatsService } from \"../services/stats.service\";\n\nexport class Stats {\n  private countMutantDna: number;\n  private countHumanDna: number;\n  private ratio: number;\n\n  private readonly statsService: StatsService;\n\n  constructor() {\n    this.statsService = new StatsService();\n  }\n\n  public async getStats(): Promise<string> {\n    await this.calcRatio();\n    return (\n      '\"count_mutant_dna\": ' +\n      this.countMutantDna +\n      ', \"count_human_dna\": ' +\n      this.countHumanDna +\n      ', \"ratio\": ' +\n      this.ratio\n    );\n  }\n\n  private async calcRatio() {\n    /* Contar los registros en base de datos de las secuencias de ADN de mutantes y humanos\n    Si la cantidad de mutantes es cero, el ratio es cero\n    Si la cantidad de humanos es cero, el ratio es 1 o la cantidad de mutantes / la cantidad de mutantes\n    de lo contrario el ratio es la cantidad de mutantes/la cantidad de humanos */\n    try {\n      this.countMutantDna =\n        (await this.statsService.countDNASequencesBySubject(\"M\")) || 0;\n      this.countHumanDna =\n        (await this.statsService.countDNASequencesBySubject(\"H\")) || 0;\n      this.ratio =\n        this.countMutantDna > 0\n          ? this.countMutantDna /\n            (this.countHumanDna > 0 ? this.countHumanDna : this.countMutantDna)\n          : 0;\n\n      await ConnectionDB.closeConnection();\n    } catch (e) {\n      await ConnectionDB.closeConnection();\n      throw new Error(e);\n    }\n  }\n}\n\nconst statsController = new Stats();\nexport default statsController;"]}