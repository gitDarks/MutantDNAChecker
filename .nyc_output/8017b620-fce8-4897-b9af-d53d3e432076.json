{"/Users/drodr25/Desktop/MutantDNAChecker/src/config.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/config.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":16},"end":{"line":29,"column":1}},"22":{"start":{"line":22,"column":28},"end":{"line":22,"column":110}},"23":{"start":{"line":22,"column":91},"end":{"line":22,"column":106}},"24":{"start":{"line":23,"column":4},"end":{"line":28,"column":7}},"25":{"start":{"line":24,"column":36},"end":{"line":24,"column":97}},"26":{"start":{"line":24,"column":42},"end":{"line":24,"column":70}},"27":{"start":{"line":24,"column":85},"end":{"line":24,"column":95}},"28":{"start":{"line":25,"column":35},"end":{"line":25,"column":100}},"29":{"start":{"line":25,"column":41},"end":{"line":25,"column":73}},"30":{"start":{"line":25,"column":88},"end":{"line":25,"column":98}},"31":{"start":{"line":26,"column":32},"end":{"line":26,"column":116}},"32":{"start":{"line":27,"column":8},"end":{"line":27,"column":78}},"33":{"start":{"line":30,"column":0},"end":{"line":30,"column":62}},"34":{"start":{"line":31,"column":0},"end":{"line":31,"column":46}},"35":{"start":{"line":32,"column":15},"end":{"line":32,"column":46}},"36":{"start":{"line":33,"column":11},"end":{"line":33,"column":38}},"37":{"start":{"line":34,"column":16},"end":{"line":34,"column":18}},"38":{"start":{"line":35,"column":15},"end":{"line":50,"column":2}},"39":{"start":{"line":35,"column":21},"end":{"line":50,"column":2}},"40":{"start":{"line":36,"column":23},"end":{"line":36,"column":53}},"41":{"start":{"line":37,"column":4},"end":{"line":48,"column":5}},"42":{"start":{"line":38,"column":8},"end":{"line":44,"column":9}},"43":{"start":{"line":39,"column":12},"end":{"line":39,"column":42}},"44":{"start":{"line":42,"column":12},"end":{"line":42,"column":59}},"45":{"start":{"line":43,"column":12},"end":{"line":43,"column":41}},"46":{"start":{"line":47,"column":8},"end":{"line":47,"column":58}},"47":{"start":{"line":49,"column":4},"end":{"line":49,"column":33}},"48":{"start":{"line":51,"column":0},"end":{"line":51,"column":24}},"49":{"start":{"line":52,"column":20},"end":{"line":63,"column":2}},"50":{"start":{"line":52,"column":29},"end":{"line":63,"column":2}},"51":{"start":{"line":53,"column":4},"end":{"line":62,"column":5}},"52":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"53":{"start":{"line":55,"column":12},"end":{"line":55,"column":35}},"54":{"start":{"line":57,"column":8},"end":{"line":57,"column":30}},"55":{"start":{"line":60,"column":8},"end":{"line":60,"column":45}},"56":{"start":{"line":61,"column":8},"end":{"line":61,"column":50}},"57":{"start":{"line":64,"column":0},"end":{"line":64,"column":34}},"58":{"start":{"line":65,"column":24},"end":{"line":74,"column":1}},"59":{"start":{"line":66,"column":4},"end":{"line":73,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":44},"end":{"line":21,"column":45}},"loc":{"start":{"line":21,"column":89},"end":{"line":29,"column":1}},"line":21},"7":{"name":"adopt","decl":{"start":{"line":22,"column":13},"end":{"line":22,"column":18}},"loc":{"start":{"line":22,"column":26},"end":{"line":22,"column":112}},"line":22},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":70},"end":{"line":22,"column":71}},"loc":{"start":{"line":22,"column":89},"end":{"line":22,"column":108}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":23,"column":36},"end":{"line":23,"column":37}},"loc":{"start":{"line":23,"column":63},"end":{"line":28,"column":5}},"line":23},"10":{"name":"fulfilled","decl":{"start":{"line":24,"column":17},"end":{"line":24,"column":26}},"loc":{"start":{"line":24,"column":34},"end":{"line":24,"column":99}},"line":24},"11":{"name":"rejected","decl":{"start":{"line":25,"column":17},"end":{"line":25,"column":25}},"loc":{"start":{"line":25,"column":33},"end":{"line":25,"column":102}},"line":25},"12":{"name":"step","decl":{"start":{"line":26,"column":17},"end":{"line":26,"column":21}},"loc":{"start":{"line":26,"column":30},"end":{"line":26,"column":118}},"line":26},"13":{"name":"(anonymous_13)","decl":{"start":{"line":35,"column":15},"end":{"line":35,"column":16}},"loc":{"start":{"line":35,"column":21},"end":{"line":50,"column":2}},"line":35},"14":{"name":"(anonymous_14)","decl":{"start":{"line":35,"column":55},"end":{"line":35,"column":56}},"loc":{"start":{"line":35,"column":68},"end":{"line":50,"column":1}},"line":35},"15":{"name":"(anonymous_15)","decl":{"start":{"line":52,"column":20},"end":{"line":52,"column":21}},"loc":{"start":{"line":52,"column":29},"end":{"line":63,"column":2}},"line":52},"16":{"name":"(anonymous_16)","decl":{"start":{"line":52,"column":63},"end":{"line":52,"column":64}},"loc":{"start":{"line":52,"column":76},"end":{"line":63,"column":1}},"line":52},"17":{"name":"(anonymous_17)","decl":{"start":{"line":65,"column":24},"end":{"line":65,"column":25}},"loc":{"start":{"line":65,"column":30},"end":{"line":74,"column":1}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":21,"column":16},"end":{"line":29,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":17},"end":{"line":21,"column":21}},{"start":{"line":21,"column":25},"end":{"line":21,"column":39}},{"start":{"line":21,"column":44},"end":{"line":29,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":35},"end":{"line":22,"column":109}},"type":"cond-expr","locations":[{"start":{"line":22,"column":56},"end":{"line":22,"column":61}},{"start":{"line":22,"column":64},"end":{"line":22,"column":109}}],"line":22},"14":{"loc":{"start":{"line":23,"column":16},"end":{"line":23,"column":34}},"type":"binary-expr","locations":[{"start":{"line":23,"column":16},"end":{"line":23,"column":17}},{"start":{"line":23,"column":22},"end":{"line":23,"column":33}}],"line":23},"15":{"loc":{"start":{"line":26,"column":32},"end":{"line":26,"column":115}},"type":"cond-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":67}},{"start":{"line":26,"column":70},"end":{"line":26,"column":115}}],"line":26},"16":{"loc":{"start":{"line":27,"column":51},"end":{"line":27,"column":67}},"type":"binary-expr","locations":[{"start":{"line":27,"column":51},"end":{"line":27,"column":61}},{"start":{"line":27,"column":65},"end":{"line":27,"column":67}}],"line":27},"17":{"loc":{"start":{"line":37,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":48,"column":5}},{"start":{"line":37,"column":4},"end":{"line":48,"column":5}}],"line":37},"18":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"19":{"loc":{"start":{"line":67,"column":26},"end":{"line":67,"column":60}},"type":"binary-expr","locations":[{"start":{"line":67,"column":26},"end":{"line":67,"column":54}},{"start":{"line":67,"column":58},"end":{"line":67,"column":60}}],"line":67},"20":{"loc":{"start":{"line":70,"column":17},"end":{"line":70,"column":46}},"type":"binary-expr","locations":[{"start":{"line":70,"column":17},"end":{"line":70,"column":36}},{"start":{"line":70,"column":40},"end":{"line":70,"column":46}}],"line":70}},"s":{"0":1,"1":101,"2":101,"3":101,"4":4,"5":0,"6":0,"7":0,"8":1,"9":2,"10":0,"11":1,"12":2,"13":0,"14":2,"15":2,"16":2,"17":101,"18":101,"19":2,"20":2,"21":1,"22":0,"23":0,"24":30,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":30,"32":30,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":2,"42":0,"43":0,"44":0,"45":0,"46":2,"47":2,"48":1,"49":1,"50":28,"51":28,"52":28,"53":0,"54":28,"55":0,"56":0,"57":1,"58":1,"59":0},"f":{"0":101,"1":4,"2":0,"3":2,"4":0,"5":2,"6":30,"7":0,"8":0,"9":30,"10":0,"11":0,"12":30,"13":2,"14":2,"15":28,"16":28,"17":0},"b":{"0":[1,1,1],"1":[1,0],"2":[101,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,2],"8":[2,2],"9":[2,0],"10":[101,0],"11":[101,101],"12":[1,1,1],"13":[0,0],"14":[30,30],"15":[30,0],"16":[30,30],"17":[0,2],"18":[0,28],"19":[0,0],"20":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/config.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAiC;AACjC,uCAAyB;AAEzB,IAAI,SAAS,GAA8B,EAAE,CAAC;AAEvC,MAAM,MAAM,GAAG,GAAS,EAAE;IAC/B,MAAM,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;IAClD,IAAI,UAAU,EAAE;QACd,IAAI;YACF,SAAS,GAAG,eAAe,EAAE,CAAC;SAC/B;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;YAC/C,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B;KACF;SAAM;QACL,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;KACnD;IACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC/B,CAAC,CAAA,CAAC;AAbW,QAAA,MAAM,UAajB;AAEF,MAAM,WAAW,GAAG,CAAO,GAAW,EAAmB,EAAE;IACzD,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE;YAClC,MAAM,cAAM,EAAE,CAAC;SAChB;QACD,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;KACvB;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACrC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;KAC3C;AACH,CAAC,CAAA,CAAC;AAaO,kCAAW;AAXpB,MAAM,eAAe,GAAG,GAAG,EAAE;IAC3B,OAAO;QACL,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,EAAE;QACpD,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC5B,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;QACpC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,MAAM;QACtC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC5B,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;KAC7B,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as dotenv from \"dotenv\";\nimport * as fs from \"fs\";\n\nlet envConfig: { [key: string]: string } = {};\n\nexport const config = async () => {\n  const isInLambda = !!process.env.LAMBDA_TASK_ROOT;\n  if (isInLambda) {\n    try {\n      envConfig = getEnvVariables();\n    } catch (error) {\n      console.log(\"Error reading env vars: \", error);\n      return Promise.reject(error);\n    }\n  } else {\n    envConfig = dotenv.parse(fs.readFileSync(\".env\"));\n  }\n  return Promise.resolve(true);\n};\n\nconst getVariable = async (key: string): Promise<string> => {\n  try {\n    if (!Object.keys(envConfig).length) {\n      await config();\n    }\n    return envConfig[key];\n  } catch (err) {\n    console.log(`config error: %j`, err);\n    throw new Error(\"failed to get variable\");\n  }\n};\n\nconst getEnvVariables = () => {\n  return {\n    DATABASE_TIMEOUT: process.env.DATABASE_TIMEOUT || \"\",\n    DB_HOST: process.env.DB_HOST,\n    DB_PASSWORD: process.env.DB_PASSWORD,\n    DB_PORT: process.env.DB_PORT || \"3306\",\n    DB_USER: process.env.DB_USER,\n    DB_NAME: process.env.DB_NAME,\n  };\n};\n\nexport { getVariable };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ed3f27c47f61c065d91e9453bb316e540f3cbe86","contentHash":"959ec08cbe976e91ba41f2b0986d3396a8e611b8ae32aa14c1eec267dd5028a0"},"/Users/drodr25/Desktop/MutantDNAChecker/src/app.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":53}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":85}},"17":{"start":{"line":17,"column":21},"end":{"line":17,"column":69}},"18":{"start":{"line":18,"column":29},"end":{"line":18,"column":104}},"19":{"start":{"line":19,"column":23},"end":{"line":19,"column":86}},"20":{"start":{"line":20,"column":13},"end":{"line":20,"column":37}},"21":{"start":{"line":21,"column":12},"end":{"line":21,"column":31}},"22":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"23":{"start":{"line":23,"column":19},"end":{"line":23,"column":49}},"24":{"start":{"line":24,"column":0},"end":{"line":29,"column":1}},"25":{"start":{"line":25,"column":4},"end":{"line":28,"column":7}},"26":{"start":{"line":27,"column":8},"end":{"line":27,"column":66}},"27":{"start":{"line":30,"column":0},"end":{"line":39,"column":4}},"28":{"start":{"line":30,"column":28},"end":{"line":39,"column":2}},"29":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"30":{"start":{"line":32,"column":8},"end":{"line":32,"column":54}},"31":{"start":{"line":33,"column":8},"end":{"line":33,"column":64}},"32":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"33":{"start":{"line":37,"column":8},"end":{"line":37,"column":40}},"34":{"start":{"line":40,"column":0},"end":{"line":40,"column":37}},"35":{"start":{"line":41,"column":0},"end":{"line":41,"column":43}},"36":{"start":{"line":42,"column":0},"end":{"line":42,"column":37}},"37":{"start":{"line":43,"column":0},"end":{"line":52,"column":3}},"38":{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},"39":{"start":{"line":45,"column":4},"end":{"line":51,"column":7}},"40":{"start":{"line":53,"column":0},"end":{"line":55,"column":3}},"41":{"start":{"line":54,"column":4},"end":{"line":54,"column":81}},"42":{"start":{"line":56,"column":0},"end":{"line":56,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":25,"column":21},"end":{"line":25,"column":22}},"loc":{"start":{"line":25,"column":27},"end":{"line":28,"column":5}},"line":25},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":8},"end":{"line":30,"column":9}},"loc":{"start":{"line":30,"column":28},"end":{"line":39,"column":2}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":30,"column":62},"end":{"line":30,"column":63}},"loc":{"start":{"line":30,"column":75},"end":{"line":39,"column":1}},"line":30},"11":{"name":"(anonymous_11)","decl":{"start":{"line":43,"column":8},"end":{"line":43,"column":9}},"loc":{"start":{"line":43,"column":33},"end":{"line":52,"column":1}},"line":43},"12":{"name":"(anonymous_12)","decl":{"start":{"line":53,"column":8},"end":{"line":53,"column":9}},"loc":{"start":{"line":53,"column":22},"end":{"line":55,"column":1}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":37}},"type":"binary-expr","locations":[{"start":{"line":20,"column":13},"end":{"line":20,"column":29}},{"start":{"line":20,"column":33},"end":{"line":20,"column":37}}],"line":20},"9":{"loc":{"start":{"line":24,"column":0},"end":{"line":29,"column":1}},"type":"if","locations":[{"start":{"line":24,"column":0},"end":{"line":29,"column":1}},{"start":{"line":24,"column":0},"end":{"line":29,"column":1}}],"line":24}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":4,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":1,"41":0,"42":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":4,"8":1,"9":0,"10":0,"11":0,"12":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[3,1],"7":[4,4],"8":[1,1],"9":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/app.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/app.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,sDAA8B;AAC9B,sFAA6D;AAC7D,sEAAqE;AACrE,yGAA2E;AAC3E,uFAA8D;AAE9D,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,MAAM,GAAG,GAAG,iBAAO,EAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,MAAM,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;AAClD,IAAI,CAAC,UAAU,EAAE;IACf,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;QACpB,sCAAsC;QACtC,OAAO,CAAC,GAAG,CAAC,sCAAsC,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;CACJ;AACD,GAAG,CAAC,GAAG,CAAC,CAAO,GAAQ,EAAE,GAAQ,EAAE,IAAS,EAAiB,EAAE;IAC7D,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,MAAM,yBAAY,CAAC,qBAAqB,EAAE,CAAC;QAC3C,OAAO,IAAI,EAAE,CAAC;KACf;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;KACjC;AACH,CAAC,CAAA,CAAC,CAAC;AACH,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,sBAAW,CAAC,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,4BAAY,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,sBAAW,CAAC,CAAC;AAI1B,GAAG,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,GAAQ,EAAE,GAAQ,EAAE,IAAS,EAAE,EAAE;IAClD,MAAM,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;IAClC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;QAC1B,KAAK,EAAE;YACL,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,IAAI,EAAE,GAAG,CAAC,IAAI;SACf;KACF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,aAAa,EAAE,CAAC,CAAC;AAC/E,CAAC,CAAC,CAAC;AAEH,kBAAe,GAAG,CAAC","sourcesContent":["import express from \"express\";\nimport indexRouter from \"./modules/core/routes/index.router\";\nimport { ConnectionDB } from \"./modules/core/services/db/db.service\";\nimport mutantRouter from \"./modules/dna-checker/routes/dna-checker.router\";\nimport statsRouter from \"./modules/stats/routes/stats.router\";\n\nconst PORT = process.env.PORT || 3050;\n\nconst app = express();\n\napp.use(express.json());\nconst isInLambda = !!process.env.LAMBDA_TASK_ROOT;\nif (!isInLambda) {\n  app.listen(PORT, () => {\n    // tslint:disable-next-line:no-console\n    console.log(`server started at http://localhost:${PORT}`);\n  });\n}\napp.use(async (req: any, res: any, next: any): Promise<void> => {\n  try {\n    console.log(\"app.ts - getConnectionInstance\");\n    await ConnectionDB.getConnectionInstance();\n    return next();\n  } catch (e) {\n    return res.send(500, e.message);\n  }\n});\napp.use(\"/\", indexRouter);\napp.use(\"/\", mutantRouter);\napp.use(\"/\", statsRouter);\n\n\n\napp.use((err: any, req: any, res: any, next: any) => {\n  const statusCode = err.statusCode;\n  res.status(statusCode).json({\n    error: {\n      data: err.data,\n      message: err.message,\n      name: err.name,\n    },\n  });\n});\n\napp.use((req, res) => {\n  return res.status(404).send({ message: \"Route \" + req.url + \" Not found.\" });\n});\n\nexport default app;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dbd260f4cfd5d15261e77c9ea719891fbc84bfbd","contentHash":"802d261a7a38f24e396228bd50a5f1bd824cc99a111b1eaffbee06eb234018b1"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/routes/index.router.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/routes/index.router.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":27},"end":{"line":7,"column":86}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":41}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":64}},"8":{"start":{"line":17,"column":20},"end":{"line":17,"column":37}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":12,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":13},"end":{"line":15,"column":5}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/routes/index.router.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/routes/index.router.ts"],"names":[],"mappings":";;;;;AAAA,qCAAiC;AACjC,uFAAkE;AAElE,MAAM,WAAW;IAGf;QAFO,WAAM,GAAW,gBAAM,EAAE,CAAC;QAG/B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,0BAAmB,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;CACF;AAED,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;AACtC,kBAAe,WAAW,CAAC,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport indexCoreController from \"../controllers/index.controller\";\n\nclass IndexRouter {\n  public router: Router = Router();\n\n  constructor() {\n    this.config();\n  }\n\n  private config(): void {\n    this.router.get(\"/\", indexCoreController.Health);\n  }\n}\n\nconst indexRouter = new IndexRouter();\nexport default indexRouter.router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3b060b124cc2c0c7392d7f3c7243fa798cb4e4f4","contentHash":"1bae639aea93a0f7b33ed097ac6f584e69358036bbea98ffacf3908cf8c31b6b"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/controllers/index.controller.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/controllers/index.controller.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":23}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":21}},"3":{"start":{"line":9,"column":24},"end":{"line":9,"column":45}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":19},"end":{"line":7,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":0,"2":0,"3":1,"4":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/controllers/index.controller.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/controllers/index.controller.ts"],"names":[],"mappings":";;AAEA,MAAM,eAAe;IAEV,MAAM,CAAC,EAAW,EAAE,EAAY;QACnC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACf,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;CAEJ;AAED,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;AAC9C,kBAAe,eAAe,CAAC","sourcesContent":["import { Request, Response } from 'express';\n\nclass IndexController {\n\n    public Health(rq: Request, rs: Response) {\n        rs.status(200);\n        rs.end('OK');\n    }\n\n}\n\nconst indexController = new IndexController();\nexport default indexController;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"094db4ccc5b919618040ff2f3bc6b790098cfae0","contentHash":"01ef01bf97e22ee28b067e1a12219ad6d9687999de0d41bca4da65e7dc228dc9"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/services/db/db.service.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/services/db/db.service.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"14":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"15":{"start":{"line":14,"column":17},"end":{"line":14,"column":46}},"16":{"start":{"line":15,"column":26},"end":{"line":15,"column":67}},"17":{"start":{"line":16,"column":18},"end":{"line":16,"column":36}},"18":{"start":{"line":19,"column":8},"end":{"line":48,"column":11}},"19":{"start":{"line":20,"column":12},"end":{"line":20,"column":45}},"20":{"start":{"line":21,"column":12},"end":{"line":21,"column":101}},"21":{"start":{"line":22,"column":12},"end":{"line":22,"column":71}},"22":{"start":{"line":23,"column":38},"end":{"line":23,"column":76}},"23":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"24":{"start":{"line":25,"column":40},"end":{"line":25,"column":72}},"25":{"start":{"line":26,"column":16},"end":{"line":32,"column":17}},"26":{"start":{"line":27,"column":20},"end":{"line":27,"column":94}},"27":{"start":{"line":28,"column":20},"end":{"line":28,"column":68}},"28":{"start":{"line":31,"column":20},"end":{"line":31,"column":52}},"29":{"start":{"line":33,"column":16},"end":{"line":33,"column":61}},"30":{"start":{"line":35,"column":12},"end":{"line":46,"column":13}},"31":{"start":{"line":36,"column":16},"end":{"line":45,"column":17}},"32":{"start":{"line":37,"column":20},"end":{"line":37,"column":73}},"33":{"start":{"line":38,"column":20},"end":{"line":38,"column":81}},"34":{"start":{"line":39,"column":20},"end":{"line":39,"column":60}},"35":{"start":{"line":42,"column":20},"end":{"line":42,"column":69}},"36":{"start":{"line":43,"column":20},"end":{"line":43,"column":52}},"37":{"start":{"line":44,"column":20},"end":{"line":44,"column":63}},"38":{"start":{"line":47,"column":12},"end":{"line":47,"column":51}},"39":{"start":{"line":51,"column":8},"end":{"line":53,"column":11}},"40":{"start":{"line":52,"column":12},"end":{"line":52,"column":63}},"41":{"start":{"line":56,"column":8},"end":{"line":58,"column":11}},"42":{"start":{"line":57,"column":12},"end":{"line":57,"column":43}},"43":{"start":{"line":61,"column":8},"end":{"line":63,"column":11}},"44":{"start":{"line":62,"column":12},"end":{"line":62,"column":49}},"45":{"start":{"line":66,"column":8},"end":{"line":69,"column":11}},"46":{"start":{"line":67,"column":12},"end":{"line":67,"column":50}},"47":{"start":{"line":68,"column":12},"end":{"line":68,"column":40}},"48":{"start":{"line":72,"column":8},"end":{"line":74,"column":11}},"49":{"start":{"line":73,"column":12},"end":{"line":73,"column":52}},"50":{"start":{"line":77,"column":8},"end":{"line":102,"column":11}},"51":{"start":{"line":78,"column":12},"end":{"line":78,"column":57}},"52":{"start":{"line":79,"column":12},"end":{"line":101,"column":13}},"53":{"start":{"line":80,"column":16},"end":{"line":80,"column":105}},"54":{"start":{"line":81,"column":16},"end":{"line":97,"column":17}},"55":{"start":{"line":82,"column":20},"end":{"line":90,"column":21}},"56":{"start":{"line":83,"column":43},"end":{"line":83,"column":77}},"57":{"start":{"line":84,"column":24},"end":{"line":84,"column":49}},"58":{"start":{"line":85,"column":24},"end":{"line":85,"column":56}},"59":{"start":{"line":86,"column":24},"end":{"line":86,"column":117}},"60":{"start":{"line":89,"column":24},"end":{"line":89,"column":130}},"61":{"start":{"line":93,"column":20},"end":{"line":93,"column":53}},"62":{"start":{"line":94,"column":20},"end":{"line":96,"column":21}},"63":{"start":{"line":95,"column":24},"end":{"line":95,"column":61}},"64":{"start":{"line":100,"column":16},"end":{"line":100,"column":73}},"65":{"start":{"line":105,"column":8},"end":{"line":105,"column":47}},"66":{"start":{"line":106,"column":8},"end":{"line":106,"column":43}},"67":{"start":{"line":107,"column":8},"end":{"line":107,"column":37}},"68":{"start":{"line":110,"column":8},"end":{"line":136,"column":11}},"69":{"start":{"line":111,"column":12},"end":{"line":135,"column":13}},"70":{"start":{"line":112,"column":27},"end":{"line":126,"column":18}},"71":{"start":{"line":127,"column":16},"end":{"line":127,"column":26}},"72":{"start":{"line":130,"column":16},"end":{"line":130,"column":51}},"73":{"start":{"line":131,"column":16},"end":{"line":134,"column":19}},"74":{"start":{"line":139,"column":0},"end":{"line":139,"column":36}},"75":{"start":{"line":140,"column":0},"end":{"line":140,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":35},"end":{"line":49,"column":5}},"line":18},"8":{"name":"(anonymous_8)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":48,"column":9}},"line":19},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":28},"end":{"line":54,"column":5}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":53,"column":9}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":27},"end":{"line":59,"column":5}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":47},"end":{"line":56,"column":48}},"loc":{"start":{"line":56,"column":60},"end":{"line":58,"column":9}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":41},"end":{"line":64,"column":5}},"line":60},"14":{"name":"(anonymous_14)","decl":{"start":{"line":61,"column":47},"end":{"line":61,"column":48}},"loc":{"start":{"line":61,"column":60},"end":{"line":63,"column":9}},"line":61},"15":{"name":"(anonymous_15)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":42},"end":{"line":70,"column":5}},"line":65},"16":{"name":"(anonymous_16)","decl":{"start":{"line":66,"column":47},"end":{"line":66,"column":48}},"loc":{"start":{"line":66,"column":60},"end":{"line":69,"column":9}},"line":66},"17":{"name":"(anonymous_17)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":44},"end":{"line":75,"column":5}},"line":71},"18":{"name":"(anonymous_18)","decl":{"start":{"line":72,"column":47},"end":{"line":72,"column":48}},"loc":{"start":{"line":72,"column":60},"end":{"line":74,"column":9}},"line":72},"19":{"name":"(anonymous_19)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":29},"end":{"line":103,"column":5}},"line":76},"20":{"name":"(anonymous_20)","decl":{"start":{"line":77,"column":47},"end":{"line":77,"column":48}},"loc":{"start":{"line":77,"column":60},"end":{"line":102,"column":9}},"line":77},"21":{"name":"(anonymous_21)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":30},"end":{"line":108,"column":5}},"line":104},"22":{"name":"(anonymous_22)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":27},"end":{"line":137,"column":5}},"line":109},"23":{"name":"(anonymous_23)","decl":{"start":{"line":110,"column":47},"end":{"line":110,"column":48}},"loc":{"start":{"line":110,"column":60},"end":{"line":136,"column":9}},"line":110}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},{"start":{"line":24,"column":12},"end":{"line":34,"column":13}}],"line":24},"6":{"loc":{"start":{"line":26,"column":16},"end":{"line":32,"column":17}},"type":"if","locations":[{"start":{"line":26,"column":16},"end":{"line":32,"column":17}},{"start":{"line":26,"column":16},"end":{"line":32,"column":17}}],"line":26},"7":{"loc":{"start":{"line":35,"column":12},"end":{"line":46,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":46,"column":13}},{"start":{"line":35,"column":12},"end":{"line":46,"column":13}}],"line":35},"8":{"loc":{"start":{"line":81,"column":16},"end":{"line":97,"column":17}},"type":"if","locations":[{"start":{"line":81,"column":16},"end":{"line":97,"column":17}},{"start":{"line":81,"column":16},"end":{"line":97,"column":17}}],"line":81},"9":{"loc":{"start":{"line":82,"column":20},"end":{"line":90,"column":21}},"type":"if","locations":[{"start":{"line":82,"column":20},"end":{"line":90,"column":21}},{"start":{"line":82,"column":20},"end":{"line":90,"column":21}}],"line":82},"10":{"loc":{"start":{"line":94,"column":20},"end":{"line":96,"column":21}},"type":"if","locations":[{"start":{"line":94,"column":20},"end":{"line":96,"column":21}},{"start":{"line":94,"column":20},"end":{"line":96,"column":21}}],"line":94}},"s":{"0":1,"1":49,"2":10,"3":23,"4":48,"5":48,"6":0,"7":1,"8":1,"9":1,"10":71,"11":23,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":4,"19":4,"20":4,"21":4,"22":4,"23":4,"24":1,"25":1,"26":1,"27":1,"28":0,"29":1,"30":4,"31":4,"32":4,"33":4,"34":3,"35":1,"36":1,"37":1,"38":3,"39":3,"40":3,"41":4,"42":4,"43":1,"44":1,"45":1,"46":1,"47":1,"48":0,"49":0,"50":6,"51":6,"52":6,"53":6,"54":6,"55":6,"56":3,"57":3,"58":3,"59":3,"60":3,"61":0,"62":0,"63":0,"64":0,"65":4,"66":4,"67":4,"68":4,"69":4,"70":4,"71":3,"72":1,"73":1,"74":1,"75":1},"f":{"0":23,"1":49,"2":10,"3":23,"4":48,"5":1,"6":71,"7":4,"8":4,"9":3,"10":3,"11":4,"12":4,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":6,"20":6,"21":4,"22":4,"23":4},"b":{"0":[1,1,1],"1":[39,10],"2":[23,23],"3":[22,49],"4":[23,23],"5":[1,3],"6":[1,0],"7":[4,0],"8":[6,0],"9":[3,3],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/services/db/db.service.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/services/db/db.service.ts"],"names":[],"mappings":"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","sourcesContent":["import \"reflect-metadata\";\nimport { getVariable } from \"../../../../config\";\nimport { DNASequencesEntity } from \"../../entities/sequence.entity\";\nimport {\n  Connection,\n  createConnection,\n  getConnectionManager,\n  QueryRunner,\n} from \"typeorm\";\n\nexport class ConnectionDB {\n  public static async getConnectionInstance(): Promise<ConnectionDB> {\n    ConnectionDB.concurrentCalleds++;\n    console.log(\n      \"CONCURRENT CALLEDS ON START CONNECTION %s\",\n      ConnectionDB.concurrentCalleds\n    );\n    console.log(\"[START] %o\", ConnectionDB.connectionInstance);\n    const connectionManager = await getConnectionManager();\n    if (connectionManager.connections.length > 0) {\n      const aliveConnection = connectionManager.get(\"default\");\n      if (aliveConnection.isConnected) {\n        console.log(\n          \"[INFO] ALIVE-CONNECTION => %o\",\n          aliveConnection.isConnected\n        );\n        ConnectionDB.connection = await aliveConnection;\n      } else {\n        ConnectionDB.restoreSingleton();\n      }\n      console.log(\"SETTED OF EXISTENT CONNECTION\");\n    }\n\n    if (!ConnectionDB.connectionInstance) {\n      try {\n        ConnectionDB.connectionInstance = new ConnectionDB();\n        ConnectionDB.connection = await ConnectionDB.runConnection();\n        console.log(\"FINISH CREATE CONNECTION\");\n      } catch (error) {\n        console.log(\"ERROR ON GET CONNECTION %O\", error);\n        ConnectionDB.restoreSingleton();\n        throw new Error(\"ERROR ON GET CONNECTION\");\n      }\n    }\n\n    return ConnectionDB.connectionInstance;\n  }\n\n  public static async getQueryRunner(): Promise<QueryRunner> {\n    return ConnectionDB.connection.createQueryRunner();\n  }\n\n  public static async getConnection(): Promise<Connection> {\n    return ConnectionDB.connection;\n  }\n\n  public static async startTransaction(queryRunner: QueryRunner): Promise<any> {\n    await queryRunner.startTransaction();\n  }\n\n  public static async commitTransaction(\n    queryRunner: QueryRunner\n  ): Promise<any> {\n    await queryRunner.commitTransaction();\n    await queryRunner.release();\n  }\n\n  public static async rollbackTransaction(\n    queryRunner: QueryRunner\n  ): Promise<any> {\n    await queryRunner.rollbackTransaction();\n  }\n\n  public static async closeConnection(): Promise<any> {\n    console.log(`[DB START CLOSING CONNECTION]`);\n    try {\n      console.log(\n        \"CONCURRENT CALLEDS on CLOSE CONNECTION %s\",\n        ConnectionDB.concurrentCalleds\n      );\n      if (ConnectionDB.concurrentCalleds <= 1) {\n        if (Object.keys(ConnectionDB.connection).length > 0) {\n          const connection = await ConnectionDB.getConnection();\n          await connection.close();\n          ConnectionDB.restoreSingleton();\n          console.log(\n            \"[INFO] CLOSED CONNECTION, CONNECTIONDB => %o\",\n            ConnectionDB.connectionInstance\n          );\n        } else {\n          console.log(\n            \"[WARNING]CANNOT CLOSE CONNECTION OF INEXISTENT ATTRIBUTE, CONNECTIONDB => %o\",\n            ConnectionDB\n          );\n        }\n      } else {\n        ConnectionDB.concurrentCalleds--;\n        if (ConnectionDB.concurrentCalleds === 1) {\n          await ConnectionDB.closeConnection();\n        }\n      }\n    } catch (error) {\n      console.log(\"[ERROR]Error in closeConnection %o\", error);\n    }\n  }\n\n  public static restoreSingleton(): void {\n    ConnectionDB.connectionInstance = null;\n    ConnectionDB.concurrentCalleds = 0;\n    ConnectionDB.connection = {} as Connection;\n  }\n\n  private static connectionInstance: ConnectionDB | null;\n  private static connection: Connection;\n  private static concurrentCalleds = 0;\n  private static async runConnection(): Promise<Connection> {\n    try {\n\n      const rc = await createConnection({\n        acquireTimeout: Number(await getVariable(\"DATABASE_TIMEOUT\")),\n        connectTimeout: Number(await getVariable(\"DATABASE_TIMEOUT\")),\n        database: await getVariable(\"DB_NAME\"),\n        host: await getVariable(\"DB_HOST\"),\n        password: await getVariable(\"DB_PASSWORD\"),\n        port: +(await getVariable(\"DB_PORT\")),\n        username: await getVariable(\"DB_USER\"),\n        entities: [DNASequencesEntity],\n        extra: {\n          connectionLimit: 300,\n        },\n        synchronize: false,\n        type: \"mysql\",\n      });\n      return rc;\n    } catch (error) {\n      console.log(`[ERROR-DB] ${error}`);\n      return Promise.reject({\n        message: \"Could not connect to DB\",\n        error: `${error}`,\n      });\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e37fd07209e020a319f068383e228cf9c1ad325","contentHash":"688de18c870e2158de030173120e88c92896bb5c31519aca1cfb3622f2471a32"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/entities/sequence.entity.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/entities/sequence.entity.ts","statementMap":{"0":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":28}},"2":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"3":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"4":{"start":{"line":4,"column":79},"end":{"line":4,"column":131}},"5":{"start":{"line":5,"column":9},"end":{"line":5,"column":150}},"6":{"start":{"line":5,"column":22},"end":{"line":5,"column":43}},"7":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"8":{"start":{"line":5,"column":81},"end":{"line":5,"column":150}},"9":{"start":{"line":6,"column":4},"end":{"line":6,"column":66}},"10":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"11":{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},"12":{"start":{"line":9,"column":79},"end":{"line":9,"column":109}},"13":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"14":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"15":{"start":{"line":13,"column":18},"end":{"line":13,"column":36}},"16":{"start":{"line":14,"column":25},"end":{"line":15,"column":1}},"17":{"start":{"line":16,"column":0},"end":{"line":19,"column":47}},"18":{"start":{"line":20,"column":0},"end":{"line":23,"column":53}},"19":{"start":{"line":24,"column":0},"end":{"line":27,"column":56}},"20":{"start":{"line":28,"column":0},"end":{"line":30,"column":23}},"21":{"start":{"line":31,"column":0},"end":{"line":31,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":46},"end":{"line":2,"column":47}},"loc":{"start":{"line":2,"column":87},"end":{"line":7,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":46},"end":{"line":8,"column":47}},"loc":{"start":{"line":8,"column":62},"end":{"line":10,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":18},"end":{"line":2,"column":22}},{"start":{"line":2,"column":26},"end":{"line":2,"column":41}},{"start":{"line":2,"column":46},"end":{"line":7,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":42},"end":{"line":3,"column":48}},{"start":{"line":3,"column":51},"end":{"line":3,"column":125}}],"line":3},"2":{"loc":{"start":{"line":3,"column":51},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":67},"end":{"line":3,"column":118}},{"start":{"line":3,"column":121},"end":{"line":3,"column":125}}],"line":3},"3":{"loc":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},{"start":{"line":4,"column":4},"end":{"line":5,"column":150}}],"line":4},"4":{"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":77}},"type":"binary-expr","locations":[{"start":{"line":4,"column":8},"end":{"line":4,"column":35}},{"start":{"line":4,"column":39},"end":{"line":4,"column":77}}],"line":4},"5":{"loc":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},{"start":{"line":5,"column":58},"end":{"line":5,"column":150}}],"line":5},"6":{"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":149}},"type":"binary-expr","locations":[{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},{"start":{"line":5,"column":148},"end":{"line":5,"column":149}}],"line":5},"7":{"loc":{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":94},"end":{"line":5,"column":98}},{"start":{"line":5,"column":101},"end":{"line":5,"column":143}}],"line":5},"8":{"loc":{"start":{"line":5,"column":101},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":109},"end":{"line":5,"column":126}},{"start":{"line":5,"column":129},"end":{"line":5,"column":143}}],"line":5},"9":{"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":62}},"type":"binary-expr","locations":[{"start":{"line":6,"column":11},"end":{"line":6,"column":16}},{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":62}}],"line":6},"10":{"loc":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":8,"column":18},"end":{"line":8,"column":22}},{"start":{"line":8,"column":26},"end":{"line":8,"column":41}},{"start":{"line":8,"column":46},"end":{"line":10,"column":1}}],"line":8},"11":{"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},{"start":{"line":9,"column":4},"end":{"line":9,"column":109}}],"line":9},"12":{"loc":{"start":{"line":9,"column":8},"end":{"line":9,"column":77}},"type":"binary-expr","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":35}},{"start":{"line":9,"column":39},"end":{"line":9,"column":77}}],"line":9}},"s":{"0":1,"1":4,"2":4,"3":4,"4":4,"5":0,"6":0,"7":0,"8":0,"9":4,"10":1,"11":3,"12":3,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"f":{"0":4,"1":3},"b":{"0":[1,1,1],"1":[1,3],"2":[0,3],"3":[4,0],"4":[4,4],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[4,3,0],"10":[1,1,1],"11":[3,0],"12":[3,3]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/entities/sequence.entity.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/core/entities/sequence.entity.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAiE;AAGjE,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAO9B,CAAA;AALC;IADC,gCAAsB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;;8CACjC;AAEnB;IADC,gBAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;;oDACnC;AAExB;IADC,gBAAM,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;;uDACjC;AANjB,kBAAkB;IAD9B,gBAAM,CAAC,WAAW,CAAC;GACP,kBAAkB,CAO9B;AAPY,gDAAkB","sourcesContent":["import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity(\"SEQUENCES\")\nexport class DNASequencesEntity {\n  @PrimaryGeneratedColumn({ name: \"ID\", type: \"int\" })\n  public id?: number;\n  @Column({ name: \"SEQUENCE\", type: \"varchar\", length: 400 })\n  public sequence: string;\n  @Column({ name: \"SUBJECT_TYPE\", type: \"varchar\", length: 1 })\n  public subjectType!: string;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e0dd58c4c6d9b057db569f94de0763fb91a00297","contentHash":"b1b1ece7acd723ee957f2f4544e506ea7d422ba20672a47a6fe7f3d74ef6568d"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/routes/dna-checker.router.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/routes/dna-checker.router.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":33},"end":{"line":7,"column":98}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":41}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},"7":{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":88}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":31}},"10":{"start":{"line":22,"column":21},"end":{"line":22,"column":39}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":12,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":13},"end":{"line":20,"column":5}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/routes/dna-checker.router.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/routes/dna-checker.router.ts"],"names":[],"mappings":";;;;;AAAA,qCAAiC;AACjC,mGAAyE;AAEzE,MAAM,YAAY;IAGhB;QAFO,WAAM,GAAW,gBAAM,EAAE,CAAC;QAG/B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,IAAI;YACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,gCAAoB,CAAC,aAAa,CAAC,CAAC;SACjE;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;CACF;AAED,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AACxC,kBAAe,YAAY,CAAC,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport dNACheckerController from '../controllers/dna-checker.controller';\n\nclass MutantRouter {\n  public router: Router = Router();\n\n  constructor() {\n    this.config();\n  }\n\n  private config(): void {\n    try {\n      this.router.post(\"/mutant\", dNACheckerController.checkisMutant);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst mutantRouter = new MutantRouter();\nexport default mutantRouter.router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"53fd7a8175a17760f3a2d255be877fa7d5fa25ea","contentHash":"b8e268aed99c7fc460b31daba2ad2b50086ddb47b27b8a6cffac57c6baefb754"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"14":{"start":{"line":13,"column":27},"end":{"line":13,"column":64}},"15":{"start":{"line":14,"column":18},"end":{"line":14,"column":59}},"16":{"start":{"line":15,"column":32},"end":{"line":15,"column":107}},"17":{"start":{"line":16,"column":37},"end":{"line":16,"column":117}},"18":{"start":{"line":17,"column":31},"end":{"line":17,"column":105}},"19":{"start":{"line":18,"column":36},"end":{"line":18,"column":115}},"20":{"start":{"line":19,"column":26},"end":{"line":19,"column":72}},"21":{"start":{"line":20,"column":31},"end":{"line":20,"column":74}},"22":{"start":{"line":21,"column":21},"end":{"line":21,"column":65}},"23":{"start":{"line":24,"column":8},"end":{"line":24,"column":32}},"24":{"start":{"line":25,"column":8},"end":{"line":25,"column":33}},"25":{"start":{"line":26,"column":8},"end":{"line":26,"column":82}},"26":{"start":{"line":29,"column":21},"end":{"line":29,"column":31}},"27":{"start":{"line":30,"column":25},"end":{"line":30,"column":45}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":47}},"29":{"start":{"line":34,"column":8},"end":{"line":34,"column":73}},"30":{"start":{"line":35,"column":8},"end":{"line":68,"column":9}},"31":{"start":{"line":35,"column":21},"end":{"line":35,"column":22}},"32":{"start":{"line":36,"column":12},"end":{"line":67,"column":13}},"33":{"start":{"line":36,"column":25},"end":{"line":36,"column":26}},"34":{"start":{"line":39,"column":16},"end":{"line":39,"column":108}},"35":{"start":{"line":40,"column":16},"end":{"line":43,"column":63}},"36":{"start":{"line":47,"column":16},"end":{"line":47,"column":117}},"37":{"start":{"line":48,"column":16},"end":{"line":51,"column":63}},"38":{"start":{"line":54,"column":16},"end":{"line":54,"column":106}},"39":{"start":{"line":55,"column":16},"end":{"line":58,"column":63}},"40":{"start":{"line":62,"column":16},"end":{"line":62,"column":115}},"41":{"start":{"line":63,"column":16},"end":{"line":66,"column":63}},"42":{"start":{"line":71,"column":28},"end":{"line":71,"column":84}},"43":{"start":{"line":72,"column":24},"end":{"line":72,"column":44}},"44":{"start":{"line":73,"column":8},"end":{"line":73,"column":64}},"45":{"start":{"line":74,"column":8},"end":{"line":74,"column":27}},"46":{"start":{"line":77,"column":8},"end":{"line":77,"column":57}},"47":{"start":{"line":78,"column":19},"end":{"line":78,"column":21}},"48":{"start":{"line":79,"column":8},"end":{"line":86,"column":11}},"49":{"start":{"line":80,"column":12},"end":{"line":80,"column":35}},"50":{"start":{"line":81,"column":24},"end":{"line":81,"column":35}},"51":{"start":{"line":82,"column":12},"end":{"line":84,"column":15}},"52":{"start":{"line":83,"column":16},"end":{"line":83,"column":72}},"53":{"start":{"line":85,"column":12},"end":{"line":85,"column":57}},"54":{"start":{"line":89,"column":8},"end":{"line":103,"column":11}},"55":{"start":{"line":90,"column":12},"end":{"line":102,"column":13}},"56":{"start":{"line":91,"column":34},"end":{"line":91,"column":76}},"57":{"start":{"line":92,"column":16},"end":{"line":92,"column":41}},"58":{"start":{"line":93,"column":16},"end":{"line":93,"column":52}},"59":{"start":{"line":94,"column":31},"end":{"line":94,"column":103}},"60":{"start":{"line":95,"column":16},"end":{"line":95,"column":66}},"61":{"start":{"line":96,"column":16},"end":{"line":96,"column":30}},"62":{"start":{"line":99,"column":16},"end":{"line":99,"column":58}},"63":{"start":{"line":100,"column":16},"end":{"line":100,"column":66}},"64":{"start":{"line":101,"column":16},"end":{"line":101,"column":35}},"65":{"start":{"line":106,"column":8},"end":{"line":124,"column":9}},"66":{"start":{"line":108,"column":28},"end":{"line":108,"column":35}},"67":{"start":{"line":109,"column":32},"end":{"line":109,"column":43}},"68":{"start":{"line":110,"column":29},"end":{"line":110,"column":71}},"69":{"start":{"line":112,"column":12},"end":{"line":112,"column":95}},"70":{"start":{"line":113,"column":12},"end":{"line":118,"column":13}},"71":{"start":{"line":114,"column":16},"end":{"line":114,"column":46}},"72":{"start":{"line":117,"column":16},"end":{"line":117,"column":53}},"73":{"start":{"line":121,"column":12},"end":{"line":123,"column":73}},"74":{"start":{"line":127,"column":0},"end":{"line":127,"column":32}},"75":{"start":{"line":128,"column":29},"end":{"line":128,"column":45}},"76":{"start":{"line":129,"column":0},"end":{"line":129,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":18},"end":{"line":27,"column":5}},"line":23},"8":{"name":"(anonymous_8)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":75,"column":5}},"line":28},"9":{"name":"(anonymous_9)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":22},"end":{"line":87,"column":5}},"line":76},"10":{"name":"(anonymous_10)","decl":{"start":{"line":79,"column":20},"end":{"line":79,"column":21}},"loc":{"start":{"line":79,"column":34},"end":{"line":86,"column":9}},"line":79},"11":{"name":"(anonymous_11)","decl":{"start":{"line":82,"column":25},"end":{"line":82,"column":26}},"loc":{"start":{"line":82,"column":44},"end":{"line":84,"column":13}},"line":82},"12":{"name":"(anonymous_12)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":38},"end":{"line":104,"column":5}},"line":88},"13":{"name":"(anonymous_13)","decl":{"start":{"line":89,"column":47},"end":{"line":89,"column":48}},"loc":{"start":{"line":89,"column":60},"end":{"line":103,"column":9}},"line":89},"14":{"name":"(anonymous_14)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":26},"end":{"line":125,"column":5}},"line":105}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":41,"column":20},"end":{"line":43,"column":62}},"type":"cond-expr","locations":[{"start":{"line":42,"column":26},"end":{"line":42,"column":66}},{"start":{"line":43,"column":26},"end":{"line":43,"column":62}}],"line":41},"6":{"loc":{"start":{"line":49,"column":20},"end":{"line":51,"column":62}},"type":"cond-expr","locations":[{"start":{"line":50,"column":26},"end":{"line":50,"column":66}},{"start":{"line":51,"column":26},"end":{"line":51,"column":62}}],"line":49},"7":{"loc":{"start":{"line":56,"column":20},"end":{"line":58,"column":62}},"type":"cond-expr","locations":[{"start":{"line":57,"column":26},"end":{"line":57,"column":66}},{"start":{"line":58,"column":26},"end":{"line":58,"column":62}}],"line":56},"8":{"loc":{"start":{"line":64,"column":20},"end":{"line":66,"column":62}},"type":"cond-expr","locations":[{"start":{"line":65,"column":26},"end":{"line":65,"column":66}},{"start":{"line":66,"column":26},"end":{"line":66,"column":62}}],"line":64},"9":{"loc":{"start":{"line":71,"column":28},"end":{"line":71,"column":84}},"type":"cond-expr","locations":[{"start":{"line":71,"column":72},"end":{"line":71,"column":76}},{"start":{"line":71,"column":79},"end":{"line":71,"column":84}}],"line":71},"10":{"loc":{"start":{"line":112,"column":73},"end":{"line":112,"column":93}},"type":"cond-expr","locations":[{"start":{"line":112,"column":84},"end":{"line":112,"column":87}},{"start":{"line":112,"column":90},"end":{"line":112,"column":93}}],"line":112},"11":{"loc":{"start":{"line":113,"column":12},"end":{"line":118,"column":13}},"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":118,"column":13}},{"start":{"line":113,"column":12},"end":{"line":118,"column":13}}],"line":113},"12":{"loc":{"start":{"line":123,"column":31},"end":{"line":123,"column":69}},"type":"binary-expr","locations":[{"start":{"line":123,"column":31},"end":{"line":123,"column":44}},{"start":{"line":123,"column":48},"end":{"line":123,"column":69}}],"line":123}},"s":{"0":1,"1":2,"2":0,"3":1,"4":2,"5":2,"6":0,"7":0,"8":0,"9":0,"10":3,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":6,"33":6,"34":36,"35":36,"36":36,"37":36,"38":36,"39":36,"40":36,"41":36,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":6,"50":6,"51":6,"52":36,"53":6,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":0,"63":0,"64":0,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":0,"73":0,"74":1,"75":1,"76":1},"f":{"0":1,"1":2,"2":0,"3":1,"4":2,"5":0,"6":3,"7":1,"8":1,"9":1,"10":6,"11":36,"12":1,"13":1,"14":1},"b":{"0":[1,1,1],"1":[2,0],"2":[1,1],"3":[1,2],"4":[1,1],"5":[1,35],"6":[1,35],"7":[1,35],"8":[0,36],"9":[1,0],"10":[1,0],"11":[1,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/dna-checker.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Nucleotide } from \"../models/nucleotide.model\";\nimport { SearchContext } from \"./searching-strategies/context\";\nimport { SearchRightStrategy } from \"./searching-strategies/concrete-strategies/search-right-strategy\";\nimport { SearchRightDownStrategy } from \"./searching-strategies/concrete-strategies/search-rigth-down-strategy\";\nimport { SearchDownStrategy } from \"./searching-strategies/concrete-strategies/search-down-strategy\";\nimport { SearchLeftDownStrategy } from \"./searching-strategies/concrete-strategies/search-left-down-strategy\";\nimport { DNASequencesEntity } from \"../../core/entities/sequence.entity\";\nimport { DnaSequenceService } from \"../services/dna_sequence.service\";\nimport { ConnectionDB } from \"../../core/services/db/db.service\";\nimport { IMutantDNARequestModel } from \"../models/request.model\";\nimport { Request, Response } from \"express\";\n\nexport class DNAChecker {\n  private dnaMatrixFull: Nucleotide[][] = [];\n  private sequenceCounter: number = 0;\n  private context: SearchContext;\n\n  private readonly dnaSequenceService: DnaSequenceService;\n\n  constructor() {\n    this.dnaSequenceService = new DnaSequenceService();\n  }\n\n  private isMutant(dna: string[]): boolean {\n    const size = dna.length;\n    const initTime = new Date().valueOf();\n\n    // Mapeamos el array de entrada en un array 2D para hacer las busquedas en profundidad\n    dNACheckerController.mapDnaMatrix(dna);\n\n    // Verificar secuencia de ADN\n    dNACheckerController.context = new SearchContext(size);\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        /*Realizar comparación con los nucleotidos de la horizontal a la derecha usando la estrategia de\n        busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/\n        dNACheckerController.context.setStrategy(new SearchRightStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparación con los nucleotidos de la diagonal derecha hacia abajo usando la\n        estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de\n        secuencias*/\n        dNACheckerController.context.setStrategy(new SearchRightDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparación con los nucleotidos de la vertical hacia abajo usando la estrategia de\n        busqueda en profundidad, si encuentra una secuencia aumenta el contador de secuencias*/\n        dNACheckerController.context.setStrategy(new SearchDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n\n        /*Realizar comparación con los nucleotidos de la diagonal izquierda hacia abajo usando la\n        estrategia de busqueda en profundidad, si encuentra una secuencia aumenta el contador de\n        secuencias*/\n        dNACheckerController.context.setStrategy(new SearchLeftDownStrategy());\n        dNACheckerController.sequenceCounter =\n          dNACheckerController.context.search(\n            i,\n            j,\n            dNACheckerController.dnaMatrixFull\n          )\n            ? dNACheckerController.sequenceCounter + 1\n            : dNACheckerController.sequenceCounter;\n      }\n    }\n\n    /*no es necesario buscar en otras direcciones puesto que ya toda la matriz fue cubierta\n    Si se encontraron 2 o más secuencias se determina que el DNA es de un mutante*/\n    const isMutantDNA =\n      dNACheckerController.sequenceCounter >= 2 ? true : false;\n\n    const endTime = new Date().valueOf();\n    console.log(\"exec time: \", (endTime - initTime) / 1000);\n    return isMutantDNA;\n  }\n\n  private mapDnaMatrix(dna: string[]) {\n    dNACheckerController.dnaMatrixFull = new Array<Nucleotide[]>();\n    let line: string[] = [];\n\n    dna.forEach((value: string, j: number) => {\n      line = value.split(\"\");\n      const row: Nucleotide[] = new Array<Nucleotide>();\n      line.forEach((nucleotide, i) => {\n        row.push(new Nucleotide(nucleotide));\n      });\n      dNACheckerController.dnaMatrixFull.push(row);\n    });\n  }\n\n  private async saveDNASequence(\n    dna: string,\n    subjectType: string\n  ): Promise<DNASequencesEntity> {\n    try {\n      const dnaEntity = new DNASequencesEntity();\n      dnaEntity.sequence = dna;\n      dnaEntity.subjectType = subjectType;\n\n      const result =\n        await dNACheckerController.dnaSequenceService.saveDNASequence(\n          dnaEntity\n        );\n\n      await ConnectionDB.closeConnection();\n      return result;\n    } catch (e) {\n      console.log(\"saveDNASequence Error: \", e);\n      await ConnectionDB.closeConnection();\n      throw new Error(e);\n    }\n  }\n\n  public checkisMutant(rq: Request, rs: Response) {\n    try {\n      // Leer secuencia de ADN desde el request\n      const request = rq.body as IMutantDNARequestModel;\n      const dnaSequence = request.dna;\n      const isMutant = dNACheckerController.isMutant(dnaSequence);\n      // almacenar en BD\n      dNACheckerController.saveDNASequence(\n        dnaSequence.toString(),\n        isMutant ? \"M\" : \"H\"\n      );\n\n      if (isMutant) {\n        rs.status(200).send(\"200-OK\");\n      } else {\n        rs.status(403).send(\"403-Forbidden\");\n      }\n    } catch (error) {\n      return rs\n        .status(500)\n        .send({ error: error.message || JSON.stringify(error) });\n    }\n  }\n}\n\nconst dNACheckerController = new DNAChecker();\nexport default dNACheckerController;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e2daf745178f6dd59c0558245112c2fc75895b25","contentHash":"1ca60fe29b06ccfec866d8bfc0a49b71656cf0e9735ad23e9847e9ec546101ce"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/models/nucleotide.model.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/models/nucleotide.model.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":27}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":26}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":30}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":26}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":26}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":30}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"11":{"start":{"line":30,"column":8},"end":{"line":30,"column":29}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":27}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":35}},"14":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"15":{"start":{"line":42,"column":8},"end":{"line":42,"column":33}},"16":{"start":{"line":45,"column":0},"end":{"line":45,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":23},"end":{"line":16,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":15},"end":{"line":19,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":15},"end":{"line":22,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":19},"end":{"line":25,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":14},"end":{"line":28,"column":5}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":18},"end":{"line":31,"column":5}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":20},"end":{"line":34,"column":5}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":28},"end":{"line":37,"column":5}},"line":35},"8":{"name":"(anonymous_8)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":18},"end":{"line":40,"column":5}},"line":38},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":26},"end":{"line":43,"column":5}},"line":41}},"branchMap":{},"s":{"0":1,"1":1,"2":196,"3":196,"4":196,"5":196,"6":196,"7":160,"8":21,"9":11,"10":20,"11":11,"12":27,"13":18,"14":22,"15":13,"16":1},"f":{"0":196,"1":160,"2":21,"3":11,"4":20,"5":11,"6":27,"7":18,"8":22,"9":13},"b":{},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/models/nucleotide.model.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/models/nucleotide.model.ts"],"names":[],"mappings":";;;AAAA;;;;EAIE;AACF,MAAa,UAAU;IAOrB,YAAY,KAAa;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,QAAQ,CAAC,KAAc;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,YAAY,CAAC,SAAkB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAEM,OAAO,CAAC,IAAa;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEM,WAAW,CAAC,QAAiB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;CACF;AAlDD,gCAkDC","sourcesContent":["/*\n    Esta clase permite identificar cada nucleótido de la sequencia. Los valores right: derecha, rightDown: diagonal derecha\n    down: abajo, leftDown: diagonal izquierda, permiten verificar si las posiciones vecinas ya fueron analizadas(comparadas),\n    esto permite evitar realizar validaciones innecesarias o repetidas\n*/\nexport class Nucleotide {\n  private value: string;\n  private right: boolean;\n  private rightDown: boolean;\n  private down: boolean;\n  private leftDown: boolean;\n\n  constructor(value: string) {\n    this.value = value;\n    this.right = false;\n    this.rightDown = false;\n    this.down = false;\n    this.leftDown = false;\n  }\n\n  public getValue(): string {\n    return this.value;\n  }\n\n  public getRight(): boolean {\n    return this.right;\n  }\n\n  public getRightDown(): boolean {\n    return this.rightDown;\n  }\n\n  public getDown(): boolean {\n    return this.down;\n  }\n\n  public getLeftDown(): boolean {\n    return this.leftDown;\n  }\n\n  public setRight(right: boolean) {\n    this.right = right;\n  }\n\n  public setRightDown(rightDown: boolean) {\n    this.rightDown = rightDown;\n  }\n\n  public setDown(down: boolean) {\n    this.down = down;\n  }\n\n  public setLeftDown(leftDown: boolean) {\n    this.leftDown = leftDown;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"30081c867233577c3a095cac6217010397daf097","contentHash":"9d15c6ccb60a6a91337b46a09066a202a3f701a59f2750deca3d1fb2906d7ead"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/context.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/context.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":33}},"4":{"start":{"line":15,"column":23},"end":{"line":15,"column":71}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":22}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"7":{"start":{"line":20,"column":22},"end":{"line":20,"column":42}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":22},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":26},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":28},"end":{"line":17,"column":5}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":3,"3":145,"4":145,"5":145,"6":1,"7":1,"8":1},"f":{"0":3,"1":145,"2":145},"b":{},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/context.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/context.ts"],"names":[],"mappings":";;;AAGA;;aAEa;AAEb,MAAa,aAAa;IAIxB,YAAY,IAAY;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEM,WAAW,CAAC,QAAyB;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAEM,MAAM,CAAC,CAAS,EAAE,CAAS,EAAE,SAAyB;QAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAChE,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAhBD,sCAgBC;AAED,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;AAC3C,kBAAe,aAAa,CAAC","sourcesContent":["import { Nucleotide } from \"../../models/nucleotide.model\";\nimport { ISearchStrategy } from \"./i-strategy\";\n\n/* Se utiliza el patrón Strategy para crear los algoritmos de busqueda en profundidad, a futuro si\nse requiere buscar una secuencia de ADN particular (no mutante), se pueden añadir nuevos algoritmos\nde busqueda*/\n\nexport class SearchContext {\n  private strategy: ISearchStrategy;\n  private size: number;\n\n  constructor(size: number) {\n    this.size = size;\n  }\n\n  public setStrategy(strategy: ISearchStrategy) {\n    this.strategy = strategy;\n  }\n\n  public search(i: number, j: number, dnaMatrix: Nucleotide[][]): boolean {\n    const result = this.strategy.search(i, j, this.size, dnaMatrix);\n    return result;\n  }\n}\n\nconst searchContext = new SearchContext(0);\nexport default searchContext;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d5cb23c0569124a5857d81b45be067db14a614a4","contentHash":"700135d203a5f151261b1d8ed499c6aee7927b87e767e0593a25e813fa5ea7f3"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-right-strategy.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-right-strategy.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":28}},"4":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"5":{"start":{"line":11,"column":12},"end":{"line":11,"column":39}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":36}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"8":{"start":{"line":17,"column":8},"end":{"line":21,"column":9}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":32}},"10":{"start":{"line":19,"column":12},"end":{"line":19,"column":52}},"11":{"start":{"line":20,"column":12},"end":{"line":20,"column":73}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":30}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":21}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":50}},"16":{"start":{"line":28,"column":28},"end":{"line":28,"column":53}},"17":{"start":{"line":29,"column":0},"end":{"line":29,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":8,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":34},"end":{"line":15,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":16},"end":{"line":25,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},{"start":{"line":10,"column":8},"end":{"line":13,"column":9}}],"line":10},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":69}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":21}},{"start":{"line":10,"column":25},"end":{"line":10,"column":38}},{"start":{"line":10,"column":42},"end":{"line":10,"column":69}}],"line":10},"2":{"loc":{"start":{"line":17,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":21,"column":9}},{"start":{"line":17,"column":8},"end":{"line":21,"column":9}}],"line":17},"3":{"loc":{"start":{"line":20,"column":19},"end":{"line":20,"column":72}},"type":"cond-expr","locations":[{"start":{"line":20,"column":45},"end":{"line":20,"column":49}},{"start":{"line":20,"column":52},"end":{"line":20,"column":72}}],"line":20}},"s":{"0":1,"1":1,"2":38,"3":38,"4":39,"5":19,"6":19,"7":20,"8":27,"9":11,"10":11,"11":11,"12":16,"13":16,"14":16,"15":1,"16":1,"17":1},"f":{"0":38,"1":39,"2":27},"b":{"0":[19,20],"1":[39,39,21],"2":[11,16],"3":[3,8]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-right-strategy.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-right-strategy.ts"],"names":[],"mappings":";;;AAGA,MAAa,mBAAmB;IAAhC;QACU,iBAAY,GAAW,CAAC,CAAC;QACzB,cAAS,GAAmB,EAAE,CAAC;IA4BzC,CAAC;IA1BC,MAAM,CACJ,CAAS,EACT,CAAS,EACT,IAAY,EACZ,SAAyB;QAEzB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC7D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,CAAS,EAAE,CAAS;QACxB,IACE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,EACvE;YACA,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAExC,OAAO,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9D;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AA9BD,kDA8BC;AAED,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;AACtD,kBAAe,mBAAmB,CAAC","sourcesContent":["import { Nucleotide } from \"../../../models/nucleotide.model\";\nimport { ISearchStrategy } from \"../i-strategy\";\n\nexport class SearchRightStrategy implements ISearchStrategy {\n  private matchCounter: number = 1;\n  private dnaMatrix: Nucleotide[][] = [];\n\n  search(\n    i: number,\n    j: number,\n    size: number,\n    dnaMatrix: Nucleotide[][]\n  ): boolean {\n    if (i <= size && j <= size - 4 && !dnaMatrix[i][j].getRight()) {\n      this.dnaMatrix = dnaMatrix;\n      return this.check(i, j);\n    }\n    return false;\n  }\n\n  check(i: number, j: number): boolean {\n    if (\n      this.dnaMatrix[i][j].getValue() === this.dnaMatrix[i][j + 1].getValue()\n    ) {\n      this.matchCounter++;\n      this.dnaMatrix[i][j + 1].setRight(true);\n\n      return this.matchCounter === 4 ? true : this.check(i, j + 1);\n    }\n    this.dnaMatrix[i][j].setRight(false);\n    this.matchCounter = 1;\n    return false;\n  }\n}\n\nconst searchRightStrategy = new SearchRightStrategy();\nexport default searchRightStrategy;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d531a92e7286a2542462060f968858594fe865a7","contentHash":"35591e2a5a1b8d362055a78232680262aef0bda9fa89ff90e285e6596306b90e"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-rigth-down-strategy.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-rigth-down-strategy.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":28}},"4":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"5":{"start":{"line":11,"column":12},"end":{"line":11,"column":39}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":36}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"8":{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},"9":{"start":{"line":19,"column":12},"end":{"line":19,"column":32}},"10":{"start":{"line":20,"column":12},"end":{"line":20,"column":56}},"11":{"start":{"line":21,"column":12},"end":{"line":21,"column":77}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":49}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":30}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":58}},"16":{"start":{"line":29,"column":24},"end":{"line":29,"column":53}},"17":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":8,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":34},"end":{"line":15,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":16},"end":{"line":26,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},{"start":{"line":10,"column":8},"end":{"line":13,"column":9}}],"line":10},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":77}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":25}},{"start":{"line":10,"column":29},"end":{"line":10,"column":42}},{"start":{"line":10,"column":46},"end":{"line":10,"column":77}}],"line":10},"2":{"loc":{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},{"start":{"line":17,"column":8},"end":{"line":22,"column":9}}],"line":17},"3":{"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":76}},"type":"cond-expr","locations":[{"start":{"line":21,"column":45},"end":{"line":21,"column":49}},{"start":{"line":21,"column":52},"end":{"line":21,"column":76}}],"line":21}},"s":{"0":1,"1":1,"2":37,"3":37,"4":38,"5":9,"6":9,"7":29,"8":18,"9":11,"10":11,"11":11,"12":7,"13":7,"14":7,"15":1,"16":1,"17":1},"f":{"0":37,"1":38,"2":18},"b":{"0":[9,29],"1":[38,20,11],"2":[11,7],"3":[2,9]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-rigth-down-strategy.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-rigth-down-strategy.ts"],"names":[],"mappings":";;;AAGA,MAAa,uBAAuB;IAApC;QACU,iBAAY,GAAW,CAAC,CAAC;QACzB,cAAS,GAAmB,EAAE,CAAC;IA6BzC,CAAC;IA3BC,MAAM,CACJ,CAAS,EACT,CAAS,EACT,IAAY,EACZ,SAAyB;QAEzB,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE;YACrE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,CAAS,EAAE,CAAS;QACxB,IACE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;YAC/B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,EACvC;YACA,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAE5C,OAAO,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;SAClE;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AA/BD,0DA+BC;AAED,MAAM,eAAe,GAAG,IAAI,uBAAuB,EAAE,CAAC;AACtD,kBAAe,eAAe,CAAC","sourcesContent":["import { Nucleotide } from \"../../../models/nucleotide.model\";\nimport { ISearchStrategy } from \"../i-strategy\";\n\nexport class SearchRightDownStrategy implements ISearchStrategy {\n  private matchCounter: number = 1;\n  private dnaMatrix: Nucleotide[][] = [];\n\n  search(\n    i: number,\n    j: number,\n    size: number,\n    dnaMatrix: Nucleotide[][]\n  ): boolean {\n    if (i <= size - 4 && j <= size - 4 && !dnaMatrix[i][j].getRightDown()) {\n      this.dnaMatrix = dnaMatrix;\n      return this.check(i, j);\n    }\n    return false;\n  }\n\n  check(i: number, j: number): boolean {\n    if (\n      this.dnaMatrix[i][j].getValue() ===\n      this.dnaMatrix[i + 1][j + 1].getValue()\n    ) {\n      this.matchCounter++;\n      this.dnaMatrix[i][j + 1].setRightDown(true);\n\n      return this.matchCounter === 4 ? true : this.check(i + 1, j + 1);\n    }\n    this.dnaMatrix[i][j].setRightDown(false);\n    this.matchCounter = 1;\n    return false;\n  }\n}\n\nconst searchRightDown = new SearchRightDownStrategy();\nexport default searchRightDown;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9de1a1cd8658f38d6b4827c3653d08cf7e361205","contentHash":"5b4e20443325c3d4aa13f606f2af92efae27caea61283f9313e9caa6ef9401e6"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-down-strategy.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-down-strategy.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":28}},"4":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"5":{"start":{"line":11,"column":12},"end":{"line":11,"column":39}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":36}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"8":{"start":{"line":17,"column":8},"end":{"line":21,"column":9}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":32}},"10":{"start":{"line":19,"column":12},"end":{"line":19,"column":51}},"11":{"start":{"line":20,"column":12},"end":{"line":20,"column":73}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":44}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":30}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":21}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":48}},"16":{"start":{"line":28,"column":27},"end":{"line":28,"column":51}},"17":{"start":{"line":29,"column":0},"end":{"line":29,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":8,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":34},"end":{"line":15,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":16},"end":{"line":25,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},{"start":{"line":10,"column":8},"end":{"line":13,"column":9}}],"line":10},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":68}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":25}},{"start":{"line":10,"column":29},"end":{"line":10,"column":38}},{"start":{"line":10,"column":42},"end":{"line":10,"column":68}}],"line":10},"2":{"loc":{"start":{"line":17,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":21,"column":9}},{"start":{"line":17,"column":8},"end":{"line":21,"column":9}}],"line":17},"3":{"loc":{"start":{"line":20,"column":19},"end":{"line":20,"column":72}},"type":"cond-expr","locations":[{"start":{"line":20,"column":45},"end":{"line":20,"column":49}},{"start":{"line":20,"column":52},"end":{"line":20,"column":72}}],"line":20}},"s":{"0":1,"1":1,"2":37,"3":37,"4":38,"5":14,"6":14,"7":24,"8":22,"9":10,"10":10,"11":10,"12":12,"13":12,"14":12,"15":1,"16":1,"17":1},"f":{"0":37,"1":38,"2":22},"b":{"0":[14,24],"1":[38,20,20],"2":[10,12],"3":[2,8]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-down-strategy.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-down-strategy.ts"],"names":[],"mappings":";;;AAGA,MAAa,kBAAkB;IAA/B;QACU,iBAAY,GAAW,CAAC,CAAC;QACzB,cAAS,GAAmB,EAAE,CAAC;IA4BzC,CAAC;IA1BC,MAAM,CACJ,CAAS,EACT,CAAS,EACT,IAAY,EACZ,SAAyB;QAEzB,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE;YAC5D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,CAAS,EAAE,CAAS;QACxB,IACE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EACvE;YACA,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9D;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AA9BD,gDA8BC;AAED,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;AACpD,kBAAe,kBAAkB,CAAC","sourcesContent":["import { Nucleotide } from \"../../../models/nucleotide.model\";\nimport { ISearchStrategy } from \"../i-strategy\";\n\nexport class SearchDownStrategy implements ISearchStrategy {\n  private matchCounter: number = 1;\n  private dnaMatrix: Nucleotide[][] = [];\n\n  search(\n    i: number,\n    j: number,\n    size: number,\n    dnaMatrix: Nucleotide[][]\n  ): boolean {\n    if (i <= size - 4 && j <= size && !dnaMatrix[i][j].getDown()) {\n      this.dnaMatrix = dnaMatrix;\n      return this.check(i, j);\n    }\n    return false;\n  }\n\n  check(i: number, j: number): boolean {\n    if (\n      this.dnaMatrix[i][j].getValue() === this.dnaMatrix[i + 1][j].getValue()\n    ) {\n      this.matchCounter++;\n      this.dnaMatrix[i][j + 1].setDown(true);\n\n      return this.matchCounter === 4 ? true : this.check(i + 1, j);\n    }\n    this.dnaMatrix[i][j].setDown(false);\n    this.matchCounter = 1;\n    return false;\n  }\n}\n\nconst searchDownStrategy = new SearchDownStrategy();\nexport default searchDownStrategy;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"827c76ae4b2e1e459c6df5089f51cccc022f28cf","contentHash":"5e621a8dbf967c16273dab0a2c6d3162a4f11dc1f624ce1c37b6ab6af01b7e70"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-left-down-strategy.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-left-down-strategy.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":28}},"4":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"5":{"start":{"line":11,"column":12},"end":{"line":11,"column":39}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":36}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"8":{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},"9":{"start":{"line":19,"column":12},"end":{"line":19,"column":32}},"10":{"start":{"line":20,"column":12},"end":{"line":20,"column":55}},"11":{"start":{"line":21,"column":12},"end":{"line":21,"column":77}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":48}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":30}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":56}},"16":{"start":{"line":29,"column":23},"end":{"line":29,"column":51}},"17":{"start":{"line":30,"column":0},"end":{"line":30,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":8,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":34},"end":{"line":15,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":16},"end":{"line":26,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},{"start":{"line":10,"column":8},"end":{"line":13,"column":9}}],"line":10},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":69}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":25}},{"start":{"line":10,"column":29},"end":{"line":10,"column":35}},{"start":{"line":10,"column":39},"end":{"line":10,"column":69}}],"line":10},"2":{"loc":{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},{"start":{"line":17,"column":8},"end":{"line":22,"column":9}}],"line":17},"3":{"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":76}},"type":"cond-expr","locations":[{"start":{"line":21,"column":45},"end":{"line":21,"column":49}},{"start":{"line":21,"column":52},"end":{"line":21,"column":76}}],"line":21}},"s":{"0":1,"1":1,"2":37,"3":37,"4":38,"5":11,"6":11,"7":27,"8":13,"9":3,"10":3,"11":3,"12":10,"13":10,"14":10,"15":1,"16":1,"17":1},"f":{"0":37,"1":38,"2":13},"b":{"0":[11,27],"1":[38,20,11],"2":[3,10],"3":[1,2]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-left-down-strategy.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/controllers/searching-strategies/concrete-strategies/search-left-down-strategy.ts"],"names":[],"mappings":";;;AAGA,MAAa,sBAAsB;IAAnC;QACU,iBAAY,GAAW,CAAC,CAAC;QACzB,cAAS,GAAmB,EAAE,CAAC;IA6BzC,CAAC;IA3BC,MAAM,CACJ,CAAS,EACT,CAAS,EACT,IAAY,EACZ,SAAyB;QAEzB,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE;YAC7D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,CAAS,EAAE,CAAS;QACxB,IACE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;YAC/B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,EACvC;YACA,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAE3C,OAAO,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;SAClE;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AA/BD,wDA+BC;AAED,MAAM,cAAc,GAAG,IAAI,sBAAsB,EAAE,CAAC;AACpD,kBAAe,cAAc,CAAC","sourcesContent":["import { Nucleotide } from \"../../../models/nucleotide.model\";\nimport { ISearchStrategy } from \"../i-strategy\";\n\nexport class SearchLeftDownStrategy implements ISearchStrategy {\n  private matchCounter: number = 1;\n  private dnaMatrix: Nucleotide[][] = [];\n\n  search(\n    i: number,\n    j: number,\n    size: number,\n    dnaMatrix: Nucleotide[][]\n  ): boolean {\n    if (i <= size - 4 && j >= 3 && !dnaMatrix[i][j].getLeftDown()) {\n      this.dnaMatrix = dnaMatrix;\n      return this.check(i, j);\n    }\n    return false;\n  }\n\n  check(i: number, j: number): boolean {\n    if (\n      this.dnaMatrix[i][j].getValue() ===\n      this.dnaMatrix[i + 1][j - 1].getValue()\n    ) {\n      this.matchCounter++;\n      this.dnaMatrix[i][j - 1].setLeftDown(true);\n\n      return this.matchCounter === 4 ? true : this.check(i + 1, j - 1);\n    }\n    this.dnaMatrix[i][j].setLeftDown(false);\n    this.matchCounter = 1;\n    return false;\n  }\n}\n\nconst searchLeftDown = new SearchLeftDownStrategy();\nexport default searchLeftDown;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ec6c7bb1c6ab994c35921cf61f2e74819f2f1785","contentHash":"7d703ec3b5fcaae333a235cf97a8009e4fb5897310000202993e0143fa75cde7"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/services/dna_sequence.service.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/services/dna_sequence.service.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"14":{"start":{"line":13,"column":26},"end":{"line":13,"column":72}},"15":{"start":{"line":14,"column":21},"end":{"line":14,"column":65}},"16":{"start":{"line":17,"column":8},"end":{"line":29,"column":11}},"17":{"start":{"line":18,"column":32},"end":{"line":18,"column":80}},"18":{"start":{"line":19,"column":12},"end":{"line":28,"column":13}},"19":{"start":{"line":20,"column":16},"end":{"line":20,"column":78}},"20":{"start":{"line":21,"column":41},"end":{"line":21,"column":122}},"21":{"start":{"line":22,"column":16},"end":{"line":22,"column":79}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":40}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":81}},"24":{"start":{"line":27,"column":16},"end":{"line":27,"column":65}},"25":{"start":{"line":32,"column":0},"end":{"line":32,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":33},"end":{"line":30,"column":5}},"line":16},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":47},"end":{"line":17,"column":48}},"loc":{"start":{"line":17,"column":60},"end":{"line":29,"column":9}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":4,"2":0,"3":1,"4":4,"5":4,"6":0,"7":0,"8":0,"9":0,"10":5,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":1},"f":{"0":1,"1":4,"2":0,"3":1,"4":4,"5":0,"6":5,"7":1,"8":1},"b":{"0":[1,1,1],"1":[4,0],"2":[1,1],"3":[1,4],"4":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/services/dna_sequence.service.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/dna-checker/services/dna_sequence.service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yEAAyE;AACzE,kEAAiE;AAEjE,MAAa,kBAAkB;IAChB,eAAe,CAC1B,WAA+B;;YAE/B,MAAM,WAAW,GAAG,MAAM,yBAAY,CAAC,cAAc,EAAE,CAAC;YACxD,IAAI;gBACF,MAAM,yBAAY,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;gBACjD,MAAM,gBAAgB,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,IAAI,CACrD,oCAAkB,EAClB,WAAW,CACZ,CAAC;gBACF,MAAM,yBAAY,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;gBAClD,OAAO,gBAAgB,CAAC;aACzB;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,yBAAY,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;gBACpD,MAAM,IAAI,KAAK,CAAC,2BAA2B,GAAG,CAAC,CAAC,CAAC;aAClD;QACH,CAAC;KAAA;CACF;AAlBD,gDAkBC","sourcesContent":["import { DNASequencesEntity } from \"../../core/entities/sequence.entity\";\nimport { ConnectionDB } from \"../../core/services/db/db.service\";\n\nexport class DnaSequenceService {\n  public async saveDNASequence(\n    dnaSequence: DNASequencesEntity\n  ): Promise<DNASequencesEntity> {\n    const queryRunner = await ConnectionDB.getQueryRunner();\n    try {\n      await ConnectionDB.startTransaction(queryRunner);\n      const dnaSequenceSaved = await queryRunner.manager.save(\n        DNASequencesEntity,\n        dnaSequence\n      );\n      await ConnectionDB.commitTransaction(queryRunner);\n      return dnaSequenceSaved;\n    } catch (e) {\n      await ConnectionDB.rollbackTransaction(queryRunner);\n      throw new Error(\"Error saving DNA Sequence\" + e);\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2834e5d1347c5f7cfee86f48cdcda44be84ff0d6","contentHash":"000c258871707cc1ff5a3f83f469212ab98ffe0aadcab6d38f3b93238e487ffb"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/routes/stats.router.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/routes/stats.router.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":27},"end":{"line":7,"column":86}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":41}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},"7":{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":75}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":31}},"10":{"start":{"line":22,"column":20},"end":{"line":22,"column":37}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":12,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":13},"end":{"line":20,"column":5}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/routes/stats.router.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/routes/stats.router.ts"],"names":[],"mappings":";;;;;AAAA,qCAAiC;AACjC,uFAA8D;AAE9D,MAAM,WAAW;IAGf;QAFO,WAAM,GAAW,gBAAM,EAAE,CAAC;QAG/B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,IAAI;YACF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,0BAAe,CAAC,QAAQ,CAAC,CAAC;SACrD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;CACF;AAED,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;AACtC,kBAAe,WAAW,CAAC,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport statsController from \"../controllers/stats.controller\";\n\nclass StatsRouter {\n  public router: Router = Router();\n\n  constructor() {\n    this.config();\n  }\n\n  private config(): void {\n    try {\n      this.router.get(\"/stats\", statsController.getStats);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst statsRouter = new StatsRouter();\nexport default statsRouter.router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"30b3c729e86260cf797f946850fae8a4d93b9588","contentHash":"7b17d7107cd1796f3d7876cd8997bf63deab8f66d7225b09df77aff76e25ddd9"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/controllers/stats.controller.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/controllers/stats.controller.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}},"14":{"start":{"line":13,"column":21},"end":{"line":13,"column":65}},"15":{"start":{"line":14,"column":24},"end":{"line":14,"column":60}},"16":{"start":{"line":17,"column":8},"end":{"line":17,"column":63}},"17":{"start":{"line":20,"column":8},"end":{"line":54,"column":11}},"18":{"start":{"line":25,"column":12},"end":{"line":53,"column":13}},"19":{"start":{"line":26,"column":16},"end":{"line":28,"column":26}},"20":{"start":{"line":29,"column":16},"end":{"line":31,"column":26}},"21":{"start":{"line":32,"column":16},"end":{"line":38,"column":28}},"22":{"start":{"line":39,"column":16},"end":{"line":39,"column":66}},"23":{"start":{"line":40,"column":31},"end":{"line":45,"column":41}},"24":{"start":{"line":46,"column":16},"end":{"line":46,"column":67}},"25":{"start":{"line":49,"column":16},"end":{"line":49,"column":66}},"26":{"start":{"line":50,"column":16},"end":{"line":52,"column":77}},"27":{"start":{"line":57,"column":0},"end":{"line":57,"column":22}},"28":{"start":{"line":58,"column":24},"end":{"line":58,"column":35}},"29":{"start":{"line":59,"column":0},"end":{"line":59,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":18,"column":5}},"line":16},"8":{"name":"(anonymous_8)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":21},"end":{"line":55,"column":5}},"line":19},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":47},"end":{"line":20,"column":48}},"loc":{"start":{"line":20,"column":60},"end":{"line":54,"column":9}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":27,"column":20},"end":{"line":28,"column":25}},"type":"binary-expr","locations":[{"start":{"line":27,"column":21},"end":{"line":27,"column":87}},{"start":{"line":28,"column":24},"end":{"line":28,"column":25}}],"line":27},"6":{"loc":{"start":{"line":30,"column":20},"end":{"line":31,"column":25}},"type":"binary-expr","locations":[{"start":{"line":30,"column":21},"end":{"line":30,"column":87}},{"start":{"line":31,"column":24},"end":{"line":31,"column":25}}],"line":30},"7":{"loc":{"start":{"line":33,"column":20},"end":{"line":38,"column":27}},"type":"cond-expr","locations":[{"start":{"line":34,"column":26},"end":{"line":37,"column":65}},{"start":{"line":38,"column":26},"end":{"line":38,"column":27}}],"line":33},"8":{"loc":{"start":{"line":35,"column":29},"end":{"line":37,"column":64}},"type":"cond-expr","locations":[{"start":{"line":36,"column":34},"end":{"line":36,"column":63}},{"start":{"line":37,"column":34},"end":{"line":37,"column":64}}],"line":35},"9":{"loc":{"start":{"line":52,"column":35},"end":{"line":52,"column":73}},"type":"binary-expr","locations":[{"start":{"line":52,"column":35},"end":{"line":52,"column":48}},{"start":{"line":52,"column":52},"end":{"line":52,"column":73}}],"line":52}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":1,"28":1,"29":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,0],"6":[1,0],"7":[1,0],"8":[1,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/controllers/stats.controller.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/controllers/stats.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,kEAAiE;AACjE,6DAAyD;AAGzD,MAAa,KAAK;IAOhB;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,4BAAY,EAAE,CAAC;IACzC,CAAC;IAEY,QAAQ,CAAC,EAAW,EAAE,EAAY;;YAC7C;;;yFAG6E;YAC7E,IAAI;gBACF,eAAe,CAAC,cAAc;oBAC5B,CAAC,MAAM,eAAe,CAAC,YAAY,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;wBACpE,CAAC,CAAC;gBACJ,eAAe,CAAC,aAAa;oBAC3B,CAAC,MAAM,eAAe,CAAC,YAAY,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;wBACpE,CAAC,CAAC;gBACJ,eAAe,CAAC,KAAK;oBACnB,eAAe,CAAC,cAAc,GAAG,CAAC;wBAChC,CAAC,CAAC,eAAe,CAAC,cAAc;4BAC9B,CAAC,eAAe,CAAC,aAAa,GAAG,CAAC;gCAChC,CAAC,CAAC,eAAe,CAAC,aAAa;gCAC/B,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC;wBACrC,CAAC,CAAC,CAAC,CAAC;gBAER,MAAM,yBAAY,CAAC,eAAe,EAAE,CAAC;gBAErC,MAAM,MAAM,GACV,sBAAsB;oBACtB,eAAe,CAAC,cAAc;oBAC9B,uBAAuB;oBACvB,eAAe,CAAC,aAAa;oBAC7B,aAAa;oBACb,eAAe,CAAC,KAAK,CAAC;gBAExB,OAAO,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC;aACpD;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,yBAAY,CAAC,eAAe,EAAE,CAAC;gBACrC,OAAO,EAAE;qBACN,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC5D;QACH,CAAC;KAAA;CACF;AAjDD,sBAiDC;AAED,MAAM,eAAe,GAAG,IAAI,KAAK,EAAE,CAAC;AACpC,kBAAe,eAAe,CAAC","sourcesContent":["import { ConnectionDB } from \"../../core/services/db/db.service\";\nimport { StatsService } from \"../services/stats.service\";\nimport { Request, Response } from \"express\";\n\nexport class Stats {\n  private countMutantDna: number;\n  private countHumanDna: number;\n  private ratio: number;\n\n  public statsService: StatsService;\n\n  constructor() {\n    this.statsService = new StatsService();\n  }\n\n  public async getStats(rq: Request, rs: Response) {\n    /* Contar los registros en base de datos de las secuencias de ADN de mutantes y humanos\n    Si la cantidad de mutantes es cero, el ratio es cero\n    Si la cantidad de humanos es cero, el ratio es 1 o la cantidad de mutantes / la cantidad de mutantes\n    de lo contrario el ratio es la cantidad de mutantes/la cantidad de humanos */\n    try {\n      statsController.countMutantDna =\n        (await statsController.statsService.countDNASequencesBySubject(\"M\")) ||\n        0;\n      statsController.countHumanDna =\n        (await statsController.statsService.countDNASequencesBySubject(\"H\")) ||\n        0;\n      statsController.ratio =\n        statsController.countMutantDna > 0\n          ? statsController.countMutantDna /\n            (statsController.countHumanDna > 0\n              ? statsController.countHumanDna\n              : statsController.countMutantDna)\n          : 0;\n\n      await ConnectionDB.closeConnection();\n\n      const result =\n        '\"count_mutant_dna\": ' +\n        statsController.countMutantDna +\n        ', \"count_human_dna\": ' +\n        statsController.countHumanDna +\n        ', \"ratio\": ' +\n        statsController.ratio;\n\n      return rs.status(200).send(\"Stats are: \" + result);\n    } catch (error) {\n      await ConnectionDB.closeConnection();\n      return rs\n        .status(500)\n        .send({ error: error.message || JSON.stringify(error) });\n    }\n  }\n}\n\nconst statsController = new Stats();\nexport default statsController;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5d0b0ec0dd55015db865d8396314f0702ff0e3aa","contentHash":"7d81ad114b8c4cc1ffd9a4629f900f9badb5b46ff2412bb33a1417c19524942a"},"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/services/stats.service.ts":{"path":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/services/stats.service.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"14":{"start":{"line":13,"column":21},"end":{"line":13,"column":65}},"15":{"start":{"line":14,"column":26},"end":{"line":14,"column":72}},"16":{"start":{"line":17,"column":8},"end":{"line":30,"column":11}},"17":{"start":{"line":18,"column":12},"end":{"line":29,"column":13}},"18":{"start":{"line":19,"column":36},"end":{"line":19,"column":84}},"19":{"start":{"line":21,"column":43},"end":{"line":23,"column":18}},"20":{"start":{"line":24,"column":16},"end":{"line":24,"column":29}},"21":{"start":{"line":27,"column":16},"end":{"line":27,"column":87}},"22":{"start":{"line":28,"column":16},"end":{"line":28,"column":39}},"23":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":44},"end":{"line":31,"column":5}},"line":16},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":47},"end":{"line":17,"column":48}},"loc":{"start":{"line":17,"column":60},"end":{"line":30,"column":9}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":4,"2":0,"3":2,"4":4,"5":4,"6":0,"7":0,"8":0,"9":0,"10":6,"11":2,"12":1,"13":1,"14":1,"15":1,"16":2,"17":2,"18":2,"19":2,"20":2,"21":0,"22":0,"23":1},"f":{"0":2,"1":4,"2":0,"3":2,"4":4,"5":0,"6":6,"7":2,"8":2},"b":{"0":[1,1,1],"1":[4,0],"2":[2,2],"3":[2,4],"4":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/services/stats.service.ts","sources":["/Users/drodr25/Desktop/MutantDNAChecker/src/modules/stats/services/stats.service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,kEAAiE;AACjE,yEAAyE;AAEzE,MAAa,YAAY;IACV,0BAA0B,CACrC,WAAmB;;YAEnB,IAAI;gBACF,MAAM,WAAW,GAAG,MAAM,yBAAY,CAAC,cAAc,EAAE,CAAC;gBACxD,aAAa;gBACb,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,oCAAkB,EAAE;oBACpF,WAAW;iBACZ,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC;aACd;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,KAAK,CAAC,CAAC;gBACvE,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;aACxB;QACH,CAAC;KAAA;CACF;AAhBD,oCAgBC","sourcesContent":["import { ConnectionDB } from \"../../core/services/db/db.service\";\nimport { DNASequencesEntity } from \"../../core/entities/sequence.entity\";\n\nexport class StatsService {\n  public async countDNASequencesBySubject(\n    subjectType: string\n  ): Promise<number> {\n    try {\n      const queryRunner = await ConnectionDB.getQueryRunner();\n      // @ts-ignore\n      const [sequences, count] = await queryRunner.manager.findAndCount(DNASequencesEntity, {\n        subjectType,\n      });\n      return count;\n    } catch (error) {\n      console.log(\"[ERROR] couting DNA sequences by subject type %o\", error);\n      throw new Error(error);\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1e8dc24fa7c06e347645bf821741eeda18203ef0","contentHash":"b6680070de65a59f687aabd364822399e7a9a33407d99b8a942fa208d4261398"}}